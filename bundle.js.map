{
  "version": 3,
  "sources": [
    "../../../usr/local/lib/node_modules/ksana-cli/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "kage-glyph-sample/dgg.js",
    "kage-glyph-sample/index.js",
    "kage-glyph-sample/node_modules/kage/index.js",
    "kage-glyph-sample/src/kageglyph.js",
    "kage-glyph-sample/src/main.jsx",
    "kage-glyph-sample/src/singleglyph.js",
    "kage-glyph-sample/src/uniutil.js",
    "node_modules/ksana2015-webruntime/downloader.js",
    "node_modules/ksana2015-webruntime/html5fs.js",
    "node_modules/ksana2015-webruntime/ksanagap.js",
    "node_modules/ksana2015-webruntime/livereload.js",
    "node_modules/ksana2015-webruntime/mkdirp.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtkFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnnvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "// dgg.js -- functions for dynamic glyph generation\n\nvar decode=function(infos){\n\tvar glyphs=infos.split('$').map(function(info){\n\t\tvar values=info.split(\":\");\n\t\tvar t=values[0], sd=values[1], ed=values[2], x, y;\n\t\tvar points=[], xyPairs=values.slice(3);\n\t\txyPairs.forEach(function(v,i){ var n=v;\n\t\t\tif(i%2===0) x=n;\n\t\t\telse { y=n, points.push([parseInt(x),parseInt(y)]), x=undefined; }\n\t\t});\n\t\tvar glyph={t:parseInt(t),sd:parseInt(sd),ed:parseInt(ed),p:points};\n\t\tif(x!==undefined) {\n\t\t\tglyph.partId=x;\n\t\t//\tconsole.log(\"partId\",x);\n\t\t}\n\t\treturn glyph;\n\t})\n\treturn glyphs;\n}\n\nvar getPoints=function(glyphs){ \n\tvar points=[];\n\tglyphs.forEach(function(glyph){\n\t\tglyph.p.forEach(function(point){\n\t\t\tpoints.push(point);\n\t\t})\n\t});\n\treturn points;\n}\nvar getPartRect=function(glyphs,partId){ \n\tvar frameHieght, frameWidth;\n\tfor(var i=0; i<glyphs.length; i++){\n\t\tglyph=glyphs[i];\n\t\tif(glyph.partId===partId){\n\t\t\treturn glyph.p;\n\t\t}\n\t}\n}\nvar minimumBounding=function(points){\n\tif (typeof points==\"string\") {\n\t\tg=decode(points);\n\t\tpoints=getPoints(g);\n\t}\n\tvar mbf=[1000,1000,-1000,-1000];\n\tpoints.forEach( function(p){\n\t\tvar x=p[0],y=p[1];\n\t\tif (x<mbf[0]) mbf[0]=p[0];\n\t\tif (y<mbf[1]) mbf[1]=p[1];\n\n\t\tif (x>mbf[2]) mbf[2]=x;\n\t\tif (y>mbf[3]) mbf[3]=y;\n\t});\n\treturn mbf;\n}\nvar adjustMbf=function (mbf,rect){\n\tvar L=mbf[0], T=mbf[1], R=mbf[2], B=mbf[3];\n\tvar x=rect[0][0], y=rect[0][1];\n\tvar W=rect[1][0]-x, H=rect[1][1]-y;\n\treturn [Math.round(L*W/200)+x,Math.round(T*H/200)+y,Math.round(R*W/200)+x,Math.round(B*H/200)+y]\n}\nvar replace=function(c,d,a,data){\n// data= {\"u5b50\":\"1:0:2:40:31:149:31$2:22:7:149:31:136:49:102:79$1:0:4:100:72:100:182$1:0:0:14:102:186:102\",\"u53e3\":\"1:12:13:42:46:42:154$1:2:2:42:46:158:46$1:22:23:158:46:158:154$1:2:2:42:154:158:154\",\"u674e\":\"99:0:0:0:-2:200:216:u6728-03$99:0:0:13:101:188:181:u53e3\",\"u6728-03\":\"1:0:0:20:37:180:37$1:0:0:100:14:100:86$2:32:7:95:37:64:76:14:93$2:7:0:105:37:136:73:178:86\",\"u5b50-04\":\"1:12:13:42:46:42:154$1:2:2:42:46:158:46$1:22:23:158:46:158:154$1:2:2:42:154:158:154\",\"u674f\":\"1:0:0:16:49:185:49$1:0:0:100:18:100:109$2:32:7:94:49:71:90:16:118$2:7:0:105:49:135:89:178:111$0:0:0:0$99:0:0:14:-50:189:200:u53e3-04\",\"u53e3-04\":\"99:0:0:0:118:200:190:u53e3\"}\n// c=‘u674e’, d='u5b50’, a=‘u53e3’ // 將 李 u674e 的部件 子 u5b50 換成 口 u53e3\n\tvar dc=data[c]; // \"99:0:0:0:-2:200:216:u6728-03$99:0:0:0:-20:200:200:u5b50-04\" // 取得 李 的 資訊\n\tvar m=dc.match(RegExp('[^\"$]+:('+d+'[^\"]*)')) // 李 的 資訊 中 搜尋 部件 d\n\tif(!m){ // 若無 部件 d 就警示錯誤訊息\n\t\tconsole.log('error 01 ---- data[c] 無部件 d 資訊'); return;\n\t}\n\tvar ds=m[0] // \"99:0:0:0:-20:200:200:u5b50-04\"\n\tvar L=ds.split(':').map(function(n){\n    \treturn n.match(/^-?\\d+$/)?parseInt(n):n;\n\t}) // [99,0,0,0,-20,200,200,\"u5b50-04\"] d 的 邊框資訊\n\tr=[L.slice(3,5),L.slice(5,7)] // [[0,-20],[200,200]]\n\tm=minimumBounding(getPoints(decode(data[d]))) // d 的 最小邊界 []\n\trr=L.slice(0,3).join(':')+':'+adjustMbf(m,r).join(':')+':'+a;\n\treturn dc.replace(ds,rr); // \"99:0:0:0:-2:200:216:u6728-03$99:0:0:13:101:188:181:u53e3\"\n}\n\nmodule.exports={\n\tgetPoints: getPoints,\n\tdecode: decode,\n\tminimumBounding: minimumBounding,\n\tgetPartRect: getPartRect,\n\tadjustMbf: adjustMbf,\n\treplace: replace\n}",
    "var React=require(\"react\");\nrequire(\"ksana2015-webruntime/livereload\")(); \nvar ksanagap=require(\"ksana2015-webruntime/ksanagap\");\nksanagap.boot(\"kage-glyph-sample\",function(){\n\tvar Main=React.createElement(require(\"./src/main.jsx\"));\n\tksana.mainComponent=React.render(Main,document.getElementById(\"main\"));\n});",
    "// Reference : http://www.cam.hi-ho.ne.jp/strong_warriors/teacher/chapter0{4,5}.html\n\nfunction point(x, y){\n  this.x = x;\n  this.y = y;\n}\n\nfunction getCrossPoint(x11, y11, x12, y12, x21, y21, x22, y22){ // point\n  var a1 = y12 - y11;\n  var b1 = x11 - x12;\n  var c1 = -1 * a1 * x11 - b1 * y11;\n  var a2 = y22 - y21;\n  var b2 = x21 - x22;\n  var c2 = -1 * a2 * x21 - b2 * y21;\n  \n  var temp = b1 * a2 - b2 * a1;\n  if(temp == 0){ // parallel\n    return false;\n  }\n  return new point((c1 * b2 - c2 * b1) / temp, (a1 * c2 - a2 * c1) / temp);\n}\n\nfunction isCross(x11, y11, x12, y12, x21, y21, x22, y22){ // boolean\n  var temp = getCrossPoint(x11, y11, x12, y12, x21, y21, x22, y22);\n  if(!temp){ return false; }\n  if(x11 < x12 && (temp.x < x11 || x12 < temp.x) ||\n     x11 > x12 && (temp.x < x12 || x11 < temp.x) ||\n     y11 < y12 && (temp.y < y11 || y12 < temp.y) ||\n     y11 > y12 && (temp.y < y12 || y11 < temp.y)\n     ){\n    return false;\n  }\n  if(x21 < x22 && (temp.x < x21 || x22 < temp.x) ||\n     x21 > x22 && (temp.x < x22 || x21 < temp.x) ||\n     y21 < y22 && (temp.y < y21 || y22 < temp.y) ||\n     y21 > y22 && (temp.y < y22 || y21 < temp.y)\n     ){\n    return false;\n  }\n  return true;\n}\n\nfunction isCrossBox(x1, y1, x2, y2, bx1, by1, bx2, by2){ // boolean\n  if(isCross(x1, y1, x2, y2, bx1, by1, bx2, by1)){ return true; }\n  if(isCross(x1, y1, x2, y2, bx2, by1, bx2, by2)){ return true; }\n  if(isCross(x1, y1, x2, y2, bx1, by2, bx2, by2)){ return true; }\n  if(isCross(x1, y1, x2, y2, bx1, by1, bx1, by2)){ return true; }\n  return false;\n}\n\nfunction isCrossBoxWithOthers(strokesArray, i, bx1, by1, bx2, by2){ // boolean\n  for(var j = 0; j < strokesArray.length; j++){\n    if(i == j){ continue; }\n    switch(strokesArray[j][0]){\n    case 0:\n    case 8:\n    case 9:\n      break;\n    case 6:\n    case 7:\n      if(isCrossBox(strokesArray[j][7],\n                    strokesArray[j][8],\n                    strokesArray[j][9],\n                    strokesArray[j][10],\n                    bx1, by1, bx2, by2)){\n        return true;\n      }\n    case 2:\n    case 12:\n    case 3:\n      if(isCrossBox(strokesArray[j][5],\n                    strokesArray[j][6],\n                    strokesArray[j][7],\n                    strokesArray[j][8],\n                    bx1, by1, bx2, by2)){\n        return true;\n      }\n    default:\n      if(isCrossBox(strokesArray[j][3],\n                    strokesArray[j][4],\n                    strokesArray[j][5],\n                    strokesArray[j][6],\n                    bx1, by1, bx2, by2)){\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction isCrossWithOthers(strokesArray, i, bx1, by1, bx2, by2){ // boolean\n  for(var j = 0; j < strokesArray.length; j++){\n    if(i == j){ continue; }\n    switch(strokesArray[j][0]){\n    case 0:\n    case 8:\n    case 9:\n      break;\n    case 6:\n    case 7:\n      if(isCross(strokesArray[j][7],\n                 strokesArray[j][8],\n                 strokesArray[j][9],\n                 strokesArray[j][10],\n                 bx1, by1, bx2, by2)){\n        return true;\n      }\n    case 2:\n    case 12:\n    case 3:\n      if(isCross(strokesArray[j][5],\n                 strokesArray[j][6],\n                 strokesArray[j][7],\n                 strokesArray[j][8],\n                 bx1, by1, bx2, by2)){\n        return true;\n      }\n    default:\n      if(isCross(strokesArray[j][3],\n                 strokesArray[j][4],\n                 strokesArray[j][5],\n                 strokesArray[j][6],\n                 bx1, by1, bx2, by2)){\n        return true;\n      }\n    }\n  }\n  return false;\n}function Buhin(number){\n  // method\n  function set(name, data){ // void\n    this.hash[name] = data;\n  }\n  Buhin.prototype.push = set;\n  Buhin.prototype.set = set;\n  \n  function search(name){ // string\n    if(this.hash[name]){\n      return this.hash[name];\n    }\n    return \"\"; // no data\n  }\n  Buhin.prototype.search = search;\n  \n  // property\n  this.hash = {};\n  \n  // initialize\n  // no operation\n  \n  return this;\n}function divide_curve(kage, x1, y1, sx1, sy1, x2, y2, curve, div_curve, off_curve){\n  var rate = 0.5;\n  var cut = Math.floor(curve.length * rate);\n  var cut_rate = cut / curve.length;\n  var tx1 = x1 + (sx1 - x1) * cut_rate;\n  var ty1 = y1 + (sy1 - y1) * cut_rate;\n  var tx2 = sx1 + (x2 - sx1) * cut_rate;\n  var ty2 = sy1 + (y2 - sy1) * cut_rate;\n  var tx3 = tx1 + (tx2 - tx1) * cut_rate;\n  var ty3 = ty1 + (ty2 - ty1) * cut_rate;\n  \n  div_curve[0] = new Array();\n  div_curve[1] = new Array();\n  off_curve[0] = new Array(6);\n  off_curve[1] = new Array(6);\n  \n  // must think about 0 : <0\n  var i;\n  for(i = 0; i <= cut; i++){\n    div_curve[0].push(curve[i]);\n  }\n  off_curve[0][0] = x1;\n  off_curve[0][1] = y1;\n  off_curve[0][2] = tx1;\n  off_curve[0][3] = ty1;\n  off_curve[0][4] = tx3;\n  off_curve[0][5] = ty3;\n  \n  for(i = cut; i < curve.length; i++){\n    div_curve[1].push(curve[i]);\n  }\n  off_curve[1][0] = tx3;\n  off_curve[1][1] = ty3;\n  off_curve[1][2] = tx2;\n  off_curve[1][3] = ty2;\n  off_curve[1][4] = x2;\n  off_curve[1][5] = y2;\n}\n\n// ------------------------------------------------------------------\nfunction find_offcurve(kage, curve, sx, sy, result){\n  var nx1, ny1, nx2, ny2, tx, ty;\n  var minx, miny, count, diff;\n  var tt, t, x, y, ix, iy;\n  var mindiff = 100000;\n  var area = 8;\n  var mesh = 2;\n  // area = 10   mesh = 5 -> 281 calcs\n  // area = 10   mesh = 4 -> 180 calcs\n  // area =  8   mesh = 4 -> 169 calcs\n  // area =  7.5 mesh = 3 -> 100 calcs\n  // area =  8   mesh = 2 ->  97 calcs\n  // area =  7   mesh = 2 ->  80 calcs\n  \n  nx1 = curve[0][0];\n  ny1 = curve[0][1];\n  nx2 = curve[curve.length - 1][0];\n  ny2 = curve[curve.length - 1][1];\n  \n  for(tx = sx - area; tx < sx + area; tx += mesh){\n    for(ty = sy - area; ty < sy + area; ty += mesh){\n      count = 0;\n      diff = 0;\n      for(tt = 0; tt < curve.length; tt++){\n        t = tt / curve.length;\n        \n        //calculate a dot\n        x = ((1.0 - t) * (1.0 - t) * nx1 + 2.0 * t * (1.0 - t) * tx + t * t * nx2);\n        y = ((1.0 - t) * (1.0 - t) * ny1 + 2.0 * t * (1.0 - t) * ty + t * t * ny2);\n        \n        //KATAMUKI of vector by BIBUN\n        ix = (nx1 - 2.0 * tx + nx2) * 2.0 * t + (-2.0 * nx1 + 2.0 * tx);\n        iy = (ny1 - 2.0 * ty + ny2) * 2.0 * t + (-2.0 * ny1 + 2.0 * ty);\n        \n        diff += (curve[count][0] - x) * (curve[count][0] - x) + (curve[count][1] - y) * (curve[count][1] - y);\n        if(diff > mindiff){\n          tt = curve.length;\n        }\n        count++;\n      }\n      if(diff < mindiff){\n        minx = tx;\n        miny = ty;\n        mindiff = diff;\n      }\n    }\n  }\n  \n  for(tx = minx - mesh + 1; tx <= minx + mesh - 1; tx += 0.5){\n    for(ty = miny - mesh + 1; ty <= miny + mesh - 1; ty += 0.5){\n      count = 0;\n      diff = 0;\n      for(tt = 0; tt < curve.length; tt++){\n        t = tt / curve.length;\n        \n        //calculate a dot\n        x = ((1.0 - t) * (1.0 - t) * nx1 + 2.0 * t * (1.0 - t) * tx + t * t * nx2);\n        y = ((1.0 - t) * (1.0 - t) * ny1 + 2.0 * t * (1.0 - t) * ty + t * t * ny2);\n        \n        //KATAMUKI of vector by BIBUN\n        ix = (nx1 - 2.0 * tx + nx2) * 2.0 * t + (-2.0 * nx1 + 2.0 * tx);\n        iy = (ny1 - 2.0 * ty + ny2) * 2.0 * t + (-2.0 * ny1 + 2.0 * ty);\n        \n        diff += (curve[count][0] - x) * (curve[count][0] - x) + (curve[count][1] - y) * (curve[count][1] - y);\n        if(diff > mindiff){\n          tt = curve.length;\n        }\n        count++;\n      }\n      if(diff < mindiff){\n        minx = tx;\n        miny = ty;\n        mindiff = diff;\n      }\n    }\n  }\n  \n  result[0] = nx1;\n  result[1] = ny1;\n  result[2] = minx;\n  result[3] = miny;\n  result[4] = nx2;\n  result[5] = ny2;\n  result[6] = mindiff;\n}\n\n// ------------------------------------------------------------------\nfunction get_candidate(kage, curve, a1, a2, x1, y1, sx1, sy1, x2, y2, opt3, opt4){\n  var x, y, ix, iy, ir, ia, ib, tt, t, deltad;\n  var hosomi = 0.5;\n  \n  curve[0] = new Array();\n  curve[1] = new Array();\n  \n  for(tt = 0; tt <= 1000; tt = tt + kage.kRate){\n    t = tt / 1000;\n    \n    //calculate a dot\n    x = ((1.0 - t) * (1.0 - t) * x1 + 2.0 * t * (1.0 - t) * sx1 + t * t * x2);\n    y = ((1.0 - t) * (1.0 - t) * y1 + 2.0 * t * (1.0 - t) * sy1 + t * t * y2);\n    \n    //KATAMUKI of vector by BIBUN\n    ix = (x1 - 2.0 * sx1 + x2) * 2.0 * t + (-2.0 * x1 + 2.0 * sx1);\n    iy = (y1 - 2.0 * sy1 + y2) * 2.0 * t + (-2.0 * y1 + 2.0 * sy1);\n    //line SUICHOKU by vector\n    if(ix != 0 && iy != 0){\n      ir = Math.atan(iy / ix * -1);\n      ia = Math.sin(ir) * (kage.kMinWidthT);\n      ib = Math.cos(ir) * (kage.kMinWidthT);\n    }\n    else if(ix == 0){\n      ia = kage.kMinWidthT;\n      ib = 0;\n    }\n    else{\n      ia = 0;\n      ib = kage.kMinWidthT;\n    }\n    \n    if(a1 == 7 && a2 == 0){ // L2RD: fatten\n      deltad = Math.pow(t, hosomi) * kage.kL2RDfatten;\n    }\n    else if(a1 == 7){\n      deltad = Math.pow(t, hosomi);\n    }\n    else if(a2 == 7){\n      deltad = Math.pow(1.0 - t, hosomi);\n    }\n    else if(opt3 > 0){\n      deltad = (((kage.kMinWidthT - opt4 / 2) - opt3 / 2) / (kage.kMinWidthT - opt4 / 2)) + opt3 / 2 / (kage.kMinWidthT - opt4) * t;\n    }\n    else{ deltad = 1; }\n    \n    if(deltad < 0.15){\n      deltad = 0.15;\n    }\n    ia = ia * deltad;\n    ib = ib * deltad;\n    \n    //reverse if vector is going 2nd/3rd quadrants\n    if(ix <= 0){\n      ia = ia * -1;\n      ib = ib * -1;\n    }\n    \n    temp = new Array(2);\n    temp[0] = x - ia;\n    temp[1] = y - ib;\n    curve[0].push(temp);\n    temp = new Array(2);\n    temp[0] = x + ia;\n    temp[1] = y + ib;\n    curve[1].push(temp);\n  }\n}function Kage(size){\n  // method\n  function makeGlyph(polygons, buhin){ // void\n    var glyphData = this.kBuhin.search(buhin);\n    this.makeGlyph2(polygons, glyphData);\n  }\n  Kage.prototype.makeGlyph = makeGlyph;\n  \n  function makeGlyph2(polygons, data){ // void\n      if(data != \"\"){\n\t  var strokesArray = this.adjustKirikuchi(this.adjustUroko2(this.adjustUroko(this.adjustKakato(this.adjustTate(this.adjustMage(this.adjustHane(this.getEachStrokes(data))))))));\n\t  for(var i = 0; i < strokesArray.length; i++){\n\t      dfDrawFont(this, polygons,\n\t\t\t strokesArray[i][0],\n\t\t\t strokesArray[i][1],\n\t\t\t strokesArray[i][2],\n\t\t\t strokesArray[i][3],\n\t\t\t strokesArray[i][4],\n\t\t\t strokesArray[i][5],\n\t\t\t strokesArray[i][6],\n\t\t\t strokesArray[i][7],\n\t\t\t strokesArray[i][8],\n\t\t\t strokesArray[i][9],\n\t\t\t strokesArray[i][10]);\n\t  }\n      }\n  }\n  Kage.prototype.makeGlyph2 = makeGlyph2;\n  \n  function makeGlyph3(data){ // void\n      var result = new Array();\n      if(data != \"\"){\n\t  var strokesArray = this.adjustKirikuchi(this.adjustUroko2(this.adjustUroko(this.adjustKakato(this.adjustTate(this.adjustMage(this.adjustHane(this.getEachStrokes(data))))))));\n\t  for(var i = 0; i < strokesArray.length; i++){\n\t      var polygons = new Polygons();\n\t      dfDrawFont(this, polygons,\n\t\t\t strokesArray[i][0],\n\t\t\t strokesArray[i][1],\n\t\t\t strokesArray[i][2],\n\t\t\t strokesArray[i][3],\n\t\t\t strokesArray[i][4],\n\t\t\t strokesArray[i][5],\n\t\t\t strokesArray[i][6],\n\t\t\t strokesArray[i][7],\n\t\t\t strokesArray[i][8],\n\t\t\t strokesArray[i][9],\n\t\t\t strokesArray[i][10]);\n\t      result.push(polygons);\n\t  }\n      }\n      return result;\n  }\n  Kage.prototype.makeGlyph3 = makeGlyph3;\n  \n  function getEachStrokes(glyphData){ // strokes array\n    var strokesArray = new Array();\n    var strokes = glyphData.split(\"$\");\n    for(var i = 0; i < strokes.length; i++){\n      var columns = strokes[i].split(\":\");\n      if(Math.floor(columns[0]) != 99){\n        strokesArray.push([\n          Math.floor(columns[0]),\n          Math.floor(columns[1]),\n          Math.floor(columns[2]),\n          Math.floor(columns[3]),\n          Math.floor(columns[4]),\n          Math.floor(columns[5]),\n          Math.floor(columns[6]),\n          Math.floor(columns[7]),\n          Math.floor(columns[8]),\n          Math.floor(columns[9]),\n          Math.floor(columns[10])\n          ]);\n      } else {\n        var buhin = this.kBuhin.search(columns[7]);\n        if(buhin != \"\"){\n          strokesArray = strokesArray.concat(this.getEachStrokesOfBuhin(buhin,\n                                                  Math.floor(columns[3]),\n                                                  Math.floor(columns[4]),\n                                                  Math.floor(columns[5]),\n                                                  Math.floor(columns[6]),\n                                                  Math.floor(columns[1]),\n                                                  Math.floor(columns[2]),\n                                                  Math.floor(columns[9]),\n                                                  Math.floor(columns[10]))\n                            );\n        }\n      }\n    }\n    return strokesArray;\n  }\n  Kage.prototype.getEachStrokes = getEachStrokes;\n  \n  function getEachStrokesOfBuhin(buhin, x1, y1, x2, y2, sx, sy, sx2, sy2){\n    var temp = this.getEachStrokes(buhin);\n    var result = new Array();\n    var box = this.getBox(buhin);\n      if(sx != 0 || sy != 0){\n\t  if(sx > 100){\n\t      sx -= 200; // Ç¤°ÕÅÀ¥â¡¼¥É\n\t  } else {\n\t      sx2 = 0; // Ãæ¿´ÅÀ¥â¡¼¥É\n\t      sy2 = 0;\n\t  }\n      }\n    for(var i = 0; i < temp.length; i++){\n\tif(sx != 0 || sy != 0){\n\t    temp[i][3] = stretch(sx, sx2, temp[i][3], box.minX, box.maxX);\n\t    temp[i][4] = stretch(sy, sy2, temp[i][4], box.minY, box.maxY);\n\t    temp[i][5] = stretch(sx, sx2, temp[i][5], box.minX, box.maxX);\n\t    temp[i][6] = stretch(sy, sy2,temp[i][6], box.minY, box.maxY);\n\t    if(temp[i][0] != 99){\n\t\ttemp[i][7] = stretch(sx, sx2, temp[i][7], box.minX, box.maxX);\t\n\t\ttemp[i][8] = stretch(sy, sy2, temp[i][8], box.minY, box.maxY);\n\t\ttemp[i][9] = stretch(sx, sx2, temp[i][9], box.minX, box.maxX);\n\t\ttemp[i][10] = stretch(sy, sy2, temp[i][10], box.minY, box.maxY);\n\t    }\n\t}\n      result.push([temp[i][0],\n                   temp[i][1],\n                   temp[i][2],\n                   x1 + temp[i][3] * (x2 - x1) / 200,\n                   y1 + temp[i][4] * (y2 - y1) / 200,\n                   x1 + temp[i][5] * (x2 - x1) / 200,\n                   y1 + temp[i][6] * (y2 - y1) / 200,\n                   x1 + temp[i][7] * (x2 - x1) / 200,\n                   y1 + temp[i][8] * (y2 - y1) / 200,\n                   x1 + temp[i][9] * (x2 - x1) / 200,\n                   y1 + temp[i][10] * (y2 - y1) / 200]);\n    }\n    return result;\n  }\n  Kage.prototype.getEachStrokesOfBuhin = getEachStrokesOfBuhin;\n  \n  function adjustHane(sa){ // strokesArray\n      for(var i = 0; i < sa.length; i++){\n\t  if((sa[i][0] == 1 || sa[i][0] == 2 || sa[i][0] == 6) && sa[i][2] == 4){\n\t      var lpx; // lastPointX\n\t      var lpy; // lastPointY\n\t      if(sa[i][0] == 1){\n\t\t  lpx = sa[i][5];\n\t\t  lpy = sa[i][6];\n\t      } else if(sa[i][0] == 2){\n\t\t  lpx = sa[i][7];\n\t\t  lpy = sa[i][8];\n\t      } else {\n\t\t  lpx = sa[i][9];\n\t\t  lpy = sa[i][10];\n\t      }\n\t      var mn = Infinity; // mostNear\n\t      if(lpx + 18 < 100){\n\t\t  mn = lpx + 18;\n\t      }\n\t      for(var j = 0; j < sa.length; j++){\n\t\t  if(i != j && sa[j][0] == 1 && sa[j][3] == sa[j][5] && sa[j][3] < lpx && sa[j][4] <= lpy && sa[j][6] >= lpy){\n\t\t      if(lpx - sa[j][3] < 100){\n\t\t\t  mn = Math.min(mn, lpx - sa[j][3]);\n\t\t      }\n\t\t  }\n\t      }\n\t      if(mn != Infinity){\n\t\t  sa[i][2] += 700 - Math.floor(mn / 15) * 100; // 0-99 -> 0-700\n\t      }\n\t  }\n      }\n      return sa;\n  }\n  Kage.prototype.adjustHane = adjustHane;\n\n  function adjustUroko(strokesArray){ // strokesArray\n    for(var i = 0; i < strokesArray.length; i++){\n      if(strokesArray[i][0] == 1 && strokesArray[i][2] == 0){ // no operation for TATE\n        for(var k = 0; k < this.kAdjustUrokoLengthStep; k++){\n          var tx, ty, tlen;\n          if(strokesArray[i][4] == strokesArray[i][6]){ // YOKO\n            tx = strokesArray[i][5] - this.kAdjustUrokoLine[k];\n            ty = strokesArray[i][6] - 0.5;\n            tlen = strokesArray[i][5] - strokesArray[i][3];\n          } else {\n            var rad = Math.atan((strokesArray[i][6] - strokesArray[i][4]) / (strokesArray[i][5] - strokesArray[i][3]));\n            tx = strokesArray[i][5] - this.kAdjustUrokoLine[k] * Math.cos(rad) - 0.5 * Math.sin(rad);\n            ty = strokesArray[i][6] - this.kAdjustUrokoLine[k] * Math.sin(rad) - 0.5 * Math.cos(rad);\n            tlen = Math.sqrt((strokesArray[i][6] - strokesArray[i][4]) * (strokesArray[i][6] - strokesArray[i][4]) +\n                             (strokesArray[i][5] - strokesArray[i][3]) * (strokesArray[i][5] - strokesArray[i][3]));\n          }\n          if(tlen < this.kAdjustUrokoLength[k] ||\n             isCrossWithOthers(strokesArray, i, tx, ty, strokesArray[i][5], strokesArray[i][6])\n             ){\n            strokesArray[i][2] += (this.kAdjustUrokoLengthStep - k) * 100;\n            k = Infinity;\n          }\n        }\n      }\n    }\n    return strokesArray;\n  }\n  Kage.prototype.adjustUroko = adjustUroko;\n  \n  function adjustUroko2(strokesArray){ // strokesArray\n    for(var i = 0; i < strokesArray.length; i++){\n      if(strokesArray[i][0] == 1 && strokesArray[i][2] == 0 && strokesArray[i][4] == strokesArray[i][6]){\n        var pressure = 0;\n        for(var j = 0; j < strokesArray.length; j++){\n          if(i != j && (\n             (strokesArray[j][0] == 1 && strokesArray[j][4] == strokesArray[j][6] &&\n              !(strokesArray[i][3] + 1 > strokesArray[j][5] || strokesArray[i][5] - 1 < strokesArray[j][3]) &&\n              Math.abs(strokesArray[i][4] - strokesArray[j][4]) < this.kAdjustUroko2Length) ||\n             (strokesArray[j][0] == 3 && strokesArray[j][6] == strokesArray[j][8] &&\n              !(strokesArray[i][3] + 1 > strokesArray[j][7] || strokesArray[i][5] - 1 < strokesArray[j][5]) &&\n              Math.abs(strokesArray[i][4] - strokesArray[j][6]) < this.kAdjustUroko2Length)\n             )){\n            pressure += Math.pow(this.kAdjustUroko2Length - Math.abs(strokesArray[i][4] - strokesArray[j][6]), 1.1);\n          }\n        }\n        var result = Math.min(Math.floor(pressure / this.kAdjustUroko2Length), this.kAdjustUroko2Step) * 100;\n        if(strokesArray[i][2] < result){\n          strokesArray[i][2] = strokesArray[i][2] % 100 + Math.min(Math.floor(pressure / this.kAdjustUroko2Length), this.kAdjustUroko2Step) * 100;\n        }\n      }\n    }\n    return strokesArray;\n  }\n  Kage.prototype.adjustUroko2 = adjustUroko2;\n  \n  function adjustTate(strokesArray){ // strokesArray\n    for(var i = 0; i < strokesArray.length; i++){\n      if((strokesArray[i][0] == 1 || strokesArray[i][0] == 3 || strokesArray[i][0] == 7) && strokesArray[i][3] == strokesArray[i][5]){\n        for(var j = 0; j < strokesArray.length; j++){\n          if(i != j && (strokesArray[j][0] == 1 || strokesArray[j][0] == 3 || strokesArray[j][0] == 7) && strokesArray[j][3] == strokesArray[j][5] &&\n             !(strokesArray[i][4] + 1 > strokesArray[j][6] || strokesArray[i][6] - 1 < strokesArray[j][4]) &&\n             Math.abs(strokesArray[i][3] - strokesArray[j][3]) < this.kMinWidthT * this.kAdjustTateStep){\n            strokesArray[i][1] += (this.kAdjustTateStep - Math.floor(Math.abs(strokesArray[i][3] - strokesArray[j][3]) / this.kMinWidthT)) * 1000;\n            if(strokesArray[i][1] > this.kAdjustTateStep * 1000){\n              strokesArray[i][1] = strokesArray[i][1] % 1000 + this.kAdjustTateStep * 1000;\n            }\n          }\n        }\n      }\n    }\n    return strokesArray;\n  }\n  Kage.prototype.adjustTate = adjustTate;\n  \n  function adjustMage(strokesArray){ // strokesArray\n    for(var i = 0; i < strokesArray.length; i++){\n      if((strokesArray[i][0] == 3) && strokesArray[i][6] == strokesArray[i][8]){\n        for(var j = 0; j < strokesArray.length; j++){\n          if(i != j && (\n             (strokesArray[j][0] == 1 && strokesArray[j][4] == strokesArray[j][6] &&\n              !(strokesArray[i][5] + 1 > strokesArray[j][5] || strokesArray[i][7] - 1 < strokesArray[j][3]) &&\n              Math.abs(strokesArray[i][6] - strokesArray[j][4]) < this.kMinWidthT * this.kAdjustMageStep) ||\n             (strokesArray[j][0] == 3 && strokesArray[j][6] == strokesArray[j][8] &&\n              !(strokesArray[i][5] + 1 > strokesArray[j][7] || strokesArray[i][7] - 1 < strokesArray[j][5]) &&\n              Math.abs(strokesArray[i][6] - strokesArray[j][6]) < this.kMinWidthT * this.kAdjustMageStep)\n             )){\n            strokesArray[i][2] += (this.kAdjustMageStep - Math.floor(Math.abs(strokesArray[i][6] - strokesArray[j][6]) / this.kMinWidthT)) * 1000;\n            if(strokesArray[i][2] > this.kAdjustMageStep * 1000){\n              strokesArray[i][2] = strokesArray[i][2] % 1000 + this.kAdjustMageStep * 1000;\n            }\n          }\n        }\n      }\n    }\n    return strokesArray;\n  }\n  Kage.prototype.adjustMage = adjustMage;\n  \n  function adjustKirikuchi(strokesArray){ // strokesArray\n    for(var i = 0; i < strokesArray.length; i++){\n      if(strokesArray[i][0] == 2 && strokesArray[i][1] == 32 &&\n         strokesArray[i][3] > strokesArray[i][5] &&\n         strokesArray[i][4] < strokesArray[i][6]){\n        for(var j = 0; j < strokesArray.length; j++){ // no need to skip when i == j\n          if(strokesArray[j][0] == 1 &&\n             strokesArray[j][3] < strokesArray[i][3] && strokesArray[j][5] > strokesArray[i][3] &&\n             strokesArray[j][4] == strokesArray[i][4] && strokesArray[j][4] == strokesArray[j][6]){\n            strokesArray[i][1] = 132;\n            j = strokesArray.length;\n          }\n        }\n      }\n    }\n    return strokesArray;\n  }\n  Kage.prototype.adjustKirikuchi = adjustKirikuchi;\n  \n  function adjustKakato(strokesArray){ // strokesArray\n    for(var i = 0; i < strokesArray.length; i++){\n      if(strokesArray[i][0] == 1 &&\n         (strokesArray[i][2] == 13 || strokesArray[i][2] == 23)){\n        for(var k = 0; k < this.kAdjustKakatoStep; k++){\n          if(isCrossBoxWithOthers(strokesArray, i,\n                               strokesArray[i][5] - this.kAdjustKakatoRangeX / 2,\n                               strokesArray[i][6] + this.kAdjustKakatoRangeY[k],\n                               strokesArray[i][5] + this.kAdjustKakatoRangeX / 2,\n                               strokesArray[i][6] + this.kAdjustKakatoRangeY[k + 1])\n             | strokesArray[i][6] + this.kAdjustKakatoRangeY[k + 1] > 200 // adjust for baseline\n             | strokesArray[i][6] - strokesArray[i][4] < this.kAdjustKakatoRangeY[k + 1] // for thin box\n             ){\n            strokesArray[i][2] += (3 - k) * 100;\n            k = Infinity;\n          }\n        }\n      }\n    }\n    return strokesArray;\n  }\n  Kage.prototype.adjustKakato = adjustKakato;\n  \n  function getBox(glyph){ // minX, minY, maxX, maxY\n      var a = new Object();\n      a.minX = 200;\n      a.minY = 200;\n      a.maxX = 0;\n      a.maxY = 0;\n      \n      var strokes = this.getEachStrokes(glyph);\n      for(var i = 0; i < strokes.length; i++){\n\t  if(strokes[i][0] == 0){ continue; }\n\t  a.minX = Math.min(a.minX, strokes[i][3]);\n\t  a.maxX = Math.max(a.maxX, strokes[i][3]);\n\t  a.minY = Math.min(a.minY, strokes[i][4]);\n\t  a.maxY = Math.max(a.maxY, strokes[i][4]);\n\t  a.minX = Math.min(a.minX, strokes[i][5]);\n\t  a.maxX = Math.max(a.maxX, strokes[i][5]);\n\t  a.minY = Math.min(a.minY, strokes[i][6]);\n\t  a.maxY = Math.max(a.maxY, strokes[i][6]);\n\t  if(strokes[i][0] == 1){ continue; }\n\t  if(strokes[i][0] == 99){ continue; }\n\t  a.minX = Math.min(a.minX, strokes[i][7]);\n\t  a.maxX = Math.max(a.maxX, strokes[i][7]);\n\t  a.minY = Math.min(a.minY, strokes[i][8]);\n\t  a.maxY = Math.max(a.maxY, strokes[i][8]);\n\t  if(strokes[i][0] == 2){ continue; }\n\t  if(strokes[i][0] == 3){ continue; }\n\t  if(strokes[i][0] == 4){ continue; }\n\t  a.minX = Math.min(a.minX, strokes[i][9]);\n\t  a.maxX = Math.max(a.maxX, strokes[i][9]);\n\t  a.minY = Math.min(a.minY, strokes[i][10]);\n\t  a.maxY = Math.max(a.maxY, strokes[i][10]);\n      }\n      return a;\n  }\n  Kage.prototype.getBox = getBox;\n\n  function stretch(dp, sp, p, min, max){ // interger\n      var p1, p2, p3, p4;\n      if(p < sp + 100){\n\t  p1 = min;\n\t  p3 = min;\n\t  p2 = sp + 100;\n\t  p4 = dp + 100;\n      } else {\n\t  p1 = sp + 100;\n\t  p3 = dp + 100;\n\t  p2 = max;\n\t  p4 = max;\n      }\n      return Math.floor(((p - p1) / (p2 - p1)) * (p4 - p3) + p3);\n  }\n  Kage.prototype.stretch = stretch;\n\n  //properties\n  Kage.prototype.kMincho = 0;\n  Kage.prototype.kGothic = 1;\n  this.kShotai = this.kMincho;\n  \n  this.kRate = 100;\n  \n  if(size == 1){\n    this.kMinWidthY = 1.2;\n    this.kMinWidthT = 3.6;\n    this.kWidth = 3;\n    this.kKakato = 1.8;\n    this.kL2RDfatten = 1.1;\n    this.kMage = 6;\n    this.kUseCurve = 0;\n    \n    this.kAdjustKakatoL = ([8, 5, 3, 1]); // for KAKATO adjustment 000,100,200,300\n    this.kAdjustKakatoR = ([4, 3, 2, 1]); // for KAKATO adjustment 000,100,200,300\n    this.kAdjustKakatoRangeX = 12; // check area width\n    this.kAdjustKakatoRangeY = ([1, 11, 14, 18]); // 3 steps of checking\n    this.kAdjustKakatoStep = 3; // number of steps\n    \n    this.kAdjustUrokoX = ([14, 12, 9, 7]); // for UROKO adjustment 000,100,200,300\n    this.kAdjustUrokoY = ([7, 6, 5, 4]); // for UROKO adjustment 000,100,200,300\n    this.kAdjustUrokoLength = ([13, 21, 30]); // length for checking\n    this.kAdjustUrokoLengthStep = 3; // number of steps\n    this.kAdjustUrokoLine = ([13, 15, 18]); // check for crossing. corresponds to length\n  } else {\n    this.kMinWidthY = 2;\n    this.kMinWidthT = 6;\n    this.kWidth = 5;\n    this.kKakato = 3;\n    this.kL2RDfatten = 1.1;\n    this.kMage = 10;\n    this.kUseCurve = 0;\n    \n    this.kAdjustKakatoL = ([14, 9, 5, 2]); // for KAKATO adjustment 000,100,200,300\n    this.kAdjustKakatoR = ([8, 6, 4, 2]); // for KAKATO adjustment 000,100,200,300\n    this.kAdjustKakatoRangeX = 20; // check area width\n    this.kAdjustKakatoRangeY = ([1, 19, 24, 30]); // 3 steps of checking\n    this.kAdjustKakatoStep = 3; // number of steps\n    \n    this.kAdjustUrokoX = ([24, 20, 16, 12]); // for UROKO adjustment 000,100,200,300\n    this.kAdjustUrokoY = ([12, 11, 9, 8]); // for UROKO adjustment 000,100,200,300\n    this.kAdjustUrokoLength = ([22, 36, 50]); // length for checking\n    this.kAdjustUrokoLengthStep = 3; // number of steps\n    this.kAdjustUrokoLine = ([22, 26, 30]); // check for crossing. corresponds to length\n    \n    this.kAdjustUroko2Step = 3;\n    this.kAdjustUroko2Length = 40;\n    \n    this.kAdjustTateStep = 4;\n    \n    this.kAdjustMageStep = 5;\n  }\n  \n  this.kBuhin = new Buhin();\n  \n  return this;\n}\nfunction cdDrawCurveU(kage, polygons, x1, y1, sx1, sy1, sx2, sy2, x2, y2, ta1, ta2){\n  var rad, t;\n  var x, y, v;\n  var ix, iy, ia, ib, ir;\n  var tt;\n  var delta;\n  var deltad;\n  var XX, XY, YX, YY;\n  var poly, poly2;\n  var hosomi;\n  var kMinWidthT, kMinWidthT2;\n  var a1, a2, opt1, opt2, opt3, opt4;\n  \n  if(kage.kShotai == kage.kMincho){ // mincho\n    a1 = ta1 % 1000;\n    a2 = ta2 % 100;\n    opt1 = Math.floor((ta1 % 10000) / 1000);\n    opt2 = Math.floor((ta2 % 1000) / 100);\n    opt3 = Math.floor(ta1 / 10000);\n    opt4 = Math.floor(ta2 / 1000);\n    \n    kMinWidthT = kage.kMinWidthT - opt1 / 2;\n    kMinWidthT2 = kage.kMinWidthT - opt4 / 2;\n    \n    switch(a1 % 100){\n    case 0:\n    case 7:\n      delta = -1 * kage.kMinWidthY * 0.5;\n      break;\n    case 1:\n    case 2: // ... must be 32\n    case 6:\n    case 22:\n    case 32: // changed\n      delta = 0;\n      break;\n    case 12:\n    //case 32:\n      delta = kage.kMinWidthY;\n      break;\n    default:\n      break;\n    }\n    \n    if(x1 == sx1){\n      if(y1 < sy1){ y1 = y1 - delta; }\n      else{ y1 = y1 + delta; }\n    }\n    else if(y1 == sy1){\n      if(x1 < sx1){ x1 = x1 - delta; }\n      else{ x1 = x1 + delta; }\n    }\n    else{\n      rad = Math.atan((sy1 - y1) / (sx1 - x1));\n      if(x1 < sx1){ v = 1; } else{ v = -1; }\n      x1 = x1 - delta * Math.cos(rad) * v;\n      y1 = y1 - delta * Math.sin(rad) * v;\n    }\n    \n    switch(a2 % 100){\n    case 0:\n    case 1:\n    case 7:\n    case 9:\n    case 15: // it can change to 15->5\n    case 14: // it can change to 14->4\n    case 17: // no need\n    case 5:\n      delta = 0;\n      break;\n    case 8: // get shorten for tail's circle\n      delta = -1 * kMinWidthT * 0.5;\n      break;\n    default:\n      break;\n    }\n    \n    if(sx2 == x2){\n      if(sy2 < y2){ y2 = y2 + delta; }\n      else{ y2 = y2 - delta; }\n    }\n    else if(sy2 == y2){\n      if(sx2 < x2){ x2 = x2 + delta; }\n      else{ x2 = x2 - delta; }\n    }\n    else{\n      rad = Math.atan((y2 - sy2) / (x2 - sx2));\n      if(sx2 < x2){ v = 1; } else{ v = -1; }\n      x2 = x2 + delta * Math.cos(rad) * v;\n      y2 = y2 + delta * Math.sin(rad) * v;\n    }\n    \n    hosomi = 0.5;\n    if(Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) < 50){\n      hosomi += 0.4 * (1 - Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) / 50);\n    }\n    \n    //---------------------------------------------------------------\n    \n    poly = new Polygon();\n    poly2 = new Polygon();\n    \n    if(sx1 == sx2 && sy1 == sy2){ // Spline\n      if(kage.kUseCurve){\n        // generating fatten curve -- begin\n        var kage2 = new Kage();\n        kage2.kMinWidthY = kage.kMinWidthY;\n        kage2.kMinWidthT = kMinWidthT;\n        kage2.kWidth = kage.kWidth;\n        kage2.kKakato = kage.kKakato;\n        kage2.kRate = 10;\n        \n        var curve = new Array(2); // L and R\n        get_candidate(kage2, curve, a1, a2, x1, y1, sx1, sy1, x2, y2, opt3, opt4);\n        \n        var dcl12_34 = new Array(2);\n        var dcr12_34 = new Array(2);\n        var dpl12_34 = new Array(2);\n        var dpr12_34 = new Array(2);\n        divide_curve(kage2, x1, y1, sx1, sy1, x2, y2, curve[0], dcl12_34, dpl12_34);\n        divide_curve(kage2, x1, y1, sx1, sy1, x2, y2, curve[1], dcr12_34, dpr12_34);\n        \n        var ncl1 = new Array(7);\n        var ncl2 = new Array(7);\n        find_offcurve(kage2, dcl12_34[0], dpl12_34[0][2], dpl12_34[0][3], ncl1);\n        find_offcurve(kage2, dcl12_34[1], dpl12_34[1][2], dpl12_34[1][3], ncl2);\n        \n        poly.push(ncl1[0], ncl1[1]);\n        poly.push(ncl1[2], ncl1[3], 1);\n        poly.push(ncl1[4], ncl1[5]);\n        poly.push(ncl2[2], ncl2[3], 1);\n        poly.push(ncl2[4], ncl2[5]);\n        \n        poly2.push(dcr12_34[0][0][0], dcr12_34[0][0][1]);\n        poly2.push(dpr12_34[0][2] - (ncl1[2] - dpl12_34[0][2]), dpl12_34[0][3] - (ncl1[3] - dpl12_34[0][3]), 1);\n        poly2.push(dcr12_34[0][dcr12_34[0].length - 1][0], dcr12_34[0][dcr12_34[0].length - 1][1]);\n        poly2.push(dpr12_34[1][2] - (ncl2[2] - dpl12_34[1][2]), dpl12_34[1][3] - (ncl2[3] - dpl12_34[1][3]), 1);\n        poly2.push(dcr12_34[1][dcr12_34[1].length - 1][0], dcr12_34[1][dcr12_34[1].length - 1][1]);\n        \n        poly2.reverse();\n        poly.concat(poly2);\n        polygons.push(poly);\n        // generating fatten curve -- end\n      } else {\n        for(tt = 0; tt <= 1000; tt = tt + kage.kRate){\n          t = tt / 1000;\n          \n          // calculate a dot\n          x = ((1.0 - t) * (1.0 - t) * x1 + 2.0 * t * (1.0 - t) * sx1 + t * t * x2);\n          y = ((1.0 - t) * (1.0 - t) * y1 + 2.0 * t * (1.0 - t) * sy1 + t * t * y2);\n          \n          // KATAMUKI of vector by BIBUN\n          ix = (x1 - 2.0 * sx1 + x2) * 2.0 * t + (-2.0 * x1 + 2.0 * sx1);\n          iy = (y1 - 2.0 * sy1 + y2) * 2.0 * t + (-2.0 * y1 + 2.0 * sy1);\n          \n          // line SUICHOKU by vector\n          if(ix != 0 && iy != 0){\n            ir = Math.atan(iy / ix * -1);\n            ia = Math.sin(ir) * (kMinWidthT);\n            ib = Math.cos(ir) * (kMinWidthT);\n          }\n          else if(ix == 0){\n            ia = kMinWidthT;\n            ib = 0;\n          }\n          else{\n            ia = 0;\n            ib = kMinWidthT;\n          }\n          \n          if(a1 == 7 && a2 == 0){ // L2RD: fatten\n            deltad = Math.pow(t, hosomi) * kage.kL2RDfatten;\n          }\n          else if(a1 == 7){\n            deltad = Math.pow(t, hosomi);\n          }\n          else if(a2 == 7){\n            deltad = Math.pow(1.0 - t, hosomi);\n          }\n          else if(opt3 > 0 || opt4 > 0){\n              deltad = ((kage.kMinWidthT - opt3 / 2) - (opt4 - opt3) / 2 * t) / kage.kMinWidthT;\n          }\n          else{ deltad = 1; }\n          \n          if(deltad < 0.15){\n            deltad = 0.15;\n          }\n          ia = ia * deltad;\n          ib = ib * deltad;\n          \n          //reverse if vector is going 2nd/3rd quadrants\n          if(ix <= 0){\n            ia = ia * -1;\n            ib = ib * -1;\n          }\n          \n          //copy to polygon structure\n          poly.push(x - ia, y - ib);\n          poly2.push(x + ia, y + ib);\n        }\n        \n        // suiheisen ni setsuzoku\n        if(a1 == 132){\n          var index = 0;\n          while(true){\n            if(poly2.array[index].y <= y1 && y1 <= poly2.array[index + 1].y){\n              break;\n            }\n            index++;\n          }\n          newx1 = poly2.array[index + 1].x + (poly2.array[index].x - poly2.array[index + 1].x) *\n            (poly2.array[index + 1].y - y1) / (poly2.array[index + 1].y - poly2.array[index].y);\n          newy1 = y1;\n          newx2 = poly.array[0].x + (poly.array[0].x - poly.array[1].x) * (poly.array[0].y - y1) /\n            (poly.array[1].y - poly.array[0].y);\n          newy2 = y1;\n          \n          for(var i = 0; i < index; i++){\n            poly2.shift();\n          }\n          poly2.set(0, newx1, newy1);\n          poly.unshift(newx2, newy2);\n        }\n        \n        // suiheisen ni setsuzoku 2\n        if(a1 == 22 && y1 > y2){\n          var index = 0;\n          while(true){\n            if(poly2.array[index].y <= y1 && y1 <= poly2.array[index + 1].y){\n              break;\n            }\n            index++;\n          }\n          newx1 = poly2.array[index + 1].x + (poly2.array[index].x - poly2.array[index + 1].x) *\n            (poly2.array[index + 1].y - y1) / (poly2.array[index + 1].y - poly2.array[index].y);\n          newy1 = y1;\n          newx2 = poly.array[0].x + (poly.array[0].x - poly.array[1].x - 1) * (poly.array[0].y - y1) /\n            (poly.array[1].y - poly.array[0].y);\n          newy2 = y1 + 1;\n          \n          for(var i = 0; i < index; i++){\n            poly2.shift();\n          }\n          poly2.set(0, newx1, newy1);\n          poly.unshift(newx2, newy2);\n        }\n        \n        poly2.reverse();\n        poly.concat(poly2);\n        polygons.push(poly);\n      }\n    } else { // Bezier\n      for(tt = 0; tt <= 1000; tt = tt + kage.kRate){\n        t = tt / 1000;\n        \n        // calculate a dot\n        x = (1.0 - t) * (1.0 - t) * (1.0 - t) * x1 + 3.0 * t * (1.0 - t) * (1.0 - t) * sx1 + 3 * t * t * (1.0 - t) * sx2 + t * t * t * x2;\n        y = (1.0 - t) * (1.0 - t) * (1.0 - t) * y1 + 3.0 * t * (1.0 - t) * (1.0 - t) * sy1 + 3 * t * t * (1.0 - t) * sy2 + t * t * t * y2;\n        // KATAMUKI of vector by BIBUN\n        ix = t * t * (-3 * x1 + 9 * sx1 + -9 * sx2 + 3 * x2) + t * (6 * x1 + -12 * sx1 + 6 * sx2) + -3 * x1 + 3 * sx1;\n        iy = t * t * (-3 * y1 + 9 * sy1 + -9 * sy2 + 3 * y2) + t * (6 * y1 + -12 * sy1 + 6 * sy2) + -3 * y1 + 3 * sy1;\n        \n        // line SUICHOKU by vector\n        if(ix != 0 && iy != 0){\n          ir = Math.atan(iy / ix * -1);\n          ia = Math.sin(ir) * (kMinWidthT);\n          ib = Math.cos(ir) * (kMinWidthT);\n        }\n        else if(ix == 0){\n          ia = kMinWidthT;\n          ib = 0;\n        }\n        else{\n          ia = 0;\n          ib = kMinWidthT;\n        }\n        \n        if(a1 == 7 && a2 == 0){ // L2RD: fatten\n          deltad = Math.pow(t, hosomi) * kage.kL2RDfatten;\n        }\n        else if(a1 == 7){\n          deltad = Math.pow(t, hosomi);\n          deltad = Math.pow(deltad, 0.7); // make fatten\n        }\n        else if(a2 == 7){\n          deltad = Math.pow(1.0 - t, hosomi);\n        }\n        else{ deltad = 1; }\n        \n        if(deltad < 0.15){\n          deltad = 0.15;\n        }\n        ia = ia * deltad;\n        ib = ib * deltad;\n        \n        //reverse if vector is going 2nd/3rd quadrants\n        if(ix <= 0){\n          ia = ia * -1;\n          ib = ib * -1;\n        }\n        \n        //copy to polygon structure\n        poly.push(x - ia, y - ib);\n        poly2.push(x + ia, y + ib);\n      }\n      \n      // suiheisen ni setsuzoku\n      if(a1 == 132){\n        var index = 0;\n        while(true){\n          if(poly2.array[index].y <= y1 && y1 <= poly2.array[index + 1].y){\n            break;\n          }\n          index++;\n        }\n        newx1 = poly2.array[index + 1].x + (poly2.array[index].x - poly2.array[index + 1].x) *\n          (poly2.array[index + 1].y - y1) / (poly2.array[index + 1].y - poly2.array[index].y);\n        newy1 = y1;\n        newx2 = poly.array[0].x + (poly.array[0].x - poly.array[1].x) * (poly.array[0].y - y1) /\n          (poly.array[1].y - poly.array[0].y);\n        newy2 = y1;\n        \n        for(var i = 0; i < index; i++){\n          poly2.shift();\n        }\n        poly2.set(0, newx1, newy1);\n        poly.unshift(newx2, newy2);\n      }\n      \n      // suiheisen ni setsuzoku 2\n      if(a1 == 22){\n        var index = 0;\n        while(true){\n          if(poly2.array[index].y <= y1 && y1 <= poly2.array[index + 1].y){\n            break;\n          }\n          index++;\n        }\n        newx1 = poly2.array[index + 1].x + (poly2.array[index].x - poly2.array[index + 1].x) *\n          (poly2.array[index + 1].y - y1) / (poly2.array[index + 1].y - poly2.array[index].y);\n        newy1 = y1;\n        newx2 = poly.array[0].x + (poly.array[0].x - poly.array[1].x - 1) * (poly.array[0].y - y1) /\n          (poly.array[1].y - poly.array[0].y);\n        newy2 = y1 + 1;\n        \n        for(var i = 0; i < index; i++){\n          poly2.shift();\n        }\n        poly2.set(0, newx1, newy1);\n        poly.unshift(newx2, newy2);\n      }\n      \n      poly2.reverse();\n      poly.concat(poly2);\n      polygons.push(poly);\n    }\n    \n    //process for head of stroke\n    rad = Math.atan((sy1 - y1) / (sx1 - x1));\n    if(x1 < sx1){ v = 1; } else{ v = -1; }\n    XX = Math.sin(rad) * v;\n    XY = Math.cos(rad) * v * -1;\n    YX = Math.cos(rad) * v;\n    YY = Math.sin(rad) * v;\n    \n    if(a1 == 12){\n      if(x1 == x2){\n        poly= new Polygon();\n        poly.push(x1 - kMinWidthT, y1);\n        poly.push(x1 + kMinWidthT, y1);\n        poly.push(x1 - kMinWidthT, y1 - kMinWidthT);\n        polygons.push(poly);\n      }\n      else{\n        poly = new Polygon();\n        poly.push(x1 - kMinWidthT * XX, y1 - kMinWidthT * XY);\n        poly.push(x1 + kMinWidthT * XX, y1 + kMinWidthT * XY);\n        poly.push(x1 - kMinWidthT * XX - kMinWidthT * YX, y1 - kMinWidthT * XY - kMinWidthT * YY);\n        polygons.push(poly);\n      }\n    }\n    \n    var type;\n    var pm = 0;\n    if(a1 == 0){\n      if(y1 <= y2){ //from up to bottom\n        type = (Math.atan2(Math.abs(y1 - sy1), Math.abs(x1 - sx1)) / Math.PI * 2 - 0.4);\n        if(type > 0){\n          type = type * 2;\n        } else {\n          type = type * 16;\n        }\n        if(type < 0){\n          pm = -1;\n        } else {\n          pm = 1;\n        }\n        if(x1 == sx1){\n          poly = new Polygon();\n          poly.push(x1 - kMinWidthT, y1 + 1);\n          poly.push(x1 + kMinWidthT, y1);\n          poly.push(x1 - kMinWidthT * pm, y1 - kage.kMinWidthY * type * pm);\n          //if(x1 > x2){\n          //  poly.reverse();\n          //}\n          polygons.push(poly);\n        }\n        else{\n          poly = new Polygon();\n          poly.push(x1 - kMinWidthT * XX + 1 * YX, y1 - kMinWidthT * XY + 1 * YY);\n          poly.push(x1 + kMinWidthT * XX, y1 + kMinWidthT * XY);\n          poly.push(x1 - kMinWidthT * pm * XX - kage.kMinWidthY * type * pm * YX, y1 - kMinWidthT * pm * XY - kage.kMinWidthY * type * pm * YY);\n          //if(x1 > x2){\n          //  poly.reverse();\n          //}\n          polygons.push(poly);\n        }\n      }\n      else{ //bottom to up\n        if(x1 == sx1){\n          poly = new Polygon();\n          poly.push(x1 - kMinWidthT, y1);\n          poly.push(x1 + kMinWidthT, y1);\n          poly.push(x1 + kMinWidthT, y1 - kage.kMinWidthY);\n          polygons.push(poly);\n        }\n        else{\n          poly = new Polygon();\n          poly.push(x1 - kMinWidthT * XX, y1 - kMinWidthT * XY);\n          poly.push(x1 + kMinWidthT * XX, y1 + kMinWidthT * XY);\n          poly.push(x1 + kMinWidthT * XX - kage.kMinWidthY * YX, y1 + kMinWidthT * XY - kage.kMinWidthY * YY);\n          //if(x1 < x2){\n          //  poly.reverse();\n          //}\n          polygons.push(poly);\n        }\n      }\n    }\n    \n    if(a1 == 22){ //box's up-right corner, any time same degree\n      poly = new Polygon();\n      poly.push(x1 - kMinWidthT, y1 - kage.kMinWidthY);\n      poly.push(x1, y1 - kage.kMinWidthY - kage.kWidth);\n      poly.push(x1 + kMinWidthT + kage.kWidth, y1 + kage.kMinWidthY);\n      poly.push(x1 + kMinWidthT, y1 + kMinWidthT - 1);\n      poly.push(x1 - kMinWidthT, y1 + kMinWidthT + 4);\n      polygons.push(poly);\n    }\n    \n    if(a1 == 0){ //beginning of the stroke\n      if(y1 <= y2){ //from up to bottom\n        if(pm > 0){\n          type = 0;\n        }\n        var move = kage.kMinWidthY * type * pm;\n        if(x1 == sx1){\n          poly = new Polygon();\n          poly.push(x1 + kMinWidthT, y1 - move);\n          poly.push(x1 + kMinWidthT * 1.5, y1 + kage.kMinWidthY - move);\n          poly.push(x1 + kMinWidthT - 2, y1 + kage.kMinWidthY * 2 + 1);\n          polygons.push(poly);\n        }\n        else{\n          poly = new Polygon();\n          poly.push(x1 + kMinWidthT * XX - move * YX,\n                    y1 + kMinWidthT * XY - move * YY);\n          poly.push(x1 + kMinWidthT * 1.5 * XX + (kage.kMinWidthY - move * 1.2) * YX,\n                    y1 + kMinWidthT * 1.5 * XY + (kage.kMinWidthY - move * 1.2) * YY);\n          poly.push(x1 + (kMinWidthT - 2) * XX + (kage.kMinWidthY * 2 - move * 0.8 + 1) * YX,\n                    y1 + (kMinWidthT - 2) * XY + (kage.kMinWidthY * 2 - move * 0.8 + 1) * YY);\n          //if(x1 < x2){\n          //  poly.reverse();\n          //}\n          polygons.push(poly);\n        }\n      }\n      else{ //from bottom to up\n        if(x1 == sx1){\n          poly = new Polygon();\n          poly.push(x1 - kMinWidthT, y1);\n          poly.push(x1 - kMinWidthT * 1.5, y1 + kage.kMinWidthY);\n          poly.push(x1 - kMinWidthT * 0.5, y1 + kage.kMinWidthY * 3);\n          polygons.push(poly);\n        }\n        else{\n          poly = new Polygon();\n          poly.push(x1 - kMinWidthT * XX, y1 - kMinWidthT * XY);\n          poly.push(x1 - kMinWidthT * 1.5 * XX + kage.kMinWidthY * YX, y1 + kage.kMinWidthY * YY - kMinWidthT * 1.5 * XY);\n          poly.push(x1 - kMinWidthT * 0.5 * XX + kage.kMinWidthY * 3 * YX, y1 + kage.kMinWidthY * 3 * YY - kMinWidthT * 0.5 * XY);\n          //if(x1 < x2){\n          //  poly.reverse();\n          //}\n          polygons.push(poly);\n        }\n      }\n    }\n    \n    //process for tail\n    rad = Math.atan((y2 - sy2) / (x2 - sx2));\n    if(sx2 < x2){ v = 1; } else{ v = -1; }\n    YX = Math.sin(rad) * v * -1;\n    YY = Math.cos(rad) * v;\n    XX = Math.cos(rad) * v;\n    XY = Math.sin(rad) * v;\n    \n    if(a2 == 1 || a2 == 8 || a2 == 15){ //the last filled circle ... it can change 15->5\n      if(sx2 == x2){\n        poly = new Polygon();\n        if(kage.kUseCurve){\n          // by curve path\n          poly.push(x2 - kMinWidthT2, y2);\n          poly.push(x2 - kMinWidthT2 * 0.9, y2 + kMinWidthT2 * 0.9, 1);\n          poly.push(x2, y2 + kMinWidthT2);\n          poly.push(x2 + kMinWidthT2 * 0.9, y2 + kMinWidthT2 * 0.9, 1);\n          poly.push(x2 + kMinWidthT2, y2);\n        } else {\n          // by polygon\n          poly.push(x2 - kMinWidthT2, y2);\n          poly.push(x2 - kMinWidthT2 * 0.7, y2 + kMinWidthT2 * 0.7);\n          poly.push(x2, y2 + kMinWidthT2);\n          poly.push(x2 + kMinWidthT2 * 0.7, y2 + kMinWidthT2 * 0.7);\n          poly.push(x2 + kMinWidthT2, y2);\n        }\n        polygons.push(poly);\n      }\n      else if(sy2 == y2){\n        poly = new Polygon();\n        if(kage.kUseCurve){\n          // by curve path\n          poly.push(x2, y2 - kMinWidthT2);\n          poly.push(x2 + kMinWidthT2 * 0.9, y2 - kMinWidthT2 * 0.9, 1);\n          poly.push(x2 + kMinWidthT2, y2);\n          poly.push(x2 + kMinWidthT2 * 0.9, y2 + kMinWidthT2 * 0.9, 1);\n          poly.push(x2, y2 + kMinWidthT2);\n        } else {\n          // by polygon\n          poly.push(x2, y2 - kMinWidthT2);\n          poly.push(x2 + kMinWidthT2 * 0.7, y2 - kMinWidthT2 * 0.7);\n          poly.push(x2 + kMinWidthT2, y2);\n          poly.push(x2 + kMinWidthT2 * 0.7, y2 + kMinWidthT2 * 0.7);\n          poly.push(x2, y2 + kMinWidthT2);\n        }\n        polygons.push(poly);\n      }\n      else{\n        poly = new Polygon();\n        if(kage.kUseCurve){\n          poly.push(x2 + Math.sin(rad) * kMinWidthT2 * v, y2 - Math.cos(rad) * kMinWidthT2 * v);\n          poly.push(x2 + Math.cos(rad) * kMinWidthT2 * 0.9 * v + Math.sin(rad) * kMinWidthT2 * 0.9 * v,\n                    y2 + Math.sin(rad) * kMinWidthT2 * 0.9 * v - Math.cos(rad) * kMinWidthT2 * 0.9 * v, 1);\n          poly.push(x2 + Math.cos(rad) * kMinWidthT2 * v, y2 + Math.sin(rad) * kMinWidthT2 * v);\n          poly.push(x2 + Math.cos(rad) * kMinWidthT2 * 0.9 * v - Math.sin(rad) * kMinWidthT2 * 0.9 * v,\n                    y2 + Math.sin(rad) * kMinWidthT2 * 0.9 * v + Math.cos(rad) * kMinWidthT2 * 0.9 * v, 1);\n          poly.push(x2 - Math.sin(rad) * kMinWidthT2 * v, y2 + Math.cos(rad) * kMinWidthT2 * v);\n        } else {\n          poly.push(x2 + Math.sin(rad) * kMinWidthT2 * v, y2 - Math.cos(rad) * kMinWidthT2 * v);\n          poly.push(x2 + Math.cos(rad) * kMinWidthT2 * 0.7 * v + Math.sin(rad) * kMinWidthT2 * 0.7 * v,\n                    y2 + Math.sin(rad) * kMinWidthT2 * 0.7 * v - Math.cos(rad) * kMinWidthT2 * 0.7 * v);\n          poly.push(x2 + Math.cos(rad) * kMinWidthT2 * v, y2 + Math.sin(rad) * kMinWidthT2 * v);\n          poly.push(x2 + Math.cos(rad) * kMinWidthT2 * 0.7 * v - Math.sin(rad) * kMinWidthT2 * 0.7 * v,\n                    y2 + Math.sin(rad) * kMinWidthT2 * 0.7 * v + Math.cos(rad) * kMinWidthT2 * 0.7 * v);\n          poly.push(x2 - Math.sin(rad) * kMinWidthT2 * v, y2 + Math.cos(rad) * kMinWidthT2 * v);\n        }\n        polygons.push(poly);\n      }\n    }\n    \n    if(a2 == 9 || (a1 == 7 && a2 == 0)){ // Math.sinnyu & L2RD Harai ... no need for a2=9\n      var type = (Math.atan2(Math.abs(y2 - sy2), Math.abs(x2 - sx2)) / Math.PI * 2 - 0.6);\n      if(type > 0){\n        type = type * 8;\n      } else {\n        type = type * 3;\n      }\n      var pm = 0;\n      if(type < 0){\n        pm = -1;\n      } else {\n        pm = 1;\n      }\n      if(sy2 == y2){\n        poly = new Polygon();\n        poly.push(x2, y2 + kMinWidthT * kage.kL2RDfatten);\n        poly.push(x2, y2 - kMinWidthT * kage.kL2RDfatten);\n        poly.push(x2 + kMinWidthT * kage.kL2RDfatten * Math.abs(type), y2 + kMinWidthT * kage.kL2RDfatten * pm);\n        polygons.push(poly);\n      }\n      else{\n        poly = new Polygon();\n        poly.push(x2 + kMinWidthT * kage.kL2RDfatten * YX, y2 + kMinWidthT * kage.kL2RDfatten * YY);\n        poly.push(x2 - kMinWidthT * kage.kL2RDfatten * YX, y2 - kMinWidthT * kage.kL2RDfatten * YY);\n        poly.push(x2 + kMinWidthT * kage.kL2RDfatten * Math.abs(type) * XX + kMinWidthT * kage.kL2RDfatten * pm * YX,\n                  y2 + kMinWidthT * kage.kL2RDfatten * Math.abs(type) * XY + kMinWidthT * kage.kL2RDfatten * pm * YY);\n        polygons.push(poly);\n      }\n    }\n    \n    if(a2 == 15){ //jump up ... it can change 15->5\n      // anytime same degree\n      poly = new Polygon();\n      if(y1 < y2){\n        poly.push(x2, y2 - kMinWidthT + 1);\n        poly.push(x2 + 2, y2 - kMinWidthT - kage.kWidth * 5);\n        poly.push(x2, y2 - kMinWidthT - kage.kWidth * 5);\n        poly.push(x2 - kMinWidthT, y2 - kMinWidthT + 1);\n      } else {\n        poly.push(x2, y2 + kMinWidthT - 1);\n        poly.push(x2 - 2, y2 + kMinWidthT + kage.kWidth * 5);\n        poly.push(x2, y2 + kMinWidthT + kage.kWidth * 5);\n        poly.push(x2 + kMinWidthT, y2 + kMinWidthT - 1);\n      }\n      polygons.push(poly);\n    }\n    \n    if(a2 == 14){ //jump to left, allways go left\n      poly = new Polygon();\n      poly.push(x2, y2);\n      poly.push(x2, y2 - kMinWidthT);\n      poly.push(x2 - kage.kWidth * 4 * Math.min(1 - opt2 / 10, Math.pow(kMinWidthT / kage.kMinWidthT, 3)), y2 - kMinWidthT);\n      poly.push(x2 - kage.kWidth * 4 * Math.min(1 - opt2 / 10, Math.pow(kMinWidthT / kage.kMinWidthT, 3)), y2 - kMinWidthT * 0.5);\n      //poly.reverse();\n      polygons.push(poly);\n    }\n  }\n  else{ //gothic\n    if(a1 % 10 == 2){\n      if(x1 == sx1){\n        if(y1 < sy1){ y1 = y1 - kage.kWidth; } else{ y1 = y1 + kage.kWidth; }\n      }\n      else if(y1 == sy1){\n        if(x1 < sx1){ x1 = x1 - kage.kWidth; } else{ x1 = x1 + kage.kWidth; }\n      }\n      else{\n        rad = Math.atan((sy1 - y1) / (sx1 - x1));\n        if(x1 < sx1){ v = 1; } else{ v = -1; }\n        x1 = x1 - kage.kWidth * Math.cos(rad) * v;\n        y1 = y1 - kage.kWidth * Math.sin(rad) * v;\n      }\n    }\n    \n    if(a1 % 10 == 3){\n      if(x1 == sx1){\n        if(y1 < sy1){\n          y1 = y1 - kage.kWidth * kage.kKakato;\n        }\n        else{\n          y1 = y1 + kage.kWidth * kage.kKakato;\n        }\n      }\n      else if(y1 == sy1){\n        if(x1 < sx1){\n          x1 = x1 - kage.kWidth * kage.kKakato;\n        }\n        else{\n          x1 = x1 + kage.kWidth * kage.kKakato;\n        }\n      }\n      else{\n        rad = Math.atan((sy1 - y1) / (sx1 - x1));\n        if(x1 < sx1){ v = 1; } else{ v = -1; }\n        x1 = x1 - kage.kWidth * Math.cos(rad) * v * kage.kKakato;\n        y1 = y1 - kage.kWidth * Math.sin(rad) * v * kage.kKakato;\n      }\n    }\n    if(a2 % 10 == 2){\n      if(sx2 == x2){\n        if(sy2 < y2){ y2 = y2 + kage.kWidth; } else{ y2 = y2 - kage.kWidth; }\n      }\n      else if(sy2 == y2){\n        if(sx2 < x2){ x2 = x2 + kage.kWidth; } else{ x2 = x2 - kage.kWidth; }\n      }\n      else{\n        rad = Math.atan((y2 - sy2) / (x2 - sx2));\n        if(sx2 < x2){ v = 1; } else{ v = -1; }\n        x2 = x2 + kage.kWidth * Math.cos(rad) * v;\n        y2 = y2 + kage.kWidth * Math.sin(rad) * v;\n      }\n    }\n    \n    if(a2 % 10 == 3){\n      if(sx2 == x2){\n        if(sy2 < y2){\n          y2 = y2 + kage.kWidth * kage.kKakato;\n        }\n        else{\n          y2 = y2 - kage.kWidth * kage.kKakato;\n        }\n      }\n      else if(sy2 == y2){\n        if(sx2 < x2){\n          x2 = x2 + kage.kWidth * kage.kKakato;\n        }\n        else{\n          x2 = x2 - kage.kWidth * kage.kKakato;\n        }\n      }\n      else{\n        rad = Math.atan((y2 - sy2) / (x2 - sx2));\n        if(sx2 < x2){ v = 1; } else{ v = -1; }\n        x2 = x2 + kage.kWidth * Math.cos(rad) * v * kage.kKakato;\n        y2 = y2 + kage.kWidth * Math.sin(rad) * v * kage.kKakato;\n      }\n    }\n    \n    poly = new Polygon();\n    poly2 = new Polygon();\n    \n    for(tt = 0; tt <= 1000; tt = tt + kage.kRate){\n      t = tt / 1000;\n      \n      if(sx1 == sx2 && sy1 == sy2){\n        //calculating each point\n        x = ((1.0 - t) * (1.0 - t) * x1 + 2.0 * t * (1.0 - t) * sx1 + t * t * x2);\n        y = ((1.0 - t) * (1.0 - t) * y1 + 2.0 * t * (1.0 - t) * sy1 + t * t * y2);\n        \n        //SESSEN NO KATAMUKI NO KEISAN(BIBUN)\n        ix = (x1 - 2.0 * sx1 + x2) * 2.0 * t + (-2.0 * x1 + 2.0 * sx1);\n        iy = (y1 - 2.0 * sy1 + y2) * 2.0 * t + (-2.0 * y1 + 2.0 * sy1);\n      } else {\n      }\n      //SESSEN NI SUICHOKU NA CHOKUSEN NO KEISAN\n      if(kage.kShotai == kage.kMincho){ //always false ?\n        if(ix != 0 && iy != 0){\n          ir = Math.atan(iy / ix * -1.0);\n          ia = Math.sin(ir) * kage.kMinWidthT;\n          ib = Math.cos(ir) * kage.kMinWidthT;\n        }\n        else if(ix == 0){\n          ia = kage.kMinWidthT;\n          ib = 0;\n        }\n        else{\n          ia = 0;\n          ib = kage.kMinWidthT;\n        }\n        ia = ia * Math.sqrt(1.0 - t);\n        ib = ib * Math.sqrt(1.0 - t);\n      }\n      else{\n        if(ix != 0 && iy != 0){\n          ir = Math.atan(iy / ix * -1.0);\n          ia = Math.sin(ir) * kage.kWidth;\n          ib = Math.cos(ir) * kage.kWidth;\n        }\n        else if(ix == 0){\n          ia = kage.kWidth;\n          ib = 0;\n        }\n        else{\n          ia = 0;\n          ib = kage.kWidth;\n        }\n      }\n      \n      //reverse if vector is going 2nd/3rd quadrants\n      if(ix <= 0){\n        ia = ia * -1;\n        ib = ib * -1;\n      }\n      \n      //save to polygon\n      poly.push(x - ia, y - ib);\n      poly2.push(x + ia, y + ib);\n    }\n    \n    poly2.reverse();\n    poly.concat(poly2);\n    polygons.push(poly);\n  }\n}\n\nfunction cdDrawBezier(kage, polygons, x1, y1, x2, y2, x3, y3, x4, y4, a1, a2){\n  cdDrawCurveU(kage, polygons, x1, y1, x2, y2, x3, y3, x4, y4, a1, a2);\n}\n\nfunction cdDrawCurve(kage, polygons, x1, y1, x2, y2, x3, y3, a1, a2){\n  cdDrawCurveU(kage, polygons, x1, y1, x2, y2, x2, y2, x3, y3, a1, a2);\n}\n\nfunction cdDrawLine(kage, polygons, tx1, ty1, tx2, ty2, ta1, ta2){\n  var rad;\n  var v, x1, y1, x2, y2;\n  var a1, a2, opt1, opt2;\n  var XX, XY, YX, YY;\n  var poly;\n  var kMinWidthT;\n  \n  if(kage.kShotai == kage.kMincho){ //mincho\n    x1 = tx1;\n    y1 = ty1;\n    x2 = tx2;\n    y2 = ty2;\n    a1 = ta1 % 1000;\n    a2 = ta2 % 100;\n    opt1 = Math.floor(ta1 / 1000);\n    opt2 = Math.floor(ta2 / 100);\n    \n    kMinWidthT = kage.kMinWidthT - opt1 / 2;\n    \n    if(x1 == x2){ //if TATE stroke, use y-axis\n      poly = new Polygon(4);\n      switch(a1){\n      case 0:\n        poly.set(3, x1 - kMinWidthT, y1 - kage.kMinWidthY / 2);\n        poly.set(0, x1 + kMinWidthT, y1 + kage.kMinWidthY / 2);\n        break;\n      case 1:\n      case 6: //... no need\n      case 22:\n        poly.set(3, x1 - kMinWidthT, y1);\n        poly.set(0, x1 + kMinWidthT, y1);\n        break;\n      case 12:\n        poly.set(3, x1 - kMinWidthT, y1 - kage.kMinWidthY - kMinWidthT);\n        poly.set(0, x1 + kMinWidthT, y1 - kage.kMinWidthY);\n        break;\n      case 32:\n        poly.set(3, x1 - kMinWidthT, y1 - kage.kMinWidthY);\n        poly.set(0, x1 + kMinWidthT, y1 - kage.kMinWidthY);\n        break;\n      }\n      \n      switch(a2){\n      case 0:\n        if(a1 == 6){ //KAGI's tail ... no need\n          poly.set(2, x2 - kMinWidthT, y2);\n          poly.set(1, x2 + kMinWidthT, y2);\n        }\n        else{\n          poly.set(2, x2 - kMinWidthT, y2 + kMinWidthT / 2);\n          poly.set(1, x2 + kMinWidthT, y2 - kMinWidthT / 2);\n        }\n        break;\n      case 1:\n        poly.set(2, x2 - kMinWidthT, y2);\n        poly.set(1, x2 + kMinWidthT, y2);\n        break;\n      case 13:\n        poly.set(2, x2 - kMinWidthT, y2 + kage.kAdjustKakatoL[opt2] + kMinWidthT);\n        poly.set(1, x2 + kMinWidthT, y2 + kage.kAdjustKakatoL[opt2]);\n        break;\n      case 23:\n        poly.set(2, x2 - kMinWidthT, y2 + kage.kAdjustKakatoR[opt2] + kMinWidthT);\n        poly.set(1, x2 + kMinWidthT, y2 + kage.kAdjustKakatoR[opt2]);\n        break;\n      case 32:\n        poly.set(2, x2 - kMinWidthT, y2 + kage.kMinWidthY);\n        poly.set(1, x2 + kMinWidthT, y2 + kage.kMinWidthY);\n        break;\n      }\n      \n      polygons.push(poly);\n      \n      if(a1 == 22){ //box's right top corner\n        poly = new Polygon();\n        poly.push(x1 - kMinWidthT, y1 - kage.kMinWidthY);\n        poly.push(x1, y1 - kage.kMinWidthY - kage.kWidth);\n        poly.push(x1 + kMinWidthT + kage.kWidth, y1 + kage.kMinWidthY);\n        poly.push(x1 + kMinWidthT, y1 + kMinWidthT);\n        poly.push(x1 - kMinWidthT, y1);\n        polygons.push(poly);\n      }\n      \n      if(a1 == 0){ //beginning of the stroke\n        poly = new Polygon();\n        poly.push(x1 + kMinWidthT, y1 + kage.kMinWidthY * 0.5);\n        poly.push(x1 + kMinWidthT + kMinWidthT * 0.5, y1 + kage.kMinWidthY * 0.5 + kage.kMinWidthY);\n        poly.push(x1 + kMinWidthT - 2, y1 + kage.kMinWidthY * 0.5 + kage.kMinWidthY * 2 + 1);\n        polygons.push(poly);\n      }\n      \n      if((a1 == 6 && a2 == 0) || a2 == 1){ //KAGI NO YOKO BOU NO SAIGO NO MARU ... no need only used at 1st=yoko\n        poly = new Polygon();\n\tif(kage.kUseCurve){\n          poly.push(x2 - kMinWidthT, y2);\n          poly.push(x2 - kMinWidthT * 0.9, y2 + kMinWidthT * 0.9, 1);\n          poly.push(x2, y2 + kMinWidthT);\n          poly.push(x2 + kMinWidthT * 0.9, y2 + kMinWidthT * 0.9, 1);\n          poly.push(x2 + kMinWidthT, y2);\n        } else {\n          poly.push(x2 - kMinWidthT, y2);\n          poly.push(x2 - kMinWidthT * 0.6, y2 + kMinWidthT * 0.6);\n          poly.push(x2, y2 + kMinWidthT);\n          poly.push(x2 + kMinWidthT * 0.6, y2 + kMinWidthT * 0.6);\n          poly.push(x2 + kMinWidthT, y2);\n        }\n        //poly.reverse(); // for fill-rule\n        polygons.push(poly);\n      }\n    }\n    else if(y1 == y2){ //if it is YOKO stroke, use x-axis\n      if(a1 == 6){ //if it is KAGI's YOKO stroke, get bold\n        poly = new Polygon();\n        poly.push(x1, y1 - kMinWidthT);\n        poly.push(x2, y2 - kMinWidthT);\n        poly.push(x2, y2 + kMinWidthT);\n        poly.push(x1, y1 + kMinWidthT);\n        polygons.push(poly);\n        \n        if(a2 == 1 || a2 == 0 || a2 == 5){ // no need a2=1\n          //KAGI NO YOKO BOU NO SAIGO NO MARU\n          poly = new Polygon();\n          if(kage.kUseCurve){\n            if(x1 < x2){\n              poly.push(x2, y2 - kMinWidthT);\n              poly.push(x2 + kMinWidthT * 0.9, y2 - kMinWidthT * 0.9, 1);\n              poly.push(x2 + kMinWidthT, y2);\n              poly.push(x2 + kMinWidthT * 0.9, y2 + kMinWidthT * 0.9, 1);\n              poly.push(x2, y2 + kMinWidthT);\n            } else {\n              poly.push(x2, y2 - kMinWidthT);\n              poly.push(x2 - kMinWidthT * 0.9, y2 - kMinWidthT * 0.9, 1);\n              poly.push(x2 - kMinWidthT, y2);\n              poly.push(x2 - kMinWidthT * 0.9, y2 + kMinWidthT * 0.9, 1);\n              poly.push(x2, y2 + kMinWidthT);\n            }\n          } else {\n            if(x1 < x2){\n              poly.push(x2, y2 - kMinWidthT);\n              poly.push(x2 + kMinWidthT * 0.6, y2 - kMinWidthT * 0.6);\n              poly.push(x2 + kMinWidthT, y2);\n              poly.push(x2 + kMinWidthT * 0.6, y2 + kMinWidthT * 0.6);\n              poly.push(x2, y2 + kMinWidthT);\n            } else {\n              poly.push(x2, y2 - kMinWidthT);\n              poly.push(x2 - kMinWidthT * 0.6, y2 - kMinWidthT * 0.6);\n              poly.push(x2 - kMinWidthT, y2);\n              poly.push(x2 - kMinWidthT * 0.6, y2 + kMinWidthT * 0.6);\n              poly.push(x2, y2 + kMinWidthT);\n            }\n          }\n          polygons.push(poly);\n        }\n        \n        if(a2 == 5){\n          //KAGI NO YOKO BOU NO HANE\n          poly = new Polygon();\n          if(x1 < x2){\n            poly.push(x2, y2 - kMinWidthT + 1);\n            poly.push(x2 + 2, y2 - kMinWidthT - kage.kWidth * (4 * (1 - opt1 / kage.kAdjustMageStep) + 1));\n            poly.push(x2, y2 - kMinWidthT - kage.kWidth * (4 * (1 - opt1 / kage.kAdjustMageStep) + 1));\n            poly.push(x2 - kMinWidthT, y2 - kMinWidthT + 1);\n          } else {\n            poly.push(x2, y2 - kMinWidthT + 1);\n            poly.push(x2 - 2, y2 - kMinWidthT - kage.kWidth * (4 * (1 - opt1 / kage.kAdjustMageStep) + 1));\n            poly.push(x2, y2 - kMinWidthT - kage.kWidth * (4 * (1 - opt1 / kage.kAdjustMageStep) + 1));\n            poly.push(x2 + kMinWidthT, y2 - kMinWidthT + 1);\n          }\n          //poly.reverse(); // for fill-rule\n          polygons.push(poly);\n        }\n      }\n      else{\n        //always same\n        poly = new Polygon(4);\n        poly.set(0, x1, y1 - kage.kMinWidthY);\n        poly.set(1, x2, y2 - kage.kMinWidthY);\n        poly.set(2, x2, y2 + kage.kMinWidthY);\n        poly.set(3, x1, y1 + kage.kMinWidthY);\n        polygons.push(poly);\n        \n        //UROKO\n        if(a2 == 0){\n          poly = new Polygon();\n          poly.push(x2, y2 - kage.kMinWidthY);\n          poly.push(x2 - kage.kAdjustUrokoX[opt2], y2);\n          poly.push(x2 - kage.kAdjustUrokoX[opt2] / 2, y2 - kage.kAdjustUrokoY[opt2]);\n          polygons.push(poly);\n        }\n      }\n    }\n    else{ //for others, use x-axis\n      rad = Math.atan((y2 - y1) / (x2 - x1));\n      if((Math.abs(y2 - y1) < Math.abs(x2 - x1)) && (a1 != 6) && (a2 != 6) && !(x1 > x2)){ //ASAI KAUDO\n        //always same\n        poly = new Polygon(4);\n        poly.set(0, x1 + Math.sin(rad) * kage.kMinWidthY, y1 - Math.cos(rad) * kage.kMinWidthY);\n        poly.set(1, x2 + Math.sin(rad) * kage.kMinWidthY, y2 - Math.cos(rad) * kage.kMinWidthY);\n        poly.set(2, x2 - Math.sin(rad) * kage.kMinWidthY, y2 + Math.cos(rad) * kage.kMinWidthY);\n        poly.set(3, x1 - Math.sin(rad) * kage.kMinWidthY, y1 + Math.cos(rad) * kage.kMinWidthY);\n        polygons.push(poly);\n        \n        //UROKO\n        if(a2 == 0){\n          poly = new Polygon();\n          poly.push(x2 + Math.sin(rad) * kage.kMinWidthY, y2 - Math.cos(rad) * kage.kMinWidthY);\n          poly.push(x2 - Math.cos(rad) * kage.kAdjustUrokoX[opt2], y2 - Math.sin(rad) * kage.kAdjustUrokoX[opt2]);\n          poly.push(x2 - Math.cos(rad) * kage.kAdjustUrokoX[opt2] / 2 + Math.sin(rad) * kage.kAdjustUrokoX[opt2] / 2, y2 - Math.sin(rad) * kage.kAdjustUrokoY[opt2] - Math.cos(rad) * kage.kAdjustUrokoY[opt2]);\n          polygons.push(poly);\n        }\n      }\n      \n      else{ //KAKUDO GA FUKAI or KAGI NO YOKO BOU\n        if(x1 > x2){ v = -1; } else{ v = 1; }\n        poly = new Polygon(4);\n        switch(a1){\n        case 0:\n          poly.set(0, x1 + Math.sin(rad) * kMinWidthT * v + kage.kMinWidthY * Math.cos(rad) * 0.5 * v,\n                   y1 - Math.cos(rad) * kMinWidthT * v + kage.kMinWidthY * Math.sin(rad) * 0.5 * v);\n          poly.set(3, x1 - Math.sin(rad) * kMinWidthT * v - kage.kMinWidthY * Math.cos(rad) * 0.5 * v,\n                   y1 + Math.cos(rad) * kMinWidthT * v - kage.kMinWidthY * Math.sin(rad) * 0.5 * v);\n          break;\n        case 1:\n        case 6:\n          poly.set(0, x1 + Math.sin(rad) * kMinWidthT * v, y1 - Math.cos(rad) * kMinWidthT * v);\n          poly.set(3, x1 - Math.sin(rad) * kMinWidthT * v, y1 + Math.cos(rad) * kMinWidthT * v);\n          break;\n        case 12:\n          poly.set(0, x1 + Math.sin(rad) * kMinWidthT * v - kage.kMinWidthY * Math.cos(rad) * v,\n                   y1 - Math.cos(rad) * kMinWidthT * v - kage.kMinWidthY * Math.sin(rad) * v);\n          poly.set(3, x1 - Math.sin(rad) * kMinWidthT * v - (kMinWidthT + kage.kMinWidthY) * Math.cos(rad) * v,\n                   y1 + Math.cos(rad) * kMinWidthT * v - (kMinWidthT + kage.kMinWidthY) * Math.sin(rad) * v);\n          break;\n        case 22:\n          poly.set(0, x1 + (kMinWidthT * v + 1) / Math.sin(rad), y1 + 1);\n          poly.set(3, x1 - (kMinWidthT * v) / Math.sin(rad), y1);\n          break;\n        case 32:\n          poly.set(0, x1 + (kMinWidthT * v) / Math.sin(rad), y1);\n          poly.set(3, x1 - (kMinWidthT * v) / Math.sin(rad), y1);\n          break;\n        }\n        \n        switch(a2){\n        case 0:\n          if(a1 == 6){\n            poly.set(1, x2 + Math.sin(rad) * kMinWidthT * v, y2 - Math.cos(rad) * kMinWidthT * v);\n            poly.set(2, x2 - Math.sin(rad) * kMinWidthT * v, y2 + Math.cos(rad) * kMinWidthT * v);\n          }\n          else{\n            poly.set(1, x2 + Math.sin(rad) * kMinWidthT * v - kMinWidthT * 0.5 * Math.cos(rad) * v,\n                     y2 - Math.cos(rad) * kMinWidthT * v - kMinWidthT * 0.5 * Math.sin(rad) * v);\n            poly.set(2, x2 - Math.sin(rad) * kMinWidthT * v + kMinWidthT * 0.5 * Math.cos(rad) * v,\n                     y2 + Math.cos(rad) * kMinWidthT * v + kMinWidthT * 0.5 * Math.sin(rad) * v);\n          }\n          break;\n        case 1: // is needed?\n        case 5:\n          poly.set(1, x2 + Math.sin(rad) * kMinWidthT * v, y2 - Math.cos(rad) * kMinWidthT * v);\n          poly.set(2, x2 - Math.sin(rad) * kMinWidthT * v, y2 + Math.cos(rad) * kMinWidthT * v);\n          break;\n        case 13:\n          poly.set(1, x2 + Math.sin(rad) * kMinWidthT * v + kage.kAdjustKakatoL[opt2] * Math.cos(rad) * v,\n                   y2 - Math.cos(rad) * kMinWidthT * v + kage.kAdjustKakatoL[opt2] * Math.sin(rad) * v);\n          poly.set(2, x2 - Math.sin(rad) * kMinWidthT * v + (kage.kAdjustKakatoL[opt2] + kMinWidthT) * Math.cos(rad) * v,\n                   y2 + Math.cos(rad) * kMinWidthT * v + (kage.kAdjustKakatoL[opt2] + kMinWidthT) * Math.sin(rad) * v);\n          break;\n        case 23:\n          poly.set(1, x2 + Math.sin(rad) * kMinWidthT * v + kage.kAdjustKakatoR[opt2] * Math.cos(rad) * v,\n                   y2 - Math.cos(rad) * kMinWidthT * v + kage.kAdjustKakatoR[opt2] * Math.sin(rad) * v);\n          poly.set(2,\n                   x2 - Math.sin(rad) * kMinWidthT * v + (kage.kAdjustKakatoR[opt2] + kMinWidthT) * Math.cos(rad) * v,\n                   y2 + Math.cos(rad) * kMinWidthT * v + (kage.kAdjustKakatoR[opt2] + kMinWidthT) * Math.sin(rad) * v);\n          break;\n        case 32:\n          poly.set(1, x2 + (kMinWidthT * v) / Math.sin(rad), y2);\n          poly.set(2, x2 - (kMinWidthT * v) / Math.sin(rad), y2);\n          break;\n        }\n        \n        polygons.push(poly);\n        \n        if((a1 == 6) && (a2 == 0 || a2 == 5)){ //KAGI NO YOKO BOU NO SAIGO NO MARU\n          poly = new Polygon();\n          if(kage.kUseCurve){\n            poly.push(x2 + Math.sin(rad) * kMinWidthT * v, y2 - Math.cos(rad) * kMinWidthT * v);\n            poly.push(x2 - Math.cos(rad) * kMinWidthT * 0.9 * v + Math.sin(rad) * kMinWidthT * 0.9 * v,\n                      y2 + Math.sin(rad) * kMinWidthT * 0.9 * v - Math.cos(rad) * kMinWidthT * 0.9 * v, 1);\n            poly.push(x2 + Math.cos(rad) * kMinWidthT * v, y2 + Math.sin(rad) * kMinWidthT * v);\n            poly.push(x2 + Math.cos(rad) * kMinWidthT * 0.9 * v - Math.sin(rad) * kMinWidthT * 0.9 * v,\n                      y2 + Math.sin(rad) * kMinWidthT * 0.9 * v + Math.cos(rad) * kMinWidthT * 0.9 * v, 1);\n            poly.push(x2 - Math.sin(rad) * kMinWidthT * v, y2 + Math.cos(rad) * kMinWidthT * v);\n          } else {\n            poly.push(x2 + Math.sin(rad) * kMinWidthT * v, y2 - Math.cos(rad) * kMinWidthT * v);\n            poly.push(x2 + Math.cos(rad) * kMinWidthT * 0.8 * v + Math.sin(rad) * kMinWidthT * 0.6 * v,\n                      y2 + Math.sin(rad) * kMinWidthT * 0.8 * v - Math.cos(rad) * kMinWidthT * 0.6 * v);\n            poly.push(x2 + Math.cos(rad) * kMinWidthT * v, y2 + Math.sin(rad) * kMinWidthT * v);\n            poly.push(x2 + Math.cos(rad) * kMinWidthT * 0.8 * v - Math.sin(rad) * kMinWidthT * 0.6 * v,\n                      y2 + Math.sin(rad) * kMinWidthT * 0.8 * v + Math.cos(rad) * kMinWidthT * 0.6 * v);\n            poly.push(x2 - Math.sin(rad) * kMinWidthT * v, y2 + Math.cos(rad) * kMinWidthT * v);\n          }\n          polygons.push(poly);\n        }\n        \n        if(a1 == 6 && a2 == 5){\n          //KAGI NO YOKO BOU NO HANE\n          poly = new Polygon();\n          if(x1 < x2){\n            poly.push(x2 + (kMinWidthT - 1) * Math.sin(rad) * v, y2 - (kMinWidthT - 1) * Math.cos(rad) * v);\n            poly.push(x2 + 2 * Math.cos(rad) * v + (kMinWidthT + kage.kWidth * 5) * Math.sin(rad) * v,\n                      y2 + 2 * Math.sin(rad) * v - (kMinWidthT + kage.kWidth * 5) * Math.cos(rad) * v);\n            poly.push(x2 + (kMinWidthT + kage.kWidth * 5) * Math.sin(rad) * v,\n                      y2 - (kMinWidthT + kage.kWidth * 5) * Math.cos(rad) * v);\n            poly.push(x2 + (kMinWidthT - 1) * Math.sin(rad) * v - kMinWidthT * Math.cos(rad) * v,\n                      y2 - (kMinWidthT - 1) * Math.cos(rad) * v - kMinWidthT * Math.sin(rad) * v);\n          } else {\n            poly.push(x2 - (kMinWidthT - 1) * Math.sin(rad) * v, y2 + (kMinWidthT - 1) * Math.cos(rad) * v);\n            poly.push(x2 + 2 * Math.cos(rad) * v - (kMinWidthT + kage.kWidth * 5) * Math.sin(rad) * v,\n                      y2 + 2 * Math.sin(rad) * v + (kMinWidthT + kage.kWidth * 5) * Math.cos(rad) * v);\n            poly.push(x2 - (kMinWidthT + kage.kWidth * 5) * Math.sin(rad) * v,\n                      y2 + (kMinWidthT + kage.kWidth * 5) * Math.cos(rad) * v);\n            poly.push(x2 + (kMinWidthT - 1) * Math.sin(rad) * v - kMinWidthT * Math.cos(rad) * v,\n                      y2 - (kMinWidthT - 1) * Math.cos(rad) * v - kMinWidthT * Math.sin(rad) * v);\n          }\n          polygons.push(poly);\n        }\n        \n        if(a1 == 22){ //SHIKAKU MIGIUE UROKO NANAME DEMO MASSUGU MUKI\n          poly = new Polygon();\n          poly.push(x1 - kMinWidthT, y1 - kage.kMinWidthY);\n          poly.push(x1, y1 - kage.kMinWidthY - kage.kWidth);\n          poly.push(x1 + kMinWidthT + kage.kWidth, y1 + kage.kMinWidthY);\n          poly.push(x1 + kMinWidthT, y1 + kMinWidthT - 1);\n          poly.push(x1 - kMinWidthT, y1 + kMinWidthT + 4);\n          polygons.push(poly);\n        }\n        \n        XX = Math.sin(rad) * v;\n        XY = Math.cos(rad) * v * -1;\n        YX = Math.cos(rad) * v;\n        YY = Math.sin(rad) * v;\n        \n        if(a1 == 0){ //beginning of the storke\n          poly = new Polygon();\n          poly.push(x1 + kMinWidthT * XX + (kage.kMinWidthY * 0.5) * YX,\n                    y1 + kMinWidthT * XY + (kage.kMinWidthY * 0.5) * YY);\n          poly.push(x1 + (kMinWidthT + kMinWidthT * 0.5) * XX + (kage.kMinWidthY * 0.5 + kage.kMinWidthY) * YX,\n                    y1 + (kMinWidthT + kMinWidthT * 0.5) * XY + (kage.kMinWidthY * 0.5 + kage.kMinWidthY) * YY);\n          poly.push(x1 + kMinWidthT * XX + (kage.kMinWidthY * 0.5 + kage.kMinWidthY * 2) * YX - 2 * XX,\n                    y1 + kMinWidthT * XY + (kage.kMinWidthY * 0.5 + kage.kMinWidthY * 2) * YY + 1 * XY);\n          polygons.push(poly);\n        }\n      }\n    }\n  }\n  else{ //gothic\n    if(tx1 == tx2){ //if TATE stroke, use y-axis\n      if(ty1 > ty2){\n        x1 = tx2;\n        y1 = ty2;\n        x2 = tx1;\n        y2 = ty1;\n        a1 = ta2;\n        a2 = ta1;\n      }\n      else{\n        x1 = tx1;\n        y1 = ty1;\n        x2 = tx2;\n        y2 = ty2;\n        a1 = ta1;\n        a2 = ta2;\n      }\n      \n      if(a1 % 10 == 2){ y1 = y1 - kage.kWidth; }\n      if(a2 % 10 == 2){ y2 = y2 + kage.kWidth; }\n      if(a1 % 10 == 3){ y1 = y1 - kage.kWidth * kage.kKakato; }\n      if(a2 % 10 == 3){ y2 = y2 + kage.kWidth * kage.kKakato; }\n      \n      poly = new Polygon();\n      poly.push(x1 - kage.kWidth, y1);\n      poly.push(x2 - kage.kWidth, y2);\n      poly.push(x2 + kage.kWidth, y2);\n      poly.push(x1 + kage.kWidth, y1);\n      //poly.reverse(); // for fill-rule\n      \n      polygons.push(poly);\n    }\n    else if(ty1 == ty2){ //if YOKO stroke, use x-axis\n      if(tx1 > tx2){\n        x1 = tx2;\n        y1 = ty2;\n        x2 = tx1;\n        y2 = ty1;\n        a1 = ta2;\n        a2 = ta1;\n      }\n      else{\n        x1 = tx1;\n        y1 = ty1;\n        x2 = tx2;\n        y2 = ty2;\n        a1 = ta1;\n        a2 = ta2;\n      }\n      if(a1 % 10 == 2){ x1 = x1 - kage.kWidth; }\n      if(a2 % 10 == 2){ x2 = x2 + kage.kWidth; }\n      if(a1 % 10 == 3){ x1 = x1 - kage.kWidth * kage.kKakato; }\n      if(a2 % 10 == 3){ x2 = x2 + kage.kWidth * kage.kKakato; }\n      \n      poly = new Polygon();\n      poly.push(x1, y1 - kage.kWidth);\n      poly.push(x2, y2 - kage.kWidth);\n      poly.push(x2, y2 + kage.kWidth);\n      poly.push(x1, y1 + kage.kWidth);\n      \n      polygons.push(poly);\n    }\n    else{ //for others, use x-axis\n      if(tx1 > tx2){\n        x1 = tx2;\n        y1 = ty2;\n        x2 = tx1;\n        y2 = ty1;\n        a1 = ta2;\n        a2 = ta1;\n      }\n      else{\n        x1 = tx1;\n        y1 = ty1;\n        x2 = tx2;\n        y2 = ty2;\n        a1 = ta1;\n        a2 = ta2;\n      }\n      rad = Math.atan((y2 - y1) / (x2 - x1));\n      if(a1 % 10 == 2){\n        x1 = x1 - kage.kWidth * Math.cos(rad);\n        y1 = y1 - kage.kWidth * Math.sin(rad);\n      }\n      if(a2 % 10 == 2){\n        x2 = x2 + kage.kWidth * Math.cos(rad);\n        y2 = y2 + kage.kWidth * Math.sin(rad);\n      }\n      if(a1 % 10 == 3){\n        x1 = x1 - kage.kWidth * Math.cos(rad) * kage.kKakato;\n        y1 = y1 - kage.kWidth * Math.sin(rad) * kage.kKakato;\n      }\n      if(a2 % 10 == 3){\n        x2 = x2 + kage.kWidth * Math.cos(rad) * kage.kKakato;\n        y2 = y2 + kage.kWidth * Math.sin(rad) * kage.kKakato;\n      }\n      \n      //SUICHOKU NO ICHI ZURASHI HA Math.sin TO Math.cos NO IREKAE + x-axis MAINASU KA\n      poly = new Polygon();\n      poly.push(x1 + Math.sin(rad) * kage.kWidth, y1 - Math.cos(rad) * kage.kWidth);\n      poly.push(x2 + Math.sin(rad) * kage.kWidth, y2 - Math.cos(rad) * kage.kWidth);\n      poly.push(x2 - Math.sin(rad) * kage.kWidth, y2 + Math.cos(rad) * kage.kWidth);\n      poly.push(x1 - Math.sin(rad) * kage.kWidth, y1 + Math.cos(rad) * kage.kWidth);\n      \n      polygons.push(poly);\n    }\n  }\n}function dfDrawFont(kage, polygons, a1, a2, a3, x1, y1, x2, y2, x3, y3, x4, y4){\n  var tx1, tx2, tx3, tx4, ty1, ty2, ty3, ty4, v;\n  var rad;\n\t\n  if(kage.kShotai == kage.kMincho){\n    switch(a1 % 100){ // ... no need to divide\n    case 0:\n      break;\n    case 1:\n      if(a3 % 100 == 4){\n        if(x1 == x2){\n          if(y1 < y2){ v = 1; } else{ v = -1; }\n          tx1 = x2;\n          ty1 = y2 - kage.kMage * v;\n        }\n        else if(y1 == y2){ // ... no need\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * v;\n          ty1 = y2;\n        }\n        else{\n          rad = Math.atan((y2 - y1) / (x2 - x1));\n          if(x1 < x2){ v = 1; } else{v = -1; }\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v;\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v;\n        }\n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, x2 - kage.kMage * (((kage.kAdjustTateStep + 4) - Math.floor(a2 / 1000)) / (kage.kAdjustTateStep + 4)), y2, 1 + (a2 - a2 % 1000), a3 + 10);\n      }\n      else{\n        cdDrawLine(kage, polygons, x1, y1, x2, y2, a2, a3);\n      }\n      break;\n    case 2:\n    //case 12: // ... no need\n      if(a3 % 100 == 4){\n        if(x2 == x3){\n          tx1 = x3;\n          ty1 = y3 - kage.kMage;\n        }\n        else if(y2 == y3){\n          tx1 = x3 - kage.kMage;\n          ty1 = y3;\n        }\n        else{\n          rad = Math.atan((y3 - y2) / (x3 - x2));\n          if(x2 < x3){ v = 1; } else{ v = -1; }\n          tx1 = x3 - kage.kMage * Math.cos(rad) * v;\n          ty1 = y3 - kage.kMage * Math.sin(rad) * v;\n        }\n        cdDrawCurve(kage, polygons, x1, y1, x2, y2, tx1, ty1, a2, 1);\n        cdDrawCurve(kage, polygons, tx1, ty1, x3, y3, x3 - kage.kMage, y3, 1, a3 + 10);\n      }\n      else if(a3 == 5){\n        cdDrawCurve(kage, polygons, x1, y1, x2, y2, x3, y3, a2, 15);\n      }\n      else{\n        cdDrawCurve(kage, polygons, x1, y1, x2, y2, x3, y3, a2, a3);\n      }\n      break;\n    case 3:\n      if(a3 % 1000 == 5){\n        if(x1 == x2){\n          if(y1 < y2){ v = 1; } else{ v = -1; }\n          tx1 = x2;\n          ty1 = y2 - kage.kMage * v;\n        }\n        else if(y1 == y2){\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * v;\n          ty1 = y2;\n        }\n        else{\n          rad = Math.atan((y2 - y1) / (x2 - x1));\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v;\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v;\n        }\n        if(x2 == x3){\n          if(y2 < y3){ v = 1; } else{ v = -1; }\n          tx2 = x2;\n          ty2 = y2 + kage.kMage * v;\n        }\n        else if(y2 == y3){\n          if(x2 < x3){ v = 1; } else { v = -1; }\n          tx2 = x2 + kage.kMage * v;\n          ty2 = y2;\n        }\n        else{\n          rad = Math.atan((y3 - y2) / (x3 - x2));\n          if(x2 < x3){ v = 1; } else{ v = -1; }\n          tx2 = x2 + kage.kMage * Math.cos(rad) * v;\n          ty2 = y2 + kage.kMage * Math.sin(rad) * v;\n        }\n        tx3 = x3;\n        ty3 = y3;\n        \n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, tx2, ty2, 1 + (a2 - a2 % 1000) * 10, 1 + (a3 - a3 % 1000));\n        if((x2 < x3 && tx3 - tx2 > 0) || (x2 > x3 && tx2 - tx3 > 0)){ // for closer position\n          cdDrawLine(kage, polygons, tx2, ty2, tx3, ty3, 6 + (a3 - a3 % 1000), 5); // bolder by force\n        }\n      }\n      else{\n        if(x1 == x2){\n          if(y1 < y2){ v = 1; } else { v = -1; }\n          tx1 = x2;\n          ty1 = y2 - kage.kMage * v;\n        }\n        else if(y1 == y2){\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * v;\n          ty1 = y2;\n        }\n        else{\n          rad = Math.atan((y2 - y1) / (x2 - x1));\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v;\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v;\n        }\n        if(x2 == x3){\n          if(y2 < y3){ v = 1; } else{ v = -1; }\n          tx2 = x2;\n          ty2 = y2 + kage.kMage * v;\n        }\n        else if(y2 == y3){\n          if(x2 < x3){ v = 1; } else{ v = -1; }\n          tx2 = x2 + kage.kMage * v;\n          ty2 = y2;\n        }\n        else{\n          rad = Math.atan((y3 - y2) / (x3 - x2));\n          if(x2 < x3){ v = 1; } else{ v = -1; }\n          tx2 = x2 + kage.kMage * Math.cos(rad) * v;\n          ty2 = y2 + kage.kMage * Math.sin(rad) * v;\n        }\n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, tx2, ty2, 1 + (a2 - a2 % 1000) * 10, 1 + (a3 - a3 % 1000));\n        cdDrawLine(kage, polygons, tx2, ty2, x3, y3, 6 + (a3 - a3 % 1000), a3); // bolder by force\n      }\n      break;\n    case 12:\n      cdDrawCurve(kage, polygons, x1, y1, x2, y2, x3, y3, a2, 1);\n      cdDrawLine(kage, polygons, x3, y3, x4, y4, 6, a3);\n      break;\n    case 4:\n      rate = 6;\n      if((x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2) < 14400){ // smaller than 120 x 120\n        rate = Math.sqrt((x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2)) / 120 * 6;\n      }\n      if(a3 == 5){\n        if(x1 == x2){\n          if(y1 < y2){ v = 1; } else{ v = -1; }\n          tx1 = x2;\n          ty1 = y2 - kage.kMage * v * rate;\n        }\n        else if(y1 == y2){\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * v * rate;\n          ty1 = y2;\n        }\n        else{\n          rad = Math.atan((y2 - y1) / (x2 - x1));\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v * rate;\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v * rate;\n        }\n        if(x2 == x3){\n          if(y2 < y3){ v = 1; } else{ v = -1; }\n          tx2 = x2;\n          ty2 = y2 + kage.kMage * v * rate;\n        }\n        else if(y2 == y3){\n          if(x2 < x3){ v = 1; } else { v = -1; }\n          tx2 = x2 + kage.kMage * v * rate;\n          ty2 = y2;\n        }\n        else{\n          rad = Math.atan((y3 - y2) / (x3 - x2));\n          if(x2 < x3){ v = 1; } else{ v = -1; }\n          tx2 = x2 + kage.kMage * Math.cos(rad) * v * rate;\n          ty2 = y2 + kage.kMage * Math.sin(rad) * v * rate;\n        }\n        tx3 = x3;\n        ty3 = y3;\n        \n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, tx2, ty2, 1, 1);\n        if(tx3 - tx2 > 0){ // for closer position\n          cdDrawLine(kage, polygons, tx2, ty2, tx3, ty3, 6, 5); // bolder by force\n        }\n      }\n      else{\n        if(x1 == x2){\n          if(y1 < y2){ v = 1; } else { v = -1; }\n          tx1 = x2;\n          ty1 = y2 - kage.kMage * v * rate;\n        }\n        else if(y1 == y2){\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * v * rate;\n          ty1 = y2;\n        }\n        else{\n          rad = Math.atan((y2 - y1) / (x2 - x1));\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v * rate;\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v * rate;\n        }\n        if(x2 == x3){\n          if(y2 < y3){ v = 1; } else{ v = -1; }\n          tx2 = x2;\n          ty2 = y2 + kage.kMage * v * rate;\n        }\n        else if(y2 == y3){\n          if(x2 < x3){ v = 1; } else{ v = -1; }\n          tx2 = x2 + kage.kMage * v * rate;\n          ty2 = y2;\n        }\n        else{\n          rad = Math.atan((y3 - y2) / (x3 - x2));\n          if(x2 < x3){ v = 1; } else{ v = -1; }\n          tx2 = x2 + kage.kMage * Math.cos(rad) * v * rate;\n          ty2 = y2 + kage.kMage * Math.sin(rad) * v * rate;\n        }\n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, tx2, ty2, 1, 1);\n        cdDrawLine(kage, polygons, tx2, ty2, x3, y3, 6, a3); // bolder by force\n      }\n      break;\n    case 6:\n      if(a3 % 100 == 4){\n        if(x3 == x4){\n          tx1 = x4;\n          ty1 = y4 - kage.kMage;\n        }\n        else if(y3 == y4){\n          tx1 = x4 - kage.kMage;\n          ty1 = y4;\n        }\n        else{\n          rad = Math.atan((y4 - y3) / (x4 - x3));\n          if(x3 < x4){ v = 1; } else{ v = -1; }\n          tx1 = x4 - kage.kMage * Math.cos(rad) * v;\n          ty1 = y4 - kage.kMage * Math.sin(rad) * v;\n        }\n        cdDrawBezier(kage, polygons, x1, y1, x2, y2, x3, y3, tx1, ty1, a2, 1);\n        cdDrawCurve(kage, polygons, tx1, ty1, x4, y4, x4 - kage.kMage, y4, 1, a3 + 10);\n      }\n      else if(a3 == 5){\n        cdDrawBezier(kage, polygons, x1, y1, x2, y2, x3, y3, x4, y4, a2, 15);\n      }\n      else{\n        cdDrawBezier(kage, polygons, x1, y1, x2, y2, x3, y3, x4, y4, a2, a3);\n      }\n      break;\n    case 7:\n      cdDrawLine(kage, polygons, x1, y1, x2, y2, a2, 1);\n      cdDrawCurve(kage, polygons, x2, y2, x3, y3, x4, y4, 1 + (a2 - a2 % 1000), a3);\n      break;\n    case 9: // may not be exist ... no need\n      //kageCanvas[y1][x1] = 0;\n      //kageCanvas[y2][x2] = 0;\n      break;\n    default:\n      break;\n    }\n  }\n    \n  else{ // gothic\n    switch(a1 % 100){\n    case 0:\n      break;\n    case 1:\n      if(a3 == 4){\n        if(x1 == x2){\n          if(y1 < y2){ v = 1; } else{ v = -1; }\n          tx1 = x2;\n          ty1 = y2 - kage.kMage * v;\n        }\n        else if(y1 == y2){\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * v;\n          ty1 = y2;\n        }\n        else{\n          rad = Math.atan((y2 - y1) / (x2 - x1));\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v;\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v;\n        }\n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, x2 - kage.kMage * 2, y2 - kage.kMage * 0.5, 1, 0);\n      }\n      else{\n        cdDrawLine(kage, polygons, x1, y1, x2, y2, a2, a3);\n      }\n      break;\n    case 2:\n    case 12:\n      if(a3 == 4){\n        if(x2 == x3){\n          tx1 = x3;\n          ty1 = y3 - kage.kMage;\n        }\n        else if(y2 == y3){\n          tx1 = x3 - kage.kMage;\n          ty1 = y3;\n        }\n        else{\n          rad = Math.atan((y3 - y2) / (x3 - x2));\n          if(x2 < x3){ v = 1; } else{ v = -1; }\n          tx1 = x3 - kage.kMage * Math.cos(rad) * v;\n          ty1 = y3 - kage.kMage * Math.sin(rad) * v;\n        }\n        cdDrawCurve(kage, polygons, x1, y1, x2, y2, tx1, ty1, a2, 1);\n        cdDrawCurve(kage, polygons, tx1, ty1, x3, y3, x3 - kage.kMage * 2, y3 - kage.kMage * 0.5, 1, 0);\n      }\n      else if(a3 == 5){\n        tx1 = x3 + kage.kMage;\n        ty1 = y3;\n        tx2 = tx1 + kage.kMage * 0.5;\n        ty2 = y3 - kage.kMage * 2;\n        cdDrawCurve(kage, polygons, x1, y1, x2, y2, x3, y3, a2, 1);\n        cdDrawCurve(kage, polygons, x3, y3, tx1, ty1, tx2, ty2, 1, 0);\n      }\n      else{\n        cdDrawCurve(kage, polygons, x1, y1, x2, y2, x3, y3, a2, a3);\n      }\n      break;\n    case 3:\n      if(a3 == 5){\n        if(x1 == x2){\n          if(y1 < y2){ v = 1; } else{ v = -1; }\n          tx1 = x2;\n          ty1 = y2 - kage.kMage * v;\n        }\n        else if(y1 == y2){\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * v;\n          ty1 = y2;\n        }\n        else{\n          rad = Math.atan((y2 - y1) / (x2 - x1));\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v;\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v;\n        }\n        if(x2 == x3){\n          if(y2 < y3){ v = 1; } else{ v = -1; }\n          tx2 = x2;\n          ty2 = y2 + kage.kMage * v;\n        }\n        else if(y2 == y3){\n          if(x2 < x3){ v = 1; } else{ v = -1; }\n          tx2 = x2 + kage.kMage * v;\n          ty2 = y2;\n        }\n        else{\n          rad = Math.atan((y3 - y2) / (x3 - x2));\n          if(x2 < x3){ v = 1; } else{ v = -1; }\n          tx2 = x2 + kage.kMage * Math.cos(rad) * v;\n          ty2 = y2 + kage.kMage * Math.sin(rad) * v;\n        }\n        tx3 = x3 - kage.kMage;\n        ty3 = y3;\n        tx4 = x3 + kage.kMage * 0.5;\n        ty4 = y3 - kage.kMage * 2;\n        \n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, tx2, ty2, 1, 1);\n        cdDrawLine(kage, polygons, tx2, ty2, tx3, ty3, 1, 1);\n        cdDrawCurve(kage, polygons, tx3, ty3, x3, y3, tx4, ty4, 1, 0);\n      }\n      else{\n        if(x1 == x2){\n          if(y1 < y2){ v = 1; } else{ v = -1; }\n          tx1 = x2;\n          ty1 = y2 - kage.kMage * v;\n        }\n        else if(y1 == y2){\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * v;\n          ty1 = y2;\n        }\n        else{\n          rad = Math.atan((y2 - y1) / (x2 - x1));\n          if(x1 < x2){ v = 1; } else{ v = -1; }\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v;\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v;\n        }\n        if(x2 == x3){\n          if(y2 < y3){ v = 1; } else{ v = -1; }\n          tx2 = x2;\n          ty2 = y2 + kage.kMage * v;\n        }\n        else if(y2 == y3){\n          if(x2 < x3){ v = 1; } else{ v = -1; }\n          tx2 = x2 + kage.kMage * v;\n          ty2 = y2;\n        }\n        else{\n          rad = Math.atan((y3 - y2) / (x3 - x2));\n          if(x2 < x3){ v = 1; } else{ v = -1; }\n          tx2 = x2 + kage.kMage * Math.cos(rad) * v;\n          ty2 = y2 + kage.kMage * Math.sin(rad) * v;\n        }\n        \n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, tx2, ty2, 1, 1);\n        cdDrawLine(kage, polygons, tx2, ty2, x3, y3, 1, a3);\n      }\n      break;\n    case 6:\n      if(a3 == 5){\n        tx1 = x4 - kage.kMage;\n        ty1 = y4;\n        tx2 = x4 + kage.kMage * 0.5;\n        ty2 = y4 - kage.kMage * 2;\n        /*\n\t\t\t\tcdDrawCurve(x1, y1, x2, y2, (x2 + x3) / 2, (y2 + y3) / 2, a2, 1);\n\t\t\t\tcdDrawCurve((x2 + x3) / 2, (y2 + y3) / 2, x3, y3, tx1, ty1, 1, 1);\n         */\n        cdDrawBezier(kage, polygons, x1, y1, x2, y2, x3, y3, tx1, ty1, a2, 1);\n        cdDrawCurve(kage, polygons, tx1, ty1, x4, y4, tx2, ty2, 1, 0);\n      }\n      else{\n        /*\n\t\t\t\tcdDrawCurve(x1, y1, x2, y2, (x2 + x3) / 2, (y2 + y3) / 2, a2, 1);\n\t\t\t\tcdDrawCurve((x2 + x3) / 2, (y2 + y3) / 2, x3, y3, x4, y4, 1, a3);\n         */\n        cdDrawBezier(kage, polygons, x1, y1, x2, y2, x3, y3, x4, y4, a2, a3);\n      }\n      break;\n    case 7:\n      cdDrawLine(kage, polygons, x1, y1, x2, y2, a2, 1);\n      cdDrawCurve(kage, polygons, x2, y2, x3, y3, x4, y4, 1, a3);\n      break;\n    case 9: // may not be exist\n      //kageCanvas[y1][x1] = 0;\n      //kageCanvas[y2][x2] = 0;\n      break;\n    default:\n      break;\n    }\n  }\n}function Polygon(number){\n  // resolution : 0.1\n  \n  // method\n  function push(x, y, off){ // void\n    var temp = new Object();\n    temp.x = Math.floor(x*10)/10;\n    temp.y = Math.floor(y*10)/10;\n    if(off != 1){\n      off = 0;\n    }\n    temp.off = off;\n    this.array.push(temp);\n  }\n  Polygon.prototype.push = push;\n  \n  function set(index, x, y, off){ // void\n    this.array[index].x = Math.floor(x*10)/10;\n    this.array[index].y = Math.floor(y*10)/10;\n    if(off != 1){\n      off = 0;\n    }\n    this.array[index].off = off;\n  }\n  Polygon.prototype.set = set;\n  \n  function reverse(){ // void\n    this.array.reverse();\n  }\n  Polygon.prototype.reverse = reverse;\n  \n  function concat(poly){ // void\n    this.array = this.array.concat(poly.array);\n  }\n  Polygon.prototype.concat = concat;\n\t\n  function shift(){ // void\n    this.array.shift();\n  }\n  Polygon.prototype.shift = shift;\n\t\n  function unshift(x, y, off){ // void\n    var temp = new Object();\n    temp.x = Math.floor(x*10)/10;\n    temp.y = Math.floor(y*10)/10;\n    if(off != 1){\n      off = 0;\n    }\n    temp.off = off;\n    this.array.unshift(temp);\n  }\n  Polygon.prototype.unshift = unshift;\n\t\n  // property\n  this.array = new Array();\n  \n  // initialize\n  if(number){\n    for(var i = 0; i < number; i++){\n      this.push(0, 0, 0);\n    }\n  }\n  \n  return this;\n}function Polygons(){\n  // method\n \tfunction clear(){ // void\n    this.array = new Array();\n  }\n  Polygons.prototype.clear = clear;\n\t\n  function push(polygon){ // void\n    // only a simple check\n    var minx = 200;\n    var maxx = 0;\n    var miny = 200;\n    var maxy = 0;\n    var error = 0;\n    for(var i = 0; i < polygon.array.length; i++){\n      if(polygon.array[i].x < minx){\n        minx = polygon.array[i].x;\n      }\n      if(polygon.array[i].x > maxx){\n        maxx = polygon.array[i].x;\n      }\n      if(polygon.array[i].y < miny){\n        miny = polygon.array[i].y;\n      }\n      if(polygon.array[i].y > maxy){\n        maxy = polygon.array[i].y;\n      }\n      if(isNaN(polygon.array[i].x) || isNaN(polygon.array[i].y)){\n        error++;\n      }\n    }\n    if(error == 0 && minx != maxx && miny != maxy && polygon.array.length >= 3){\n      var newArray = new Array();\n      newArray.push(polygon.array.shift());\n      while(polygon.array.length != 0){\n        var temp = polygon.array.shift();\n        //if(newArray[newArray.length - 1].x != temp.x ||\n        //   newArray[newArray.length - 1].y != temp.y){\n          newArray.push(temp);\n        //}\n      }\n      if(newArray.length >= 3){\n        polygon.array = newArray;\n        this.array.push(polygon);\n      }\n    }\n  }\n  Polygons.prototype.push = push;\n  \n  function generateSVG(curve){ // string\n    var buffer = \"\";\n    buffer += \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" version=\\\"1.1\\\" baseProfile=\\\"full\\\" viewBox=\\\"0 0 200 200\\\" width=\\\"200\\\" height=\\\"200\\\">\\n\";\n    if(curve){\n      for(var i = 0; i < this.array.length; i++){\n        var mode = \"L\";\n        buffer += \"<path d=\\\"M \";\n        buffer += this.array[i].array[0].x + \",\" + this.array[i].array[0].y + \" \";\n        for(var j = 1; j < this.array[i].array.length; j++){\n          if(this.array[i].array[j].off == 1){\n            buffer += \"Q \";\n            mode = \"Q\";\n          } else if(mode == \"Q\" && this.array[i].array[j - 1].off != 1){\n            buffer += \"L \";\n          } else if(mode == \"L\" && j == 1){\n            buffer += \"L \";\n          }\n          buffer += this.array[i].array[j].x + \",\" + this.array[i].array[j].y + \" \";\n        }\n        buffer += \"Z\\\" fill=\\\"black\\\" />\\n\";\n      }\n      buffer += \"</svg>\\n\";\n    } else {\n      buffer += \"<g fill=\\\"black\\\">\\n\";\n      for(var i = 0; i < this.array.length; i++){\n        buffer += \"<polygon points=\\\"\";\n        for(var j = 0; j < this.array[i].array.length; j++){\n          buffer += this.array[i].array[j].x + \",\" + this.array[i].array[j].y + \" \";\n        }\n        buffer += \"\\\" />\\n\";\n      }\n      buffer += \"</g>\\n\";\n      buffer += \"</svg>\\n\";\n    }\n    return buffer;\n  }\n  Polygons.prototype.generateSVG = generateSVG;\n  \n  function generateEPS(){ // string\n    var buffer = \"\";\n    buffer += \"%!PS-Adobe-3.0 EPSF-3.0\\n\";\n    buffer += \"%%BoundingBox: 0 -208 1024 816\\n\";\n    buffer += \"%%Pages: 0\\n\";\n    buffer += \"%%Title: Kanji glyph\\n\";\n    buffer += \"%%Creator: GlyphWiki powered by KAGE system\\n\";\n    buffer += \"%%CreationDate: \" + new Date() + \"\\n\";\n    buffer += \"%%EndComments\\n\";\n    buffer += \"%%EndProlog\\n\";\n    \n    for(var i = 0; i < this.array.length; i++){\n      for(var j = 0; j < this.array[i].array.length; j++){\n        buffer += (this.array[i].array[j].x * 5) + \" \" + (1000 - this.array[i].array[j].y * 5 - 200) + \" \";\n        if(j == 0){\n          buffer += \"newpath\\nmoveto\\n\";\n        } else {\n          buffer += \"lineto\\n\";\n        }\n      }\n      buffer += \"closepath\\nfill\\n\";\n    }\n    buffer += \"%%EOF\\n\";\n    return buffer;\n  }\n  Polygons.prototype.generateEPS = generateEPS;\n  \n  // property\n  this.array = new Array();\n  \n  return this;\n}\nmodule.exports={Kage:Kage,Polygons:Polygons}",
    "var Kage=require(\"kage\").Kage;\nvar Polygons=require(\"kage\").Polygons;\nvar React=require(\"react\");\nvar E=React.createElement;\n//var mockdata=require(\"./mockdata\");\n//var glyphs=[\"u5361\",\"u897f\",\"u52a0\",\"u6cb9\"];\nvar kage = new Kage();\nkage.kUseCurve = true;\nvar loadBuhins=function(fromserver){\n\tfor (var buhin in fromserver) {\n\t\tkage.kBuhin.push(buhin,fromserver[buhin]);\n\t}\n}\n//loadBuhins(mockdata);\n\nvar KageGlyph=React.createClass({displayName: \"KageGlyph\",\n\tpropTypes:{\n\t\tglyph:React.PropTypes.string.isRequired\n\t\t,size:React.PropTypes.number\n\t}\n\t,render:function(){\n\t\tvar polygons = new Polygons();\n\t\tvar glyph=this.props.glyph;\n\t\t//glyph=\"u2b101\"\n\t\tkage.makeGlyph(polygons, glyph);\n    var svg=polygons.generateSVG(true);\n\n      //viewBox=\"0 0 200 200\" width=\"200\" height=\"200\"\n    var size=this.props.size||64;\n    svg=svg.replace('viewBox=\"0 0 200 200\" width=\"200\" height=\"200\"',\n      'background-color=\"transparent\" viewBox=\"0 0 200 200\" width=\"'+size+'\" height=\"'+size+'\"');\n\t\treturn E(\"span\",{label:this.props.glyph, dangerouslySetInnerHTML:{__html:svg}});\n\t}\n});\nKageGlyph.loadBuhins=loadBuhins;\nmodule.exports=KageGlyph;",
    "var React=require(\"react\");\nvar Kage=require(\"kage\").Kage;\nvar KageGlyph=require(\"./kageglyph\");\nvar SingleGlyph=require(\"./singleglyph\");\nvar dgg=require(\"../dgg\");\nwindow.dgg=dgg; // just for debugging\n\nvar styles={\n  candidates:{outline:0,cursor:\"pointer\"}\n  ,input:{fontSize:\"200%\"}\n  ,component:{fontSize:\"150%\"}\n};\nvar E=React.createElement;\nvar getutf32=require(\"./uniutil\").getutf32;\nvar ucs2string=require(\"./uniutil\").ucs2string;\nvar chinese=function(c){\n  return ucs2string(parseInt(c.substr(1),16))\n}\nvar fontserverurl=\"http://chikage.linode.caasih.net/exploded/?inputs=\";\n\nvar maincomponent = React.createClass({displayName: \"maincomponent\",\n  getInitialState:function() {\n    window.main=this; // just for debugging\n    var toload=\"婆女卡棚朋國組且系財才手閉才火邏羅人\";\n    return {searchresult:[],toload:toload}\n  }\n  ,reformcase03:function(c,d,a,data){\n    var p=RegExp(d+'[^$:]*'); // 不一定有變體, 變體代碼也不一定是數字\n    var m=data[c].match(p);\n    if(m) data['new']=dgg.replace(c,m[0],a,data);\n  }\n  ,reformcase02:function(c,d,a,data){\n    var p=RegExp(d+'[^$:]*'); // 不一定有變體, 變體代碼也不一定是數字\n    var m=data[c].match(p);\n    if(m) data[m[0]]=data[a];\n  }\n  ,reformcase01:function(c,d,a,data){\n      data[c]=data[c].replace(d,a);\n  }\n  ,reform:function(buhins){\n    var data={}, newfonts=[];\n    for (var k in buhins) {\n      data[k]=buhins[k].replace(/@\\d+/g, \"\"); //workaround @n at the end\n    }\n    var ucs=this.ucs, unicodes=this.state.unicodes;\n    for(var i=0; i<unicodes.length; i+=3){\n      var c=unicodes[i], d=unicodes[i+1], a=unicodes[i+2];\n      var ua=ucs(a), ud=ucs(d), uc=ucs(c);\n      var p=RegExp(d+'[^$:]*'); // 不一定有變體, 變體代碼也不一定是數字\n      var m=data[c].match(p);\n      if(m){\n        var newdata=dgg.replace(c,m[0],a,data);\n        if(newdata){\n          var n=newfonts.length, newName=[ua,ud,uc].join(':');\n          data[newName]=newdata;\n          newfonts.push(newName);\n          console.log('use',ua,a,'to replace',ud,d,'in',uc,c);\n        }\n      }\n    }\n    data.newfonts=newfonts;\n    return data;\n  }\n  ,componentDidMount:function(){\n    this.loadFromServer();\n  }\n  ,ucs:function(c){if(c)return ucs2string(parseInt(c.substr(1),16));}\n  ,load:function(buhins) {\n    var data=this.reform(buhins); // 增加新字\n    KageGlyph.loadBuhins(data);\n    this.setState({data:data});\n    this.fontdataready=true;\n    this.setState({kagegkyph:this.renderGlyphs(this.state.toload)});\n    return;\n  }\n  ,renderGlyphs:function(toload) {\n    var opts={widestring:toload};\n    var unicodes=this.state.unicodes;\n    var newfonts=this.state.data.newfonts;\n    var out=[];\n    for(var i=0; i<newfonts.length; i++){\n      var newfont=newfonts[i];\n      var widechars=newfont.split(':');\n      if(this.state.data[newfont]){\n        var c=unicodes[i], d=unicodes[i+1], a=unicodes[i+2];\n        out.push('用'+a+'換'+d+'於'+c);\n        out.push(E(KageGlyph,{glyph: newfont, size: 80})); // 組合產生的新字\n      }\n    }\n    out.push(E('br'));\n    out.push(E('br'));\n    out.push('相關參考文字或部件');\n    out.push(E('br'));\n    Object.keys(this.state.data).forEach(function(key){\n      if(key==='newfonts')return;\n      out.push(key);\n      out.push(E(KageGlyph,{glyph: key, size: 40}))\n    });\n    return out;\n  }\n  ,loadFromServer:function() {\n    var toload=this.state.toload;\n    var url=fontserverurl+toload;\n    var opts={widestring:toload};\n    var unicodes=[],widechars=[],unicode,widechar,i=0;\n    while (unicode=getutf32(opts)){\n      unicodes[i]='u'+unicode.toString(16);\n      widechars[i]=widechar=ucs2string(unicode); i++;\n    }\n    this.setState({unicodes:unicodes,widechars:widechars});\n    fetch(url)\n      .then(function(response){\n        var json=response.json();\n        return json; })\n      .then(this.load);\n  }  \n  ,onChange:function(e) {\n    clearTimeout(this.timer1);\n    var toload=e.target.value;\n    if(this.state.data)\n      this.state.data['new']=undefined;\n    this.setState({toload:toload});\n    this.timer1=setTimeout(function(){\n      this.loadFromServer();\n    }.bind(this),0)\n  }\n  ,render: function() {\n    if (window.location.search) {\n      return E(SingleGlyph,{expression:window.location.search.substr(1)})\n    }\n    return E(\"div\", null, \"下列輸入格, 三個字 cda 一組, 將字 c 部件 d 換成 a, 用以組成ㄧ個新字:\"\n            ,E(\"br\")\n            ,E(\"input\"\n              ,{ref:\"toload\"\n              ,value:this.state.toload\n              ,onChange:this.onChange\n              ,style:styles.input,size:50})\n            ,E(\"br\")\n            ,E(\"span\"\n              ,{ref:\"candidates\"\n              ,onMouseUp:this.onselect\n              ,onTouchTap:this.onselect\n              ,style:styles.candidates}\n            ,this.state.kagegkyph)\n            );\n  }\n});\nmodule.exports=maincomponent;",
    "// singleGlyph.js\n// http://127.0.0.1:2556/kage-glyph-sample/?s=120&q=婆女卡棚朋國組且系財才手閉才火邏羅人\n\nvar React=require(\"react\");\nvar Kage=require(\"kage\").Kage;\nvar KageGlyph=require(\"./kageglyph\");\nvar getutf32=require(\"./uniutil\").getutf32;\nvar ucs2string=require(\"./uniutil\").ucs2string;\nvar E=React.createElement;\nvar SingleGlyph=React.createClass({displayName: \"SingleGlyph\",\n\t\n\tgetInitialState:function() {\n\t    var q=decodeURIComponent(this.props.expression);\n\t    var parm={};\n\t    q.split(\"&\").forEach(function(t){\n\t    \tvar L=t.split(\"=\");\n\t    \tparm[L[0]]=L[1];\n\t    });\n\t    var toload=parm.q||\"婆女卡棚朋國組且系財才手閉才火邏羅人\", size=parseInt(parm.s||40);\n\t    console.log(toload+' of size '+size);\n\t    this.timer1=setTimeout(function(){\n\t      this.loadFromServer();\n\t    }.bind(this),0)\n\t    return {searchresult:[],toload:toload,size:size,data:{newfonts:{}}}\n\t}\n\t,loadFromServer:function() {\n\t\tvar toload=this.state.toload;\n\t\tvar url=\"http://chikage.linode.caasih.net/exploded/?inputs=\"+toload;\n\t\tvar opts={widestring:toload};\n\t\tvar unicodes=[],widechars=[],unicode,widechar,i=0;\n\t\twhile (unicode=getutf32(opts)){\n\t\t  unicodes[i]='u'+unicode.toString(16);\n\t\t  widechars[i]=widechar=ucs2string(unicode); i++;\n\t\t}\n\t\tthis.setState({unicodes:unicodes,widechars:widechars});\n\t\tfetch(url)\n\t\t  .then(function(response){\n\t\t    var json=response.json();\n\t\t    return json; })\n\t\t  .then(this.load);\n\t} \n\t,load:function(buhins) {\n\t\tvar data=this.reform(buhins); // 增加新字\n\t\tKageGlyph.loadBuhins(data);\n\t\tthis.setState({data:data});\n\t\tthis.fontdataready=true;\n\t\tthis.setState({kagegkyph:this.renderGlyphs(this.state.toload)});\n\t\treturn;\n\t}\n\t,reform:function(buhins){\n\t\tvar data={}, newfonts=[];\n\t\tfor (var k in buhins) {\n\t\t  data[k]=buhins[k].replace(/@\\d+/g, \"\"); //workaround @n at the end\n\t\t}\n\t\tvar ucs=this.ucs, unicodes=this.state.unicodes;\n\t\tfor(var i=0; i<unicodes.length; i+=3){\n\t\t  var c=unicodes[i], d=unicodes[i+1], a=unicodes[i+2];\n\t\t  var ua=ucs(a), ud=ucs(d), uc=ucs(c);\n\t\t  var p=RegExp(d+'[^$:]*'); // 不一定有變體, 變體代碼也不一定是數字\n\t\t  var m=data[c].match(p);\n\t\t  if(m){\n\t\t    var newdata=dgg.replace(c,m[0],a,data);\n\t\t    if(newdata){\n\t\t      var n=newfonts.length, newName=[ua,ud,uc].join(':');\n\t\t      data[newName]=newdata;\n\t\t      newfonts.push(newName);\n\t\t      console.log('use',ua,a,'to replace',ud,d,'in',uc,c);\n\t\t    }\n\t\t  }\n\t\t}\n\t\tdata.newfonts=newfonts;\n\t\treturn data;\n\t}\n\t,ucs:function(c){if(c)return ucs2string(parseInt(c.substr(1),16));}\n\t,renderGlyphs:function(toload) {\n\t\tvar opts={widestring:toload};\n\t\tvar unicodes=this.state.unicodes;\n\t\tvar newfonts=this.state.data.newfonts;\n\t\tvar out=[];\n\t\tfor(var i=0; i<newfonts.length; i++){\n\t\t\tvar newfont=newfonts[i];\n\t\t\tvar widechars=newfont.split(':');\n\t\t\tif(this.state.data[newfont]){\n\t\t\tout.push(E(KageGlyph,{glyph: newfont, size: this.state.size})); // 組合產生的新字\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\t,render:function() {\n\t\tvar toload=this.state.toload;\n\t\treturn E(\"div\",null,\n\t\t\tthis.renderGlyphs(this.state.toload));\n\t}\n})\nmodule.exports=SingleGlyph;",
    "\n//內碼轉字\nvar ucs2string = function (unicode) { //unicode ���X�� �r���A�textension B ���p\n    if (unicode >= 0x10000 && unicode <= 0x10FFFF) {\n      var hi = Math.floor((unicode - 0x10000) / 0x400) + 0xD800;\n      var lo = ((unicode - 0x10000) % 0x400) + 0xDC00;\n      return String.fromCharCode(hi) + String.fromCharCode(lo);\n    } else {\n      return String.fromCharCode(unicode);\n    }\n};\n//取得字元的utf32 值\nvar getutf32 = function (opt) { // return ucs32 value from a utf 16 string, advance the string automatically\n  if (!opt.widestring) return 0;\n  var s = opt.widestring;\n  var ic = s.charCodeAt(0);\n  var c = 1; // default BMP one widechar\n  if (ic >= 0xd800 && ic <= 0xdcff) {\n    var ic2 = s.charCodeAt(1);\n    ic = 0x10000 + ((ic & 0x3ff) * 1024) + (ic2 & 0x3ff);\n    c++; // surrogate pair\n  }\n  opt.thechar = s.substr(0, c);\n  opt.widestring = s.substr(c, s.length - c);\n  return ic;\n};\n\nmodule.exports={getutf32:getutf32,ucs2string:ucs2string};",
    "\nvar userCancel=false;\nvar files=[];\nvar totalDownloadByte=0;\nvar targetPath=\"\";\nvar tempPath=\"\";\nvar nfile=0;\nvar baseurl=\"\";\nvar result=\"\";\nvar downloading=false;\nvar startDownload=function(dbid,_baseurl,_files) { //return download id\n\tvar fs     = require(\"fs\");\n\tvar path   = require(\"path\");\n\n\t\n\tfiles=_files.split(\"\\uffff\");\n\tif (downloading) return false; //only one session\n\tuserCancel=false;\n\ttotalDownloadByte=0;\n\tnextFile();\n\tdownloading=true;\n\tbaseurl=_baseurl;\n\tif (baseurl[baseurl.length-1]!='/')baseurl+='/';\n\ttargetPath=ksanagap.rootPath+dbid+'/';\n\ttempPath=ksanagap.rootPath+\".tmp/\";\n\tresult=\"\";\n\treturn true;\n}\n\nvar nextFile=function() {\n\tsetTimeout(function(){\n\t\tif (nfile==files.length) {\n\t\t\tnfile++;\n\t\t\tendDownload();\n\t\t} else {\n\t\t\tdownloadFile(nfile++);\t\n\t\t}\n\t},100);\n}\n\nvar downloadFile=function(nfile) {\n\tvar url=baseurl+files[nfile];\n\tvar tmpfilename=tempPath+files[nfile];\n\tvar mkdirp = require(\"./mkdirp\");\n\tvar fs     = require(\"fs\");\n\tvar http   = require(\"http\");\n\n\tmkdirp.sync(path.dirname(tmpfilename));\n\tvar writeStream = fs.createWriteStream(tmpfilename);\n\tvar datalength=0;\n\tvar request = http.get(url, function(response) {\n\t\tresponse.on('data',function(chunk){\n\t\t\twriteStream.write(chunk);\n\t\t\ttotalDownloadByte+=chunk.length;\n\t\t\tif (userCancel) {\n\t\t\t\twriteStream.end();\n\t\t\t\tsetTimeout(function(){nextFile();},100);\n\t\t\t}\n\t\t});\n\t\tresponse.on(\"end\",function() {\n\t\t\twriteStream.end();\n\t\t\tsetTimeout(function(){nextFile();},100);\n\t\t});\n\t});\n}\n\nvar cancelDownload=function() {\n\tuserCancel=true;\n\tendDownload();\n}\nvar verify=function() {\n\treturn true;\n}\nvar endDownload=function() {\n\tnfile=files.length+1;//stop\n\tresult=\"cancelled\";\n\tdownloading=false;\n\tif (userCancel) return;\n\tvar fs     = require(\"fs\");\n\tvar mkdirp = require(\"./mkdirp\");\n\n\tfor (var i=0;i<files.length;i++) {\n\t\tvar targetfilename=targetPath+files[i];\n\t\tvar tmpfilename   =tempPath+files[i];\n\t\tmkdirp.sync(path.dirname(targetfilename));\n\t\tfs.renameSync(tmpfilename,targetfilename);\n\t}\n\tif (verify()) {\n\t\tresult=\"success\";\n\t} else {\n\t\tresult=\"error\";\n\t}\n}\n\nvar downloadedByte=function() {\n\treturn totalDownloadByte;\n}\nvar doneDownload=function() {\n\tif (nfile>files.length) return result;\n\telse return \"\";\n}\nvar downloadingFile=function() {\n\treturn nfile-1;\n}\n\nvar downloader={startDownload:startDownload, downloadedByte:downloadedByte,\n\tdownloadingFile:downloadingFile, cancelDownload:cancelDownload,doneDownload:doneDownload};\nmodule.exports=downloader;",
    "/* emulate filesystem on html5 browser */\nvar get_head=function(url,field,cb){\n\tvar xhr = new XMLHttpRequest();\n\txhr.open(\"HEAD\", url, true);\n\txhr.onreadystatechange = function() {\n\t\t\tif (this.readyState == this.DONE) {\n\t\t\t\tcb(xhr.getResponseHeader(field));\n\t\t\t} else {\n\t\t\t\tif (this.status!==200&&this.status!==206) {\n\t\t\t\t\tcb(\"\");\n\t\t\t\t}\n\t\t\t}\n\t};\n\txhr.send();\n}\nvar get_date=function(url,cb) {\n\tget_head(url,\"Last-Modified\",function(value){\n\t\tcb(value);\n\t});\n}\nvar get_size=function(url, cb) {\n\tget_head(url,\"Content-Length\",function(value){\n\t\tcb(parseInt(value));\n\t});\n};\nvar checkUpdate=function(url,fn,cb) {\n\tif (!url) {\n\t\tcb(false);\n\t\treturn;\n\t}\n\tget_date(url,function(d){\n\t\tAPI.fs.root.getFile(fn, {create: false, exclusive: false}, function(fileEntry) {\n\t\t\tfileEntry.getMetadata(function(metadata){\n\t\t\t\tvar localDate=Date.parse(metadata.modificationTime);\n\t\t\t\tvar urlDate=Date.parse(d);\n\t\t\t\tcb(urlDate>localDate);\n\t\t\t});\n\t\t},function(){\n\t\t\tcb(false);\n\t\t});\n\t});\n}\nvar download=function(url,fn,cb,statuscb,context) {\n\t var totalsize=0,batches=null,written=0;\n\t var fileEntry=0, fileWriter=0;\n\t var createBatches=function(size) {\n\t\tvar bytes=1024*1024, out=[];\n\t\tvar b=Math.floor(size / bytes);\n\t\tvar last=size %bytes;\n\t\tfor (var i=0;i<=b;i++) {\n\t\t\tout.push(i*bytes);\n\t\t}\n\t\tout.push(b*bytes+last);\n\t\treturn out;\n\t }\n\t var finish=function() {\n\t\t rm(fn,function(){\n\t\t\t\tfileEntry.moveTo(fileEntry.filesystem.root, fn,function(){\n\t\t\t\t\tsetTimeout( cb.bind(context,false) , 0) ;\n\t\t\t\t},function(e){\n\t\t\t\t\tconsole.log(\"failed\",e)\n\t\t\t\t});\n\t\t },this);\n\t };\n\t\tvar tempfn=\"temp.kdb\";\n\t\tvar batch=function(b) {\n\t\tvar abort=false;\n\t\tvar xhr = new XMLHttpRequest();\n\t\tvar requesturl=url+\"?\"+Math.random();\n\t\txhr.open('get', requesturl, true);\n\t\txhr.setRequestHeader('Range', 'bytes='+batches[b]+'-'+(batches[b+1]-1));\n\t\txhr.responseType = 'blob';\n\t\txhr.addEventListener('load', function() {\n\t\t\tvar blob=this.response;\n\t\t\tfileEntry.createWriter(function(fileWriter) {\n\t\t\t\tfileWriter.seek(fileWriter.length);\n\t\t\t\tfileWriter.write(blob);\n\t\t\t\twritten+=blob.size;\n\t\t\t\tfileWriter.onwriteend = function(e) {\n\t\t\t\t\tif (statuscb) {\n\t\t\t\t\t\tabort=statuscb.apply(context,[ fileWriter.length / totalsize,totalsize ]);\n\t\t\t\t\t\tif (abort) setTimeout( cb.bind(context,false) , 0) ;\n\t\t\t\t \t}\n\t\t\t\t\tb++;\n\t\t\t\t\tif (!abort) {\n\t\t\t\t\t\tif (b<batches.length-1) setTimeout(batch.bind(context,b),0);\n\t\t\t\t\t\telse                    finish();\n\t\t\t\t \t}\n\t\t\t \t};\n\t\t\t}, console.error);\n\t\t},false);\n\t\txhr.send();\n\t}\n\n\tget_size(url,function(size){\n\t\ttotalsize=size;\n\t\tif (!size) {\n\t\t\tif (cb) cb.apply(context,[false]);\n\t\t} else {//ready to download\n\t\t\trm(tempfn,function(){\n\t\t\t\t batches=createBatches(size);\n\t\t\t\t if (statuscb) statuscb.apply(context,[ 0, totalsize ]);\n\t\t\t\t API.fs.root.getFile(tempfn, {create: 1, exclusive: false}, function(_fileEntry) {\n\t\t\t\t\t\t\tfileEntry=_fileEntry;\n\t\t\t\t\t\tbatch(0);\n\t\t\t\t });\n\t\t\t},this);\n\t\t}\n\t});\n}\n\nvar readFile=function(filename,cb,context) {\n\tAPI.fs.root.getFile(filename, {create: false, exclusive: false},function(fileEntry) {\n\t\tfileEntry.file(function(file){\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onloadend = function(e) {\n\t\t\t\tif (cb) cb.call(cb,this.result);\n\t\t\t};\n\t\t\treader.readAsText(file,\"utf8\");\n\t\t});\n\t}, console.error);\n}\n\nfunction createDir(rootDirEntry, folders,  cb) {\n  // Throw out './' or '/' and move on to prevent something like '/foo/.//bar'.\n  if (folders[0] == '.' || folders[0] == '') {\n    folders = folders.slice(1);\n  }\n  rootDirEntry.getDirectory(folders[0], {create: true}, function(dirEntry) {\n    // Recursively add the new subfolder (if we still have another to create).\n    if (folders.length) {\n      createDir(dirEntry, folders.slice(1),cb);\n    } else {\n\t\t\tcb();\n\t\t}\n  }, cb);\n};\n\n\nvar writeFile=function(filename,buf,cb,context){\n\tvar write=function(fileEntry){\n\t\tfileEntry.createWriter(function(fileWriter) {\n\t\t\tfileWriter.write(buf);\n\t\t\tfileWriter.onwriteend = function(e) {\n\t\t\t\tif (cb) cb.apply(cb,[buf.byteLength]);\n\t\t\t};\n\t\t}, console.error);\n\t}\n\n\tvar getFile=function(filename){\n\t\tAPI.fs.root.getFile(filename, {exclusive:true}, function(fileEntry) {\n\t\t\twrite(fileEntry);\n\t\t}, function(){\n\t\t\t\tAPI.fs.root.getFile(filename, {create:true,exclusive:true}, function(fileEntry) {\n\t\t\t\t\twrite(fileEntry);\n\t\t\t\t});\n\n\t\t});\n\t}\n\tvar slash=filename.lastIndexOf(\"/\");\n\tif (slash>-1) {\n\t\tcreateDir(API.fs.root, filename.substr(0,slash).split(\"/\"),function(){\n\t\t\tgetFile(filename);\n\t\t});\n\t} else {\n\t\tgetFile(filename);\n\t}\n}\n\nvar readdir=function(cb,context) {\n\tvar dirReader = API.fs.root.createReader();\n\tvar out=[],that=this;\n\tdirReader.readEntries(function(entries) {\n\t\tif (entries.length) {\n\t\t\tfor (var i = 0, entry; entry = entries[i]; ++i) {\n\t\t\t\tif (entry.isFile) {\n\t\t\t\t\tout.push([entry.name,entry.toURL ? entry.toURL() : entry.toURI()]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tAPI.files=out;\n\t\tif (cb) cb.apply(context,[out]);\n\t}, function(){\n\t\tif (cb) cb.apply(context,[null]);\n\t});\n}\nvar getFileURL=function(filename) {\n\tif (!API.files ) return null;\n\tvar file= API.files.filter(function(f){return f[0]==filename});\n\tif (file.length) return file[0][1];\n}\nvar rm=function(filename,cb,context) {\n\tvar url=getFileURL(filename);\n\tif (url) rmURL(url,cb,context);\n\telse if (cb) cb.apply(context,[false]);\n}\n\nvar rmURL=function(filename,cb,context) {\n\twebkitResolveLocalFileSystemURL(filename, function(fileEntry) {\n\t\tfileEntry.remove(function() {\n\t\t\tif (cb) cb.apply(context,[true]);\n\t\t}, console.error);\n\t},  function(e){\n\t\tif (cb) cb.apply(context,[false]);//no such file\n\t});\n}\nfunction errorHandler(e) {\n\tconsole.error('Error: ' +e.name+ \" \"+e.message);\n}\nvar initfs=function(grantedBytes,cb,context) {\n\twebkitRequestFileSystem(PERSISTENT, grantedBytes,  function(fs) {\n\t\tAPI.fs=fs;\n\t\tAPI.quota=grantedBytes;\n\t\treaddir(function(){\n\t\t\tAPI.initialized=true;\n\t\t\tcb.apply(context,[grantedBytes,fs]);\n\t\t},context);\n\t}, errorHandler);\n}\nvar init=function(quota,cb,context) {\n\tnavigator.webkitPersistentStorage.requestQuota(quota,\n\t\t\tfunction(grantedBytes) {\n\t\t\t\tinitfs(grantedBytes,cb,context);\n\t\t}, errorHandler\n\t);\n}\nvar queryQuota=function(cb,context) {\n\tvar that=this;\n\tnavigator.webkitPersistentStorage.queryUsageAndQuota(\n\t function(usage,quota){\n\t\t\tinitfs(quota,function(){\n\t\t\t\tcb.apply(context,[usage,quota]);\n\t\t\t},context);\n\t});\n}\nvar API={\n\tinit:init\n\t,readdir:readdir\n\t,checkUpdate:checkUpdate\n\t,rm:rm\n\t,rmURL:rmURL\n\t,getFileURL:getFileURL\n\t,writeFile:writeFile\n\t,readFile:readFile\n\t,download:download\n\t,get_head:get_head\n\t,get_date:get_date\n\t,get_size:get_size\n\t,getDownloadSize:get_size\n\t,queryQuota:queryQuota\n}\nmodule.exports=API;\n",
    "var appname=\"installer\";\nif (typeof ksana==\"undefined\") {\n\twindow.ksana={platform:\"chrome\"};\n\tif (typeof process!==\"undefined\" && \n\t\tprocess.versions && process.versions[\"node-webkit\"]) {\n\t\twindow.ksana.platform=\"node-webkit\";\n\t}\n}\nvar switchApp=function(path) {\n\tvar fs=require(\"fs\");\n\tpath=\"../\"+path;\n\tappname=path;\n\tdocument.location.href= path+\"/index.html\"; \n\tprocess.chdir(path);\n}\nvar downloader={};\nvar rootPath=\"\";\n\nvar deleteApp=function(app) {\n\tconsole.error(\"not allow on PC, do it in File Explorer/ Finder\");\n}\nvar username=function() {\n\treturn \"\";\n}\nvar useremail=function() {\n\treturn \"\"\n}\nvar runtime_version=function() {\n\treturn \"1.4\";\n}\n\n//copy from liveupdate\nvar jsonp=function(url,dbid,callback,context) {\n  var script=document.getElementById(\"jsonp2\");\n  if (script) {\n    script.parentNode.removeChild(script);\n  }\n  window.jsonp_handler=function(data) {\n    if (typeof data==\"object\") {\n      data.dbid=dbid;\n      callback.apply(context,[data]);    \n    }  \n  }\n  window.jsonp_error_handler=function() {\n    console.error(\"url unreachable\",url);\n    callback.apply(context,[null]);\n  }\n  script=document.createElement('script');\n  script.setAttribute('id', \"jsonp2\");\n  script.setAttribute('onerror', \"jsonp_error_handler()\");\n  url=url+'?'+(new Date().getTime());\n  script.setAttribute('src', url);\n  document.getElementsByTagName('head')[0].appendChild(script); \n}\n\n\nvar loadKsanajs=function(){\n\n\tif (typeof process!=\"undefined\" && !process.browser) {\n\t\tvar ksanajs=require(\"fs\").readFileSync(\"./ksana.js\",\"utf8\").trim();\n\t\tdownloader=require(\"./downloader\");\n\t\tksana.js=JSON.parse(ksanajs.substring(14,ksanajs.length-1));\n\t\trootPath=process.cwd();\n\t\trootPath=require(\"path\").resolve(rootPath,\"..\").replace(/\\\\/g,\"/\")+'/';\n\t\tksana.ready=true;\n\t} else{\n\t\tvar url=window.location.origin+window.location.pathname.replace(\"index.html\",\"\")+\"ksana.js\";\n\t\tjsonp(url,appname,function(data){\n\t\t\tksana.js=data;\n\t\t\tksana.ready=true;\n\t\t});\n\t}\n}\n\nloadKsanajs();\n\nvar boot=function(appId,cb) {\n\tif (typeof appId==\"function\") {\n\t\tcb=appId;\n\t\tappId=\"unknownapp\";\n\t}\n\tif (!ksana.js && ksana.platform==\"node-webkit\") {\n\t\tloadKsanajs();\n\t}\n\tksana.appId=appId;\n\tvar timer=setInterval(function(){\n\t\t\tif (ksana.ready){\n\t\t\t\tclearInterval(timer);\n\t\t\t\tcb();\n\t\t\t}\n\t\t});\n}\n\n\nvar ksanagap={\n\tplatform:\"node-webkit\",\n\tstartDownload:downloader.startDownload,\n\tdownloadedByte:downloader.downloadedByte,\n\tdownloadingFile:downloader.downloadingFile,\n\tcancelDownload:downloader.cancelDownload,\n\tdoneDownload:downloader.doneDownload,\n\tswitchApp:switchApp,\n\trootPath:rootPath,\n\tdeleteApp: deleteApp,\n\tusername:username, //not support on PC\n\tuseremail:username,\n\truntime_version:runtime_version,\n\tboot:boot\n}\nmodule.exports=ksanagap;",
    "var started=false;\nvar timer=null;\nvar bundledate=null;\nvar get_date=require(\"./html5fs\").get_date;\nvar checkIfBundleUpdated=function() {\n\tget_date(\"bundle.js\",function(date){\n\t\tif (bundledate &&bundledate!=date){\n\t\t\tlocation.reload();\n\t\t}\n\t\tbundledate=date;\n\t});\n}\nvar livereload=function() {\n\tif(window.location.origin.indexOf(\"//127.0.0.1\")===-1) return;\n\n\tif (started) return;\n\n\ttimer1=setInterval(function(){\n\t\tcheckIfBundleUpdated();\n\t},2000);\n\tstarted=true;\n}\n\nmodule.exports=livereload;",
    "function mkdirP (p, mode, f, made) {\n     var path = nodeRequire('path');\n     var fs = nodeRequire('fs');\n\t\n    if (typeof mode === 'function' || mode === undefined) {\n        f = mode;\n        mode = 0x1FF & (~process.umask());\n    }\n    if (!made) made = null;\n\n    var cb = f || function () {};\n    if (typeof mode === 'string') mode = parseInt(mode, 8);\n    p = path.resolve(p);\n\n    fs.mkdir(p, mode, function (er) {\n        if (!er) {\n            made = made || p;\n            return cb(null, made);\n        }\n        switch (er.code) {\n            case 'ENOENT':\n                mkdirP(path.dirname(p), mode, function (er, made) {\n                    if (er) cb(er, made);\n                    else mkdirP(p, mode, cb, made);\n                });\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                fs.stat(p, function (er2, stat) {\n                    // if the stat fails, then that's super weird.\n                    // let the original error be the failure reason.\n                    if (er2 || !stat.isDirectory()) cb(er, made)\n                    else cb(null, made);\n                });\n                break;\n        }\n    });\n}\n\nmkdirP.sync = function sync (p, mode, made) {\n    var path = nodeRequire('path');\n    var fs = nodeRequire('fs');\n    if (mode === undefined) {\n        mode = 0x1FF & (~process.umask());\n    }\n    if (!made) made = null;\n\n    if (typeof mode === 'string') mode = parseInt(mode, 8);\n    p = path.resolve(p);\n\n    try {\n        fs.mkdirSync(p, mode);\n        made = made || p;\n    }\n    catch (err0) {\n        switch (err0.code) {\n            case 'ENOENT' :\n                made = sync(path.dirname(p), mode, made);\n                sync(p, mode, made);\n                break;\n\n            // In the case of any other error, just see if there's a dir\n            // there already.  If so, then hooray!  If not, then something\n            // is borked.\n            default:\n                var stat;\n                try {\n                    stat = fs.statSync(p);\n                }\n                catch (err1) {\n                    throw err0;\n                }\n                if (!stat.isDirectory()) throw err0;\n                break;\n        }\n    }\n\n    return made;\n};\n\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\n"
  ]
}