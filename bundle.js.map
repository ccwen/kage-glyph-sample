{
  "version": 3,
  "sources": [
    "../Users/cheahshen/AppData/Roaming/npm/node_modules/ksana-cli/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "kage-glyph-sample/index.js",
    "kage-glyph-sample/node_modules/kage/index.js",
    "kage-glyph-sample/src/kageglyph.js",
    "kage-glyph-sample/src/main.jsx",
    "kage-glyph-sample/src/uniutil.js",
    "node_modules/ksana2015-webruntime/downloader.js",
    "node_modules/ksana2015-webruntime/html5fs.js",
    "node_modules/ksana2015-webruntime/ksanagap.js",
    "node_modules/ksana2015-webruntime/livereload.js",
    "node_modules/ksana2015-webruntime/mkdirp.js"
  ],
  "names": [],
  "mappingskFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var React=require(\"react\");\r\nrequire(\"ksana2015-webruntime/livereload\")(); \r\nvar ksanagap=require(\"ksana2015-webruntime/ksanagap\");\r\nksanagap.boot(\"kage-glyph-sample\",function(){\r\n\tvar Main=React.createElement(require(\"./src/main.jsx\"));\r\n\tksana.mainComponent=React.render(Main,document.getElementById(\"main\"));\r\n});",
    "// Reference : http://www.cam.hi-ho.ne.jp/strong_warriors/teacher/chapter0{4,5}.html\r\n\r\nfunction point(x, y){\r\n  this.x = x;\r\n  this.y = y;\r\n}\r\n\r\nfunction getCrossPoint(x11, y11, x12, y12, x21, y21, x22, y22){ // point\r\n  var a1 = y12 - y11;\r\n  var b1 = x11 - x12;\r\n  var c1 = -1 * a1 * x11 - b1 * y11;\r\n  var a2 = y22 - y21;\r\n  var b2 = x21 - x22;\r\n  var c2 = -1 * a2 * x21 - b2 * y21;\r\n  \r\n  var temp = b1 * a2 - b2 * a1;\r\n  if(temp == 0){ // parallel\r\n    return false;\r\n  }\r\n  return new point((c1 * b2 - c2 * b1) / temp, (a1 * c2 - a2 * c1) / temp);\r\n}\r\n\r\nfunction isCross(x11, y11, x12, y12, x21, y21, x22, y22){ // boolean\r\n  var temp = getCrossPoint(x11, y11, x12, y12, x21, y21, x22, y22);\r\n  if(!temp){ return false; }\r\n  if(x11 < x12 && (temp.x < x11 || x12 < temp.x) ||\r\n     x11 > x12 && (temp.x < x12 || x11 < temp.x) ||\r\n     y11 < y12 && (temp.y < y11 || y12 < temp.y) ||\r\n     y11 > y12 && (temp.y < y12 || y11 < temp.y)\r\n     ){\r\n    return false;\r\n  }\r\n  if(x21 < x22 && (temp.x < x21 || x22 < temp.x) ||\r\n     x21 > x22 && (temp.x < x22 || x21 < temp.x) ||\r\n     y21 < y22 && (temp.y < y21 || y22 < temp.y) ||\r\n     y21 > y22 && (temp.y < y22 || y21 < temp.y)\r\n     ){\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction isCrossBox(x1, y1, x2, y2, bx1, by1, bx2, by2){ // boolean\r\n  if(isCross(x1, y1, x2, y2, bx1, by1, bx2, by1)){ return true; }\r\n  if(isCross(x1, y1, x2, y2, bx2, by1, bx2, by2)){ return true; }\r\n  if(isCross(x1, y1, x2, y2, bx1, by2, bx2, by2)){ return true; }\r\n  if(isCross(x1, y1, x2, y2, bx1, by1, bx1, by2)){ return true; }\r\n  return false;\r\n}\r\n\r\nfunction isCrossBoxWithOthers(strokesArray, i, bx1, by1, bx2, by2){ // boolean\r\n  for(var j = 0; j < strokesArray.length; j++){\r\n    if(i == j){ continue; }\r\n    switch(strokesArray[j][0]){\r\n    case 0:\r\n    case 8:\r\n    case 9:\r\n      break;\r\n    case 6:\r\n    case 7:\r\n      if(isCrossBox(strokesArray[j][7],\r\n                    strokesArray[j][8],\r\n                    strokesArray[j][9],\r\n                    strokesArray[j][10],\r\n                    bx1, by1, bx2, by2)){\r\n        return true;\r\n      }\r\n    case 2:\r\n    case 12:\r\n    case 3:\r\n      if(isCrossBox(strokesArray[j][5],\r\n                    strokesArray[j][6],\r\n                    strokesArray[j][7],\r\n                    strokesArray[j][8],\r\n                    bx1, by1, bx2, by2)){\r\n        return true;\r\n      }\r\n    default:\r\n      if(isCrossBox(strokesArray[j][3],\r\n                    strokesArray[j][4],\r\n                    strokesArray[j][5],\r\n                    strokesArray[j][6],\r\n                    bx1, by1, bx2, by2)){\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction isCrossWithOthers(strokesArray, i, bx1, by1, bx2, by2){ // boolean\r\n  for(var j = 0; j < strokesArray.length; j++){\r\n    if(i == j){ continue; }\r\n    switch(strokesArray[j][0]){\r\n    case 0:\r\n    case 8:\r\n    case 9:\r\n      break;\r\n    case 6:\r\n    case 7:\r\n      if(isCross(strokesArray[j][7],\r\n                 strokesArray[j][8],\r\n                 strokesArray[j][9],\r\n                 strokesArray[j][10],\r\n                 bx1, by1, bx2, by2)){\r\n        return true;\r\n      }\r\n    case 2:\r\n    case 12:\r\n    case 3:\r\n      if(isCross(strokesArray[j][5],\r\n                 strokesArray[j][6],\r\n                 strokesArray[j][7],\r\n                 strokesArray[j][8],\r\n                 bx1, by1, bx2, by2)){\r\n        return true;\r\n      }\r\n    default:\r\n      if(isCross(strokesArray[j][3],\r\n                 strokesArray[j][4],\r\n                 strokesArray[j][5],\r\n                 strokesArray[j][6],\r\n                 bx1, by1, bx2, by2)){\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}function Buhin(number){\r\n  // method\r\n  function set(name, data){ // void\r\n    this.hash[name] = data;\r\n  }\r\n  Buhin.prototype.push = set;\r\n  Buhin.prototype.set = set;\r\n  \r\n  function search(name){ // string\r\n    if(this.hash[name]){\r\n      return this.hash[name];\r\n    }\r\n    return \"\"; // no data\r\n  }\r\n  Buhin.prototype.search = search;\r\n  \r\n  // property\r\n  this.hash = {};\r\n  \r\n  // initialize\r\n  // no operation\r\n  \r\n  return this;\r\n}function divide_curve(kage, x1, y1, sx1, sy1, x2, y2, curve, div_curve, off_curve){\r\n  var rate = 0.5;\r\n  var cut = Math.floor(curve.length * rate);\r\n  var cut_rate = cut / curve.length;\r\n  var tx1 = x1 + (sx1 - x1) * cut_rate;\r\n  var ty1 = y1 + (sy1 - y1) * cut_rate;\r\n  var tx2 = sx1 + (x2 - sx1) * cut_rate;\r\n  var ty2 = sy1 + (y2 - sy1) * cut_rate;\r\n  var tx3 = tx1 + (tx2 - tx1) * cut_rate;\r\n  var ty3 = ty1 + (ty2 - ty1) * cut_rate;\r\n  \r\n  div_curve[0] = new Array();\r\n  div_curve[1] = new Array();\r\n  off_curve[0] = new Array(6);\r\n  off_curve[1] = new Array(6);\r\n  \r\n  // must think about 0 : <0\r\n  var i;\r\n  for(i = 0; i <= cut; i++){\r\n    div_curve[0].push(curve[i]);\r\n  }\r\n  off_curve[0][0] = x1;\r\n  off_curve[0][1] = y1;\r\n  off_curve[0][2] = tx1;\r\n  off_curve[0][3] = ty1;\r\n  off_curve[0][4] = tx3;\r\n  off_curve[0][5] = ty3;\r\n  \r\n  for(i = cut; i < curve.length; i++){\r\n    div_curve[1].push(curve[i]);\r\n  }\r\n  off_curve[1][0] = tx3;\r\n  off_curve[1][1] = ty3;\r\n  off_curve[1][2] = tx2;\r\n  off_curve[1][3] = ty2;\r\n  off_curve[1][4] = x2;\r\n  off_curve[1][5] = y2;\r\n}\r\n\r\n// ------------------------------------------------------------------\r\nfunction find_offcurve(kage, curve, sx, sy, result){\r\n  var nx1, ny1, nx2, ny2, tx, ty;\r\n  var minx, miny, count, diff;\r\n  var tt, t, x, y, ix, iy;\r\n  var mindiff = 100000;\r\n  var area = 8;\r\n  var mesh = 2;\r\n  // area = 10   mesh = 5 -> 281 calcs\r\n  // area = 10   mesh = 4 -> 180 calcs\r\n  // area =  8   mesh = 4 -> 169 calcs\r\n  // area =  7.5 mesh = 3 -> 100 calcs\r\n  // area =  8   mesh = 2 ->  97 calcs\r\n  // area =  7   mesh = 2 ->  80 calcs\r\n  \r\n  nx1 = curve[0][0];\r\n  ny1 = curve[0][1];\r\n  nx2 = curve[curve.length - 1][0];\r\n  ny2 = curve[curve.length - 1][1];\r\n  \r\n  for(tx = sx - area; tx < sx + area; tx += mesh){\r\n    for(ty = sy - area; ty < sy + area; ty += mesh){\r\n      count = 0;\r\n      diff = 0;\r\n      for(tt = 0; tt < curve.length; tt++){\r\n        t = tt / curve.length;\r\n        \r\n        //calculate a dot\r\n        x = ((1.0 - t) * (1.0 - t) * nx1 + 2.0 * t * (1.0 - t) * tx + t * t * nx2);\r\n        y = ((1.0 - t) * (1.0 - t) * ny1 + 2.0 * t * (1.0 - t) * ty + t * t * ny2);\r\n        \r\n        //KATAMUKI of vector by BIBUN\r\n        ix = (nx1 - 2.0 * tx + nx2) * 2.0 * t + (-2.0 * nx1 + 2.0 * tx);\r\n        iy = (ny1 - 2.0 * ty + ny2) * 2.0 * t + (-2.0 * ny1 + 2.0 * ty);\r\n        \r\n        diff += (curve[count][0] - x) * (curve[count][0] - x) + (curve[count][1] - y) * (curve[count][1] - y);\r\n        if(diff > mindiff){\r\n          tt = curve.length;\r\n        }\r\n        count++;\r\n      }\r\n      if(diff < mindiff){\r\n        minx = tx;\r\n        miny = ty;\r\n        mindiff = diff;\r\n      }\r\n    }\r\n  }\r\n  \r\n  for(tx = minx - mesh + 1; tx <= minx + mesh - 1; tx += 0.5){\r\n    for(ty = miny - mesh + 1; ty <= miny + mesh - 1; ty += 0.5){\r\n      count = 0;\r\n      diff = 0;\r\n      for(tt = 0; tt < curve.length; tt++){\r\n        t = tt / curve.length;\r\n        \r\n        //calculate a dot\r\n        x = ((1.0 - t) * (1.0 - t) * nx1 + 2.0 * t * (1.0 - t) * tx + t * t * nx2);\r\n        y = ((1.0 - t) * (1.0 - t) * ny1 + 2.0 * t * (1.0 - t) * ty + t * t * ny2);\r\n        \r\n        //KATAMUKI of vector by BIBUN\r\n        ix = (nx1 - 2.0 * tx + nx2) * 2.0 * t + (-2.0 * nx1 + 2.0 * tx);\r\n        iy = (ny1 - 2.0 * ty + ny2) * 2.0 * t + (-2.0 * ny1 + 2.0 * ty);\r\n        \r\n        diff += (curve[count][0] - x) * (curve[count][0] - x) + (curve[count][1] - y) * (curve[count][1] - y);\r\n        if(diff > mindiff){\r\n          tt = curve.length;\r\n        }\r\n        count++;\r\n      }\r\n      if(diff < mindiff){\r\n        minx = tx;\r\n        miny = ty;\r\n        mindiff = diff;\r\n      }\r\n    }\r\n  }\r\n  \r\n  result[0] = nx1;\r\n  result[1] = ny1;\r\n  result[2] = minx;\r\n  result[3] = miny;\r\n  result[4] = nx2;\r\n  result[5] = ny2;\r\n  result[6] = mindiff;\r\n}\r\n\r\n// ------------------------------------------------------------------\r\nfunction get_candidate(kage, curve, a1, a2, x1, y1, sx1, sy1, x2, y2, opt3, opt4){\r\n  var x, y, ix, iy, ir, ia, ib, tt, t, deltad;\r\n  var hosomi = 0.5;\r\n  \r\n  curve[0] = new Array();\r\n  curve[1] = new Array();\r\n  \r\n  for(tt = 0; tt <= 1000; tt = tt + kage.kRate){\r\n    t = tt / 1000;\r\n    \r\n    //calculate a dot\r\n    x = ((1.0 - t) * (1.0 - t) * x1 + 2.0 * t * (1.0 - t) * sx1 + t * t * x2);\r\n    y = ((1.0 - t) * (1.0 - t) * y1 + 2.0 * t * (1.0 - t) * sy1 + t * t * y2);\r\n    \r\n    //KATAMUKI of vector by BIBUN\r\n    ix = (x1 - 2.0 * sx1 + x2) * 2.0 * t + (-2.0 * x1 + 2.0 * sx1);\r\n    iy = (y1 - 2.0 * sy1 + y2) * 2.0 * t + (-2.0 * y1 + 2.0 * sy1);\r\n    //line SUICHOKU by vector\r\n    if(ix != 0 && iy != 0){\r\n      ir = Math.atan(iy / ix * -1);\r\n      ia = Math.sin(ir) * (kage.kMinWidthT);\r\n      ib = Math.cos(ir) * (kage.kMinWidthT);\r\n    }\r\n    else if(ix == 0){\r\n      ia = kage.kMinWidthT;\r\n      ib = 0;\r\n    }\r\n    else{\r\n      ia = 0;\r\n      ib = kage.kMinWidthT;\r\n    }\r\n    \r\n    if(a1 == 7 && a2 == 0){ // L2RD: fatten\r\n      deltad = Math.pow(t, hosomi) * kage.kL2RDfatten;\r\n    }\r\n    else if(a1 == 7){\r\n      deltad = Math.pow(t, hosomi);\r\n    }\r\n    else if(a2 == 7){\r\n      deltad = Math.pow(1.0 - t, hosomi);\r\n    }\r\n    else if(opt3 > 0){\r\n      deltad = (((kage.kMinWidthT - opt4 / 2) - opt3 / 2) / (kage.kMinWidthT - opt4 / 2)) + opt3 / 2 / (kage.kMinWidthT - opt4) * t;\r\n    }\r\n    else{ deltad = 1; }\r\n    \r\n    if(deltad < 0.15){\r\n      deltad = 0.15;\r\n    }\r\n    ia = ia * deltad;\r\n    ib = ib * deltad;\r\n    \r\n    //reverse if vector is going 2nd/3rd quadrants\r\n    if(ix <= 0){\r\n      ia = ia * -1;\r\n      ib = ib * -1;\r\n    }\r\n    \r\n    temp = new Array(2);\r\n    temp[0] = x - ia;\r\n    temp[1] = y - ib;\r\n    curve[0].push(temp);\r\n    temp = new Array(2);\r\n    temp[0] = x + ia;\r\n    temp[1] = y + ib;\r\n    curve[1].push(temp);\r\n  }\r\n}function Kage(size){\r\n  // method\r\n  function makeGlyph(polygons, buhin){ // void\r\n    var glyphData = this.kBuhin.search(buhin);\r\n    this.makeGlyph2(polygons, glyphData);\r\n  }\r\n  Kage.prototype.makeGlyph = makeGlyph;\r\n  \r\n  function makeGlyph2(polygons, data){ // void\r\n      if(data != \"\"){\r\n\t  var strokesArray = this.adjustKirikuchi(this.adjustUroko2(this.adjustUroko(this.adjustKakato(this.adjustTate(this.adjustMage(this.adjustHane(this.getEachStrokes(data))))))));\r\n\t  for(var i = 0; i < strokesArray.length; i++){\r\n\t      dfDrawFont(this, polygons,\r\n\t\t\t strokesArray[i][0],\r\n\t\t\t strokesArray[i][1],\r\n\t\t\t strokesArray[i][2],\r\n\t\t\t strokesArray[i][3],\r\n\t\t\t strokesArray[i][4],\r\n\t\t\t strokesArray[i][5],\r\n\t\t\t strokesArray[i][6],\r\n\t\t\t strokesArray[i][7],\r\n\t\t\t strokesArray[i][8],\r\n\t\t\t strokesArray[i][9],\r\n\t\t\t strokesArray[i][10]);\r\n\t  }\r\n      }\r\n  }\r\n  Kage.prototype.makeGlyph2 = makeGlyph2;\r\n  \r\n  function makeGlyph3(data){ // void\r\n      var result = new Array();\r\n      if(data != \"\"){\r\n\t  var strokesArray = this.adjustKirikuchi(this.adjustUroko2(this.adjustUroko(this.adjustKakato(this.adjustTate(this.adjustMage(this.adjustHane(this.getEachStrokes(data))))))));\r\n\t  for(var i = 0; i < strokesArray.length; i++){\r\n\t      var polygons = new Polygons();\r\n\t      dfDrawFont(this, polygons,\r\n\t\t\t strokesArray[i][0],\r\n\t\t\t strokesArray[i][1],\r\n\t\t\t strokesArray[i][2],\r\n\t\t\t strokesArray[i][3],\r\n\t\t\t strokesArray[i][4],\r\n\t\t\t strokesArray[i][5],\r\n\t\t\t strokesArray[i][6],\r\n\t\t\t strokesArray[i][7],\r\n\t\t\t strokesArray[i][8],\r\n\t\t\t strokesArray[i][9],\r\n\t\t\t strokesArray[i][10]);\r\n\t      result.push(polygons);\r\n\t  }\r\n      }\r\n      return result;\r\n  }\r\n  Kage.prototype.makeGlyph3 = makeGlyph3;\r\n  \r\n  function getEachStrokes(glyphData){ // strokes array\r\n    var strokesArray = new Array();\r\n    var strokes = glyphData.split(\"$\");\r\n    for(var i = 0; i < strokes.length; i++){\r\n      var columns = strokes[i].split(\":\");\r\n      if(Math.floor(columns[0]) != 99){\r\n        strokesArray.push([\r\n          Math.floor(columns[0]),\r\n          Math.floor(columns[1]),\r\n          Math.floor(columns[2]),\r\n          Math.floor(columns[3]),\r\n          Math.floor(columns[4]),\r\n          Math.floor(columns[5]),\r\n          Math.floor(columns[6]),\r\n          Math.floor(columns[7]),\r\n          Math.floor(columns[8]),\r\n          Math.floor(columns[9]),\r\n          Math.floor(columns[10])\r\n          ]);\r\n      } else {\r\n        var buhin = this.kBuhin.search(columns[7]);\r\n        if(buhin != \"\"){\r\n          strokesArray = strokesArray.concat(this.getEachStrokesOfBuhin(buhin,\r\n                                                  Math.floor(columns[3]),\r\n                                                  Math.floor(columns[4]),\r\n                                                  Math.floor(columns[5]),\r\n                                                  Math.floor(columns[6]),\r\n                                                  Math.floor(columns[1]),\r\n                                                  Math.floor(columns[2]),\r\n                                                  Math.floor(columns[9]),\r\n                                                  Math.floor(columns[10]))\r\n                            );\r\n        }\r\n      }\r\n    }\r\n    return strokesArray;\r\n  }\r\n  Kage.prototype.getEachStrokes = getEachStrokes;\r\n  \r\n  function getEachStrokesOfBuhin(buhin, x1, y1, x2, y2, sx, sy, sx2, sy2){\r\n    var temp = this.getEachStrokes(buhin);\r\n    var result = new Array();\r\n    var box = this.getBox(buhin);\r\n      if(sx != 0 || sy != 0){\r\n\t  if(sx > 100){\r\n\t      sx -= 200; // Ç¤°ÕÅÀ¥â¡¼¥É\r\n\t  } else {\r\n\t      sx2 = 0; // Ãæ¿´ÅÀ¥â¡¼¥É\r\n\t      sy2 = 0;\r\n\t  }\r\n      }\r\n    for(var i = 0; i < temp.length; i++){\r\n\tif(sx != 0 || sy != 0){\r\n\t    temp[i][3] = stretch(sx, sx2, temp[i][3], box.minX, box.maxX);\r\n\t    temp[i][4] = stretch(sy, sy2, temp[i][4], box.minY, box.maxY);\r\n\t    temp[i][5] = stretch(sx, sx2, temp[i][5], box.minX, box.maxX);\r\n\t    temp[i][6] = stretch(sy, sy2,temp[i][6], box.minY, box.maxY);\r\n\t    if(temp[i][0] != 99){\r\n\t\ttemp[i][7] = stretch(sx, sx2, temp[i][7], box.minX, box.maxX);\t\r\n\t\ttemp[i][8] = stretch(sy, sy2, temp[i][8], box.minY, box.maxY);\r\n\t\ttemp[i][9] = stretch(sx, sx2, temp[i][9], box.minX, box.maxX);\r\n\t\ttemp[i][10] = stretch(sy, sy2, temp[i][10], box.minY, box.maxY);\r\n\t    }\r\n\t}\r\n      result.push([temp[i][0],\r\n                   temp[i][1],\r\n                   temp[i][2],\r\n                   x1 + temp[i][3] * (x2 - x1) / 200,\r\n                   y1 + temp[i][4] * (y2 - y1) / 200,\r\n                   x1 + temp[i][5] * (x2 - x1) / 200,\r\n                   y1 + temp[i][6] * (y2 - y1) / 200,\r\n                   x1 + temp[i][7] * (x2 - x1) / 200,\r\n                   y1 + temp[i][8] * (y2 - y1) / 200,\r\n                   x1 + temp[i][9] * (x2 - x1) / 200,\r\n                   y1 + temp[i][10] * (y2 - y1) / 200]);\r\n    }\r\n    return result;\r\n  }\r\n  Kage.prototype.getEachStrokesOfBuhin = getEachStrokesOfBuhin;\r\n  \r\n  function adjustHane(sa){ // strokesArray\r\n      for(var i = 0; i < sa.length; i++){\r\n\t  if((sa[i][0] == 1 || sa[i][0] == 2 || sa[i][0] == 6) && sa[i][2] == 4){\r\n\t      var lpx; // lastPointX\r\n\t      var lpy; // lastPointY\r\n\t      if(sa[i][0] == 1){\r\n\t\t  lpx = sa[i][5];\r\n\t\t  lpy = sa[i][6];\r\n\t      } else if(sa[i][0] == 2){\r\n\t\t  lpx = sa[i][7];\r\n\t\t  lpy = sa[i][8];\r\n\t      } else {\r\n\t\t  lpx = sa[i][9];\r\n\t\t  lpy = sa[i][10];\r\n\t      }\r\n\t      var mn = Infinity; // mostNear\r\n\t      if(lpx + 18 < 100){\r\n\t\t  mn = lpx + 18;\r\n\t      }\r\n\t      for(var j = 0; j < sa.length; j++){\r\n\t\t  if(i != j && sa[j][0] == 1 && sa[j][3] == sa[j][5] && sa[j][3] < lpx && sa[j][4] <= lpy && sa[j][6] >= lpy){\r\n\t\t      if(lpx - sa[j][3] < 100){\r\n\t\t\t  mn = Math.min(mn, lpx - sa[j][3]);\r\n\t\t      }\r\n\t\t  }\r\n\t      }\r\n\t      if(mn != Infinity){\r\n\t\t  sa[i][2] += 700 - Math.floor(mn / 15) * 100; // 0-99 -> 0-700\r\n\t      }\r\n\t  }\r\n      }\r\n      return sa;\r\n  }\r\n  Kage.prototype.adjustHane = adjustHane;\r\n\r\n  function adjustUroko(strokesArray){ // strokesArray\r\n    for(var i = 0; i < strokesArray.length; i++){\r\n      if(strokesArray[i][0] == 1 && strokesArray[i][2] == 0){ // no operation for TATE\r\n        for(var k = 0; k < this.kAdjustUrokoLengthStep; k++){\r\n          var tx, ty, tlen;\r\n          if(strokesArray[i][4] == strokesArray[i][6]){ // YOKO\r\n            tx = strokesArray[i][5] - this.kAdjustUrokoLine[k];\r\n            ty = strokesArray[i][6] - 0.5;\r\n            tlen = strokesArray[i][5] - strokesArray[i][3];\r\n          } else {\r\n            var rad = Math.atan((strokesArray[i][6] - strokesArray[i][4]) / (strokesArray[i][5] - strokesArray[i][3]));\r\n            tx = strokesArray[i][5] - this.kAdjustUrokoLine[k] * Math.cos(rad) - 0.5 * Math.sin(rad);\r\n            ty = strokesArray[i][6] - this.kAdjustUrokoLine[k] * Math.sin(rad) - 0.5 * Math.cos(rad);\r\n            tlen = Math.sqrt((strokesArray[i][6] - strokesArray[i][4]) * (strokesArray[i][6] - strokesArray[i][4]) +\r\n                             (strokesArray[i][5] - strokesArray[i][3]) * (strokesArray[i][5] - strokesArray[i][3]));\r\n          }\r\n          if(tlen < this.kAdjustUrokoLength[k] ||\r\n             isCrossWithOthers(strokesArray, i, tx, ty, strokesArray[i][5], strokesArray[i][6])\r\n             ){\r\n            strokesArray[i][2] += (this.kAdjustUrokoLengthStep - k) * 100;\r\n            k = Infinity;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return strokesArray;\r\n  }\r\n  Kage.prototype.adjustUroko = adjustUroko;\r\n  \r\n  function adjustUroko2(strokesArray){ // strokesArray\r\n    for(var i = 0; i < strokesArray.length; i++){\r\n      if(strokesArray[i][0] == 1 && strokesArray[i][2] == 0 && strokesArray[i][4] == strokesArray[i][6]){\r\n        var pressure = 0;\r\n        for(var j = 0; j < strokesArray.length; j++){\r\n          if(i != j && (\r\n             (strokesArray[j][0] == 1 && strokesArray[j][4] == strokesArray[j][6] &&\r\n              !(strokesArray[i][3] + 1 > strokesArray[j][5] || strokesArray[i][5] - 1 < strokesArray[j][3]) &&\r\n              Math.abs(strokesArray[i][4] - strokesArray[j][4]) < this.kAdjustUroko2Length) ||\r\n             (strokesArray[j][0] == 3 && strokesArray[j][6] == strokesArray[j][8] &&\r\n              !(strokesArray[i][3] + 1 > strokesArray[j][7] || strokesArray[i][5] - 1 < strokesArray[j][5]) &&\r\n              Math.abs(strokesArray[i][4] - strokesArray[j][6]) < this.kAdjustUroko2Length)\r\n             )){\r\n            pressure += Math.pow(this.kAdjustUroko2Length - Math.abs(strokesArray[i][4] - strokesArray[j][6]), 1.1);\r\n          }\r\n        }\r\n        var result = Math.min(Math.floor(pressure / this.kAdjustUroko2Length), this.kAdjustUroko2Step) * 100;\r\n        if(strokesArray[i][2] < result){\r\n          strokesArray[i][2] = strokesArray[i][2] % 100 + Math.min(Math.floor(pressure / this.kAdjustUroko2Length), this.kAdjustUroko2Step) * 100;\r\n        }\r\n      }\r\n    }\r\n    return strokesArray;\r\n  }\r\n  Kage.prototype.adjustUroko2 = adjustUroko2;\r\n  \r\n  function adjustTate(strokesArray){ // strokesArray\r\n    for(var i = 0; i < strokesArray.length; i++){\r\n      if((strokesArray[i][0] == 1 || strokesArray[i][0] == 3 || strokesArray[i][0] == 7) && strokesArray[i][3] == strokesArray[i][5]){\r\n        for(var j = 0; j < strokesArray.length; j++){\r\n          if(i != j && (strokesArray[j][0] == 1 || strokesArray[j][0] == 3 || strokesArray[j][0] == 7) && strokesArray[j][3] == strokesArray[j][5] &&\r\n             !(strokesArray[i][4] + 1 > strokesArray[j][6] || strokesArray[i][6] - 1 < strokesArray[j][4]) &&\r\n             Math.abs(strokesArray[i][3] - strokesArray[j][3]) < this.kMinWidthT * this.kAdjustTateStep){\r\n            strokesArray[i][1] += (this.kAdjustTateStep - Math.floor(Math.abs(strokesArray[i][3] - strokesArray[j][3]) / this.kMinWidthT)) * 1000;\r\n            if(strokesArray[i][1] > this.kAdjustTateStep * 1000){\r\n              strokesArray[i][1] = strokesArray[i][1] % 1000 + this.kAdjustTateStep * 1000;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return strokesArray;\r\n  }\r\n  Kage.prototype.adjustTate = adjustTate;\r\n  \r\n  function adjustMage(strokesArray){ // strokesArray\r\n    for(var i = 0; i < strokesArray.length; i++){\r\n      if((strokesArray[i][0] == 3) && strokesArray[i][6] == strokesArray[i][8]){\r\n        for(var j = 0; j < strokesArray.length; j++){\r\n          if(i != j && (\r\n             (strokesArray[j][0] == 1 && strokesArray[j][4] == strokesArray[j][6] &&\r\n              !(strokesArray[i][5] + 1 > strokesArray[j][5] || strokesArray[i][7] - 1 < strokesArray[j][3]) &&\r\n              Math.abs(strokesArray[i][6] - strokesArray[j][4]) < this.kMinWidthT * this.kAdjustMageStep) ||\r\n             (strokesArray[j][0] == 3 && strokesArray[j][6] == strokesArray[j][8] &&\r\n              !(strokesArray[i][5] + 1 > strokesArray[j][7] || strokesArray[i][7] - 1 < strokesArray[j][5]) &&\r\n              Math.abs(strokesArray[i][6] - strokesArray[j][6]) < this.kMinWidthT * this.kAdjustMageStep)\r\n             )){\r\n            strokesArray[i][2] += (this.kAdjustMageStep - Math.floor(Math.abs(strokesArray[i][6] - strokesArray[j][6]) / this.kMinWidthT)) * 1000;\r\n            if(strokesArray[i][2] > this.kAdjustMageStep * 1000){\r\n              strokesArray[i][2] = strokesArray[i][2] % 1000 + this.kAdjustMageStep * 1000;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return strokesArray;\r\n  }\r\n  Kage.prototype.adjustMage = adjustMage;\r\n  \r\n  function adjustKirikuchi(strokesArray){ // strokesArray\r\n    for(var i = 0; i < strokesArray.length; i++){\r\n      if(strokesArray[i][0] == 2 && strokesArray[i][1] == 32 &&\r\n         strokesArray[i][3] > strokesArray[i][5] &&\r\n         strokesArray[i][4] < strokesArray[i][6]){\r\n        for(var j = 0; j < strokesArray.length; j++){ // no need to skip when i == j\r\n          if(strokesArray[j][0] == 1 &&\r\n             strokesArray[j][3] < strokesArray[i][3] && strokesArray[j][5] > strokesArray[i][3] &&\r\n             strokesArray[j][4] == strokesArray[i][4] && strokesArray[j][4] == strokesArray[j][6]){\r\n            strokesArray[i][1] = 132;\r\n            j = strokesArray.length;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return strokesArray;\r\n  }\r\n  Kage.prototype.adjustKirikuchi = adjustKirikuchi;\r\n  \r\n  function adjustKakato(strokesArray){ // strokesArray\r\n    for(var i = 0; i < strokesArray.length; i++){\r\n      if(strokesArray[i][0] == 1 &&\r\n         (strokesArray[i][2] == 13 || strokesArray[i][2] == 23)){\r\n        for(var k = 0; k < this.kAdjustKakatoStep; k++){\r\n          if(isCrossBoxWithOthers(strokesArray, i,\r\n                               strokesArray[i][5] - this.kAdjustKakatoRangeX / 2,\r\n                               strokesArray[i][6] + this.kAdjustKakatoRangeY[k],\r\n                               strokesArray[i][5] + this.kAdjustKakatoRangeX / 2,\r\n                               strokesArray[i][6] + this.kAdjustKakatoRangeY[k + 1])\r\n             | strokesArray[i][6] + this.kAdjustKakatoRangeY[k + 1] > 200 // adjust for baseline\r\n             | strokesArray[i][6] - strokesArray[i][4] < this.kAdjustKakatoRangeY[k + 1] // for thin box\r\n             ){\r\n            strokesArray[i][2] += (3 - k) * 100;\r\n            k = Infinity;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return strokesArray;\r\n  }\r\n  Kage.prototype.adjustKakato = adjustKakato;\r\n  \r\n  function getBox(glyph){ // minX, minY, maxX, maxY\r\n      var a = new Object();\r\n      a.minX = 200;\r\n      a.minY = 200;\r\n      a.maxX = 0;\r\n      a.maxY = 0;\r\n      \r\n      var strokes = this.getEachStrokes(glyph);\r\n      for(var i = 0; i < strokes.length; i++){\r\n\t  if(strokes[i][0] == 0){ continue; }\r\n\t  a.minX = Math.min(a.minX, strokes[i][3]);\r\n\t  a.maxX = Math.max(a.maxX, strokes[i][3]);\r\n\t  a.minY = Math.min(a.minY, strokes[i][4]);\r\n\t  a.maxY = Math.max(a.maxY, strokes[i][4]);\r\n\t  a.minX = Math.min(a.minX, strokes[i][5]);\r\n\t  a.maxX = Math.max(a.maxX, strokes[i][5]);\r\n\t  a.minY = Math.min(a.minY, strokes[i][6]);\r\n\t  a.maxY = Math.max(a.maxY, strokes[i][6]);\r\n\t  if(strokes[i][0] == 1){ continue; }\r\n\t  if(strokes[i][0] == 99){ continue; }\r\n\t  a.minX = Math.min(a.minX, strokes[i][7]);\r\n\t  a.maxX = Math.max(a.maxX, strokes[i][7]);\r\n\t  a.minY = Math.min(a.minY, strokes[i][8]);\r\n\t  a.maxY = Math.max(a.maxY, strokes[i][8]);\r\n\t  if(strokes[i][0] == 2){ continue; }\r\n\t  if(strokes[i][0] == 3){ continue; }\r\n\t  if(strokes[i][0] == 4){ continue; }\r\n\t  a.minX = Math.min(a.minX, strokes[i][9]);\r\n\t  a.maxX = Math.max(a.maxX, strokes[i][9]);\r\n\t  a.minY = Math.min(a.minY, strokes[i][10]);\r\n\t  a.maxY = Math.max(a.maxY, strokes[i][10]);\r\n      }\r\n      return a;\r\n  }\r\n  Kage.prototype.getBox = getBox;\r\n\r\n  function stretch(dp, sp, p, min, max){ // interger\r\n      var p1, p2, p3, p4;\r\n      if(p < sp + 100){\r\n\t  p1 = min;\r\n\t  p3 = min;\r\n\t  p2 = sp + 100;\r\n\t  p4 = dp + 100;\r\n      } else {\r\n\t  p1 = sp + 100;\r\n\t  p3 = dp + 100;\r\n\t  p2 = max;\r\n\t  p4 = max;\r\n      }\r\n      return Math.floor(((p - p1) / (p2 - p1)) * (p4 - p3) + p3);\r\n  }\r\n  Kage.prototype.stretch = stretch;\r\n\r\n  //properties\r\n  Kage.prototype.kMincho = 0;\r\n  Kage.prototype.kGothic = 1;\r\n  this.kShotai = this.kMincho;\r\n  \r\n  this.kRate = 100;\r\n  \r\n  if(size == 1){\r\n    this.kMinWidthY = 1.2;\r\n    this.kMinWidthT = 3.6;\r\n    this.kWidth = 3;\r\n    this.kKakato = 1.8;\r\n    this.kL2RDfatten = 1.1;\r\n    this.kMage = 6;\r\n    this.kUseCurve = 0;\r\n    \r\n    this.kAdjustKakatoL = ([8, 5, 3, 1]); // for KAKATO adjustment 000,100,200,300\r\n    this.kAdjustKakatoR = ([4, 3, 2, 1]); // for KAKATO adjustment 000,100,200,300\r\n    this.kAdjustKakatoRangeX = 12; // check area width\r\n    this.kAdjustKakatoRangeY = ([1, 11, 14, 18]); // 3 steps of checking\r\n    this.kAdjustKakatoStep = 3; // number of steps\r\n    \r\n    this.kAdjustUrokoX = ([14, 12, 9, 7]); // for UROKO adjustment 000,100,200,300\r\n    this.kAdjustUrokoY = ([7, 6, 5, 4]); // for UROKO adjustment 000,100,200,300\r\n    this.kAdjustUrokoLength = ([13, 21, 30]); // length for checking\r\n    this.kAdjustUrokoLengthStep = 3; // number of steps\r\n    this.kAdjustUrokoLine = ([13, 15, 18]); // check for crossing. corresponds to length\r\n  } else {\r\n    this.kMinWidthY = 2;\r\n    this.kMinWidthT = 6;\r\n    this.kWidth = 5;\r\n    this.kKakato = 3;\r\n    this.kL2RDfatten = 1.1;\r\n    this.kMage = 10;\r\n    this.kUseCurve = 0;\r\n    \r\n    this.kAdjustKakatoL = ([14, 9, 5, 2]); // for KAKATO adjustment 000,100,200,300\r\n    this.kAdjustKakatoR = ([8, 6, 4, 2]); // for KAKATO adjustment 000,100,200,300\r\n    this.kAdjustKakatoRangeX = 20; // check area width\r\n    this.kAdjustKakatoRangeY = ([1, 19, 24, 30]); // 3 steps of checking\r\n    this.kAdjustKakatoStep = 3; // number of steps\r\n    \r\n    this.kAdjustUrokoX = ([24, 20, 16, 12]); // for UROKO adjustment 000,100,200,300\r\n    this.kAdjustUrokoY = ([12, 11, 9, 8]); // for UROKO adjustment 000,100,200,300\r\n    this.kAdjustUrokoLength = ([22, 36, 50]); // length for checking\r\n    this.kAdjustUrokoLengthStep = 3; // number of steps\r\n    this.kAdjustUrokoLine = ([22, 26, 30]); // check for crossing. corresponds to length\r\n    \r\n    this.kAdjustUroko2Step = 3;\r\n    this.kAdjustUroko2Length = 40;\r\n    \r\n    this.kAdjustTateStep = 4;\r\n    \r\n    this.kAdjustMageStep = 5;\r\n  }\r\n  \r\n  this.kBuhin = new Buhin();\r\n  \r\n  return this;\r\n}\r\nfunction cdDrawCurveU(kage, polygons, x1, y1, sx1, sy1, sx2, sy2, x2, y2, ta1, ta2){\r\n  var rad, t;\r\n  var x, y, v;\r\n  var ix, iy, ia, ib, ir;\r\n  var tt;\r\n  var delta;\r\n  var deltad;\r\n  var XX, XY, YX, YY;\r\n  var poly, poly2;\r\n  var hosomi;\r\n  var kMinWidthT, kMinWidthT2;\r\n  var a1, a2, opt1, opt2, opt3, opt4;\r\n  \r\n  if(kage.kShotai == kage.kMincho){ // mincho\r\n    a1 = ta1 % 1000;\r\n    a2 = ta2 % 100;\r\n    opt1 = Math.floor((ta1 % 10000) / 1000);\r\n    opt2 = Math.floor((ta2 % 1000) / 100);\r\n    opt3 = Math.floor(ta1 / 10000);\r\n    opt4 = Math.floor(ta2 / 1000);\r\n    \r\n    kMinWidthT = kage.kMinWidthT - opt1 / 2;\r\n    kMinWidthT2 = kage.kMinWidthT - opt4 / 2;\r\n    \r\n    switch(a1 % 100){\r\n    case 0:\r\n    case 7:\r\n      delta = -1 * kage.kMinWidthY * 0.5;\r\n      break;\r\n    case 1:\r\n    case 2: // ... must be 32\r\n    case 6:\r\n    case 22:\r\n    case 32: // changed\r\n      delta = 0;\r\n      break;\r\n    case 12:\r\n    //case 32:\r\n      delta = kage.kMinWidthY;\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n    \r\n    if(x1 == sx1){\r\n      if(y1 < sy1){ y1 = y1 - delta; }\r\n      else{ y1 = y1 + delta; }\r\n    }\r\n    else if(y1 == sy1){\r\n      if(x1 < sx1){ x1 = x1 - delta; }\r\n      else{ x1 = x1 + delta; }\r\n    }\r\n    else{\r\n      rad = Math.atan((sy1 - y1) / (sx1 - x1));\r\n      if(x1 < sx1){ v = 1; } else{ v = -1; }\r\n      x1 = x1 - delta * Math.cos(rad) * v;\r\n      y1 = y1 - delta * Math.sin(rad) * v;\r\n    }\r\n    \r\n    switch(a2 % 100){\r\n    case 0:\r\n    case 1:\r\n    case 7:\r\n    case 9:\r\n    case 15: // it can change to 15->5\r\n    case 14: // it can change to 14->4\r\n    case 17: // no need\r\n    case 5:\r\n      delta = 0;\r\n      break;\r\n    case 8: // get shorten for tail's circle\r\n      delta = -1 * kMinWidthT * 0.5;\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n    \r\n    if(sx2 == x2){\r\n      if(sy2 < y2){ y2 = y2 + delta; }\r\n      else{ y2 = y2 - delta; }\r\n    }\r\n    else if(sy2 == y2){\r\n      if(sx2 < x2){ x2 = x2 + delta; }\r\n      else{ x2 = x2 - delta; }\r\n    }\r\n    else{\r\n      rad = Math.atan((y2 - sy2) / (x2 - sx2));\r\n      if(sx2 < x2){ v = 1; } else{ v = -1; }\r\n      x2 = x2 + delta * Math.cos(rad) * v;\r\n      y2 = y2 + delta * Math.sin(rad) * v;\r\n    }\r\n    \r\n    hosomi = 0.5;\r\n    if(Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) < 50){\r\n      hosomi += 0.4 * (1 - Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) / 50);\r\n    }\r\n    \r\n    //---------------------------------------------------------------\r\n    \r\n    poly = new Polygon();\r\n    poly2 = new Polygon();\r\n    \r\n    if(sx1 == sx2 && sy1 == sy2){ // Spline\r\n      if(kage.kUseCurve){\r\n        // generating fatten curve -- begin\r\n        var kage2 = new Kage();\r\n        kage2.kMinWidthY = kage.kMinWidthY;\r\n        kage2.kMinWidthT = kMinWidthT;\r\n        kage2.kWidth = kage.kWidth;\r\n        kage2.kKakato = kage.kKakato;\r\n        kage2.kRate = 10;\r\n        \r\n        var curve = new Array(2); // L and R\r\n        get_candidate(kage2, curve, a1, a2, x1, y1, sx1, sy1, x2, y2, opt3, opt4);\r\n        \r\n        var dcl12_34 = new Array(2);\r\n        var dcr12_34 = new Array(2);\r\n        var dpl12_34 = new Array(2);\r\n        var dpr12_34 = new Array(2);\r\n        divide_curve(kage2, x1, y1, sx1, sy1, x2, y2, curve[0], dcl12_34, dpl12_34);\r\n        divide_curve(kage2, x1, y1, sx1, sy1, x2, y2, curve[1], dcr12_34, dpr12_34);\r\n        \r\n        var ncl1 = new Array(7);\r\n        var ncl2 = new Array(7);\r\n        find_offcurve(kage2, dcl12_34[0], dpl12_34[0][2], dpl12_34[0][3], ncl1);\r\n        find_offcurve(kage2, dcl12_34[1], dpl12_34[1][2], dpl12_34[1][3], ncl2);\r\n        \r\n        poly.push(ncl1[0], ncl1[1]);\r\n        poly.push(ncl1[2], ncl1[3], 1);\r\n        poly.push(ncl1[4], ncl1[5]);\r\n        poly.push(ncl2[2], ncl2[3], 1);\r\n        poly.push(ncl2[4], ncl2[5]);\r\n        \r\n        poly2.push(dcr12_34[0][0][0], dcr12_34[0][0][1]);\r\n        poly2.push(dpr12_34[0][2] - (ncl1[2] - dpl12_34[0][2]), dpl12_34[0][3] - (ncl1[3] - dpl12_34[0][3]), 1);\r\n        poly2.push(dcr12_34[0][dcr12_34[0].length - 1][0], dcr12_34[0][dcr12_34[0].length - 1][1]);\r\n        poly2.push(dpr12_34[1][2] - (ncl2[2] - dpl12_34[1][2]), dpl12_34[1][3] - (ncl2[3] - dpl12_34[1][3]), 1);\r\n        poly2.push(dcr12_34[1][dcr12_34[1].length - 1][0], dcr12_34[1][dcr12_34[1].length - 1][1]);\r\n        \r\n        poly2.reverse();\r\n        poly.concat(poly2);\r\n        polygons.push(poly);\r\n        // generating fatten curve -- end\r\n      } else {\r\n        for(tt = 0; tt <= 1000; tt = tt + kage.kRate){\r\n          t = tt / 1000;\r\n          \r\n          // calculate a dot\r\n          x = ((1.0 - t) * (1.0 - t) * x1 + 2.0 * t * (1.0 - t) * sx1 + t * t * x2);\r\n          y = ((1.0 - t) * (1.0 - t) * y1 + 2.0 * t * (1.0 - t) * sy1 + t * t * y2);\r\n          \r\n          // KATAMUKI of vector by BIBUN\r\n          ix = (x1 - 2.0 * sx1 + x2) * 2.0 * t + (-2.0 * x1 + 2.0 * sx1);\r\n          iy = (y1 - 2.0 * sy1 + y2) * 2.0 * t + (-2.0 * y1 + 2.0 * sy1);\r\n          \r\n          // line SUICHOKU by vector\r\n          if(ix != 0 && iy != 0){\r\n            ir = Math.atan(iy / ix * -1);\r\n            ia = Math.sin(ir) * (kMinWidthT);\r\n            ib = Math.cos(ir) * (kMinWidthT);\r\n          }\r\n          else if(ix == 0){\r\n            ia = kMinWidthT;\r\n            ib = 0;\r\n          }\r\n          else{\r\n            ia = 0;\r\n            ib = kMinWidthT;\r\n          }\r\n          \r\n          if(a1 == 7 && a2 == 0){ // L2RD: fatten\r\n            deltad = Math.pow(t, hosomi) * kage.kL2RDfatten;\r\n          }\r\n          else if(a1 == 7){\r\n            deltad = Math.pow(t, hosomi);\r\n          }\r\n          else if(a2 == 7){\r\n            deltad = Math.pow(1.0 - t, hosomi);\r\n          }\r\n          else if(opt3 > 0 || opt4 > 0){\r\n              deltad = ((kage.kMinWidthT - opt3 / 2) - (opt4 - opt3) / 2 * t) / kage.kMinWidthT;\r\n          }\r\n          else{ deltad = 1; }\r\n          \r\n          if(deltad < 0.15){\r\n            deltad = 0.15;\r\n          }\r\n          ia = ia * deltad;\r\n          ib = ib * deltad;\r\n          \r\n          //reverse if vector is going 2nd/3rd quadrants\r\n          if(ix <= 0){\r\n            ia = ia * -1;\r\n            ib = ib * -1;\r\n          }\r\n          \r\n          //copy to polygon structure\r\n          poly.push(x - ia, y - ib);\r\n          poly2.push(x + ia, y + ib);\r\n        }\r\n        \r\n        // suiheisen ni setsuzoku\r\n        if(a1 == 132){\r\n          var index = 0;\r\n          while(true){\r\n            if(poly2.array[index].y <= y1 && y1 <= poly2.array[index + 1].y){\r\n              break;\r\n            }\r\n            index++;\r\n          }\r\n          newx1 = poly2.array[index + 1].x + (poly2.array[index].x - poly2.array[index + 1].x) *\r\n            (poly2.array[index + 1].y - y1) / (poly2.array[index + 1].y - poly2.array[index].y);\r\n          newy1 = y1;\r\n          newx2 = poly.array[0].x + (poly.array[0].x - poly.array[1].x) * (poly.array[0].y - y1) /\r\n            (poly.array[1].y - poly.array[0].y);\r\n          newy2 = y1;\r\n          \r\n          for(var i = 0; i < index; i++){\r\n            poly2.shift();\r\n          }\r\n          poly2.set(0, newx1, newy1);\r\n          poly.unshift(newx2, newy2);\r\n        }\r\n        \r\n        // suiheisen ni setsuzoku 2\r\n        if(a1 == 22 && y1 > y2){\r\n          var index = 0;\r\n          while(true){\r\n            if(poly2.array[index].y <= y1 && y1 <= poly2.array[index + 1].y){\r\n              break;\r\n            }\r\n            index++;\r\n          }\r\n          newx1 = poly2.array[index + 1].x + (poly2.array[index].x - poly2.array[index + 1].x) *\r\n            (poly2.array[index + 1].y - y1) / (poly2.array[index + 1].y - poly2.array[index].y);\r\n          newy1 = y1;\r\n          newx2 = poly.array[0].x + (poly.array[0].x - poly.array[1].x - 1) * (poly.array[0].y - y1) /\r\n            (poly.array[1].y - poly.array[0].y);\r\n          newy2 = y1 + 1;\r\n          \r\n          for(var i = 0; i < index; i++){\r\n            poly2.shift();\r\n          }\r\n          poly2.set(0, newx1, newy1);\r\n          poly.unshift(newx2, newy2);\r\n        }\r\n        \r\n        poly2.reverse();\r\n        poly.concat(poly2);\r\n        polygons.push(poly);\r\n      }\r\n    } else { // Bezier\r\n      for(tt = 0; tt <= 1000; tt = tt + kage.kRate){\r\n        t = tt / 1000;\r\n        \r\n        // calculate a dot\r\n        x = (1.0 - t) * (1.0 - t) * (1.0 - t) * x1 + 3.0 * t * (1.0 - t) * (1.0 - t) * sx1 + 3 * t * t * (1.0 - t) * sx2 + t * t * t * x2;\r\n        y = (1.0 - t) * (1.0 - t) * (1.0 - t) * y1 + 3.0 * t * (1.0 - t) * (1.0 - t) * sy1 + 3 * t * t * (1.0 - t) * sy2 + t * t * t * y2;\r\n        // KATAMUKI of vector by BIBUN\r\n        ix = t * t * (-3 * x1 + 9 * sx1 + -9 * sx2 + 3 * x2) + t * (6 * x1 + -12 * sx1 + 6 * sx2) + -3 * x1 + 3 * sx1;\r\n        iy = t * t * (-3 * y1 + 9 * sy1 + -9 * sy2 + 3 * y2) + t * (6 * y1 + -12 * sy1 + 6 * sy2) + -3 * y1 + 3 * sy1;\r\n        \r\n        // line SUICHOKU by vector\r\n        if(ix != 0 && iy != 0){\r\n          ir = Math.atan(iy / ix * -1);\r\n          ia = Math.sin(ir) * (kMinWidthT);\r\n          ib = Math.cos(ir) * (kMinWidthT);\r\n        }\r\n        else if(ix == 0){\r\n          ia = kMinWidthT;\r\n          ib = 0;\r\n        }\r\n        else{\r\n          ia = 0;\r\n          ib = kMinWidthT;\r\n        }\r\n        \r\n        if(a1 == 7 && a2 == 0){ // L2RD: fatten\r\n          deltad = Math.pow(t, hosomi) * kage.kL2RDfatten;\r\n        }\r\n        else if(a1 == 7){\r\n          deltad = Math.pow(t, hosomi);\r\n          deltad = Math.pow(deltad, 0.7); // make fatten\r\n        }\r\n        else if(a2 == 7){\r\n          deltad = Math.pow(1.0 - t, hosomi);\r\n        }\r\n        else{ deltad = 1; }\r\n        \r\n        if(deltad < 0.15){\r\n          deltad = 0.15;\r\n        }\r\n        ia = ia * deltad;\r\n        ib = ib * deltad;\r\n        \r\n        //reverse if vector is going 2nd/3rd quadrants\r\n        if(ix <= 0){\r\n          ia = ia * -1;\r\n          ib = ib * -1;\r\n        }\r\n        \r\n        //copy to polygon structure\r\n        poly.push(x - ia, y - ib);\r\n        poly2.push(x + ia, y + ib);\r\n      }\r\n      \r\n      // suiheisen ni setsuzoku\r\n      if(a1 == 132){\r\n        var index = 0;\r\n        while(true){\r\n          if(poly2.array[index].y <= y1 && y1 <= poly2.array[index + 1].y){\r\n            break;\r\n          }\r\n          index++;\r\n        }\r\n        newx1 = poly2.array[index + 1].x + (poly2.array[index].x - poly2.array[index + 1].x) *\r\n          (poly2.array[index + 1].y - y1) / (poly2.array[index + 1].y - poly2.array[index].y);\r\n        newy1 = y1;\r\n        newx2 = poly.array[0].x + (poly.array[0].x - poly.array[1].x) * (poly.array[0].y - y1) /\r\n          (poly.array[1].y - poly.array[0].y);\r\n        newy2 = y1;\r\n        \r\n        for(var i = 0; i < index; i++){\r\n          poly2.shift();\r\n        }\r\n        poly2.set(0, newx1, newy1);\r\n        poly.unshift(newx2, newy2);\r\n      }\r\n      \r\n      // suiheisen ni setsuzoku 2\r\n      if(a1 == 22){\r\n        var index = 0;\r\n        while(true){\r\n          if(poly2.array[index].y <= y1 && y1 <= poly2.array[index + 1].y){\r\n            break;\r\n          }\r\n          index++;\r\n        }\r\n        newx1 = poly2.array[index + 1].x + (poly2.array[index].x - poly2.array[index + 1].x) *\r\n          (poly2.array[index + 1].y - y1) / (poly2.array[index + 1].y - poly2.array[index].y);\r\n        newy1 = y1;\r\n        newx2 = poly.array[0].x + (poly.array[0].x - poly.array[1].x - 1) * (poly.array[0].y - y1) /\r\n          (poly.array[1].y - poly.array[0].y);\r\n        newy2 = y1 + 1;\r\n        \r\n        for(var i = 0; i < index; i++){\r\n          poly2.shift();\r\n        }\r\n        poly2.set(0, newx1, newy1);\r\n        poly.unshift(newx2, newy2);\r\n      }\r\n      \r\n      poly2.reverse();\r\n      poly.concat(poly2);\r\n      polygons.push(poly);\r\n    }\r\n    \r\n    //process for head of stroke\r\n    rad = Math.atan((sy1 - y1) / (sx1 - x1));\r\n    if(x1 < sx1){ v = 1; } else{ v = -1; }\r\n    XX = Math.sin(rad) * v;\r\n    XY = Math.cos(rad) * v * -1;\r\n    YX = Math.cos(rad) * v;\r\n    YY = Math.sin(rad) * v;\r\n    \r\n    if(a1 == 12){\r\n      if(x1 == x2){\r\n        poly= new Polygon();\r\n        poly.push(x1 - kMinWidthT, y1);\r\n        poly.push(x1 + kMinWidthT, y1);\r\n        poly.push(x1 - kMinWidthT, y1 - kMinWidthT);\r\n        polygons.push(poly);\r\n      }\r\n      else{\r\n        poly = new Polygon();\r\n        poly.push(x1 - kMinWidthT * XX, y1 - kMinWidthT * XY);\r\n        poly.push(x1 + kMinWidthT * XX, y1 + kMinWidthT * XY);\r\n        poly.push(x1 - kMinWidthT * XX - kMinWidthT * YX, y1 - kMinWidthT * XY - kMinWidthT * YY);\r\n        polygons.push(poly);\r\n      }\r\n    }\r\n    \r\n    var type;\r\n    var pm = 0;\r\n    if(a1 == 0){\r\n      if(y1 <= y2){ //from up to bottom\r\n        type = (Math.atan2(Math.abs(y1 - sy1), Math.abs(x1 - sx1)) / Math.PI * 2 - 0.4);\r\n        if(type > 0){\r\n          type = type * 2;\r\n        } else {\r\n          type = type * 16;\r\n        }\r\n        if(type < 0){\r\n          pm = -1;\r\n        } else {\r\n          pm = 1;\r\n        }\r\n        if(x1 == sx1){\r\n          poly = new Polygon();\r\n          poly.push(x1 - kMinWidthT, y1 + 1);\r\n          poly.push(x1 + kMinWidthT, y1);\r\n          poly.push(x1 - kMinWidthT * pm, y1 - kage.kMinWidthY * type * pm);\r\n          //if(x1 > x2){\r\n          //  poly.reverse();\r\n          //}\r\n          polygons.push(poly);\r\n        }\r\n        else{\r\n          poly = new Polygon();\r\n          poly.push(x1 - kMinWidthT * XX + 1 * YX, y1 - kMinWidthT * XY + 1 * YY);\r\n          poly.push(x1 + kMinWidthT * XX, y1 + kMinWidthT * XY);\r\n          poly.push(x1 - kMinWidthT * pm * XX - kage.kMinWidthY * type * pm * YX, y1 - kMinWidthT * pm * XY - kage.kMinWidthY * type * pm * YY);\r\n          //if(x1 > x2){\r\n          //  poly.reverse();\r\n          //}\r\n          polygons.push(poly);\r\n        }\r\n      }\r\n      else{ //bottom to up\r\n        if(x1 == sx1){\r\n          poly = new Polygon();\r\n          poly.push(x1 - kMinWidthT, y1);\r\n          poly.push(x1 + kMinWidthT, y1);\r\n          poly.push(x1 + kMinWidthT, y1 - kage.kMinWidthY);\r\n          polygons.push(poly);\r\n        }\r\n        else{\r\n          poly = new Polygon();\r\n          poly.push(x1 - kMinWidthT * XX, y1 - kMinWidthT * XY);\r\n          poly.push(x1 + kMinWidthT * XX, y1 + kMinWidthT * XY);\r\n          poly.push(x1 + kMinWidthT * XX - kage.kMinWidthY * YX, y1 + kMinWidthT * XY - kage.kMinWidthY * YY);\r\n          //if(x1 < x2){\r\n          //  poly.reverse();\r\n          //}\r\n          polygons.push(poly);\r\n        }\r\n      }\r\n    }\r\n    \r\n    if(a1 == 22){ //box's up-right corner, any time same degree\r\n      poly = new Polygon();\r\n      poly.push(x1 - kMinWidthT, y1 - kage.kMinWidthY);\r\n      poly.push(x1, y1 - kage.kMinWidthY - kage.kWidth);\r\n      poly.push(x1 + kMinWidthT + kage.kWidth, y1 + kage.kMinWidthY);\r\n      poly.push(x1 + kMinWidthT, y1 + kMinWidthT - 1);\r\n      poly.push(x1 - kMinWidthT, y1 + kMinWidthT + 4);\r\n      polygons.push(poly);\r\n    }\r\n    \r\n    if(a1 == 0){ //beginning of the stroke\r\n      if(y1 <= y2){ //from up to bottom\r\n        if(pm > 0){\r\n          type = 0;\r\n        }\r\n        var move = kage.kMinWidthY * type * pm;\r\n        if(x1 == sx1){\r\n          poly = new Polygon();\r\n          poly.push(x1 + kMinWidthT, y1 - move);\r\n          poly.push(x1 + kMinWidthT * 1.5, y1 + kage.kMinWidthY - move);\r\n          poly.push(x1 + kMinWidthT - 2, y1 + kage.kMinWidthY * 2 + 1);\r\n          polygons.push(poly);\r\n        }\r\n        else{\r\n          poly = new Polygon();\r\n          poly.push(x1 + kMinWidthT * XX - move * YX,\r\n                    y1 + kMinWidthT * XY - move * YY);\r\n          poly.push(x1 + kMinWidthT * 1.5 * XX + (kage.kMinWidthY - move * 1.2) * YX,\r\n                    y1 + kMinWidthT * 1.5 * XY + (kage.kMinWidthY - move * 1.2) * YY);\r\n          poly.push(x1 + (kMinWidthT - 2) * XX + (kage.kMinWidthY * 2 - move * 0.8 + 1) * YX,\r\n                    y1 + (kMinWidthT - 2) * XY + (kage.kMinWidthY * 2 - move * 0.8 + 1) * YY);\r\n          //if(x1 < x2){\r\n          //  poly.reverse();\r\n          //}\r\n          polygons.push(poly);\r\n        }\r\n      }\r\n      else{ //from bottom to up\r\n        if(x1 == sx1){\r\n          poly = new Polygon();\r\n          poly.push(x1 - kMinWidthT, y1);\r\n          poly.push(x1 - kMinWidthT * 1.5, y1 + kage.kMinWidthY);\r\n          poly.push(x1 - kMinWidthT * 0.5, y1 + kage.kMinWidthY * 3);\r\n          polygons.push(poly);\r\n        }\r\n        else{\r\n          poly = new Polygon();\r\n          poly.push(x1 - kMinWidthT * XX, y1 - kMinWidthT * XY);\r\n          poly.push(x1 - kMinWidthT * 1.5 * XX + kage.kMinWidthY * YX, y1 + kage.kMinWidthY * YY - kMinWidthT * 1.5 * XY);\r\n          poly.push(x1 - kMinWidthT * 0.5 * XX + kage.kMinWidthY * 3 * YX, y1 + kage.kMinWidthY * 3 * YY - kMinWidthT * 0.5 * XY);\r\n          //if(x1 < x2){\r\n          //  poly.reverse();\r\n          //}\r\n          polygons.push(poly);\r\n        }\r\n      }\r\n    }\r\n    \r\n    //process for tail\r\n    rad = Math.atan((y2 - sy2) / (x2 - sx2));\r\n    if(sx2 < x2){ v = 1; } else{ v = -1; }\r\n    YX = Math.sin(rad) * v * -1;\r\n    YY = Math.cos(rad) * v;\r\n    XX = Math.cos(rad) * v;\r\n    XY = Math.sin(rad) * v;\r\n    \r\n    if(a2 == 1 || a2 == 8 || a2 == 15){ //the last filled circle ... it can change 15->5\r\n      if(sx2 == x2){\r\n        poly = new Polygon();\r\n        if(kage.kUseCurve){\r\n          // by curve path\r\n          poly.push(x2 - kMinWidthT2, y2);\r\n          poly.push(x2 - kMinWidthT2 * 0.9, y2 + kMinWidthT2 * 0.9, 1);\r\n          poly.push(x2, y2 + kMinWidthT2);\r\n          poly.push(x2 + kMinWidthT2 * 0.9, y2 + kMinWidthT2 * 0.9, 1);\r\n          poly.push(x2 + kMinWidthT2, y2);\r\n        } else {\r\n          // by polygon\r\n          poly.push(x2 - kMinWidthT2, y2);\r\n          poly.push(x2 - kMinWidthT2 * 0.7, y2 + kMinWidthT2 * 0.7);\r\n          poly.push(x2, y2 + kMinWidthT2);\r\n          poly.push(x2 + kMinWidthT2 * 0.7, y2 + kMinWidthT2 * 0.7);\r\n          poly.push(x2 + kMinWidthT2, y2);\r\n        }\r\n        polygons.push(poly);\r\n      }\r\n      else if(sy2 == y2){\r\n        poly = new Polygon();\r\n        if(kage.kUseCurve){\r\n          // by curve path\r\n          poly.push(x2, y2 - kMinWidthT2);\r\n          poly.push(x2 + kMinWidthT2 * 0.9, y2 - kMinWidthT2 * 0.9, 1);\r\n          poly.push(x2 + kMinWidthT2, y2);\r\n          poly.push(x2 + kMinWidthT2 * 0.9, y2 + kMinWidthT2 * 0.9, 1);\r\n          poly.push(x2, y2 + kMinWidthT2);\r\n        } else {\r\n          // by polygon\r\n          poly.push(x2, y2 - kMinWidthT2);\r\n          poly.push(x2 + kMinWidthT2 * 0.7, y2 - kMinWidthT2 * 0.7);\r\n          poly.push(x2 + kMinWidthT2, y2);\r\n          poly.push(x2 + kMinWidthT2 * 0.7, y2 + kMinWidthT2 * 0.7);\r\n          poly.push(x2, y2 + kMinWidthT2);\r\n        }\r\n        polygons.push(poly);\r\n      }\r\n      else{\r\n        poly = new Polygon();\r\n        if(kage.kUseCurve){\r\n          poly.push(x2 + Math.sin(rad) * kMinWidthT2 * v, y2 - Math.cos(rad) * kMinWidthT2 * v);\r\n          poly.push(x2 + Math.cos(rad) * kMinWidthT2 * 0.9 * v + Math.sin(rad) * kMinWidthT2 * 0.9 * v,\r\n                    y2 + Math.sin(rad) * kMinWidthT2 * 0.9 * v - Math.cos(rad) * kMinWidthT2 * 0.9 * v, 1);\r\n          poly.push(x2 + Math.cos(rad) * kMinWidthT2 * v, y2 + Math.sin(rad) * kMinWidthT2 * v);\r\n          poly.push(x2 + Math.cos(rad) * kMinWidthT2 * 0.9 * v - Math.sin(rad) * kMinWidthT2 * 0.9 * v,\r\n                    y2 + Math.sin(rad) * kMinWidthT2 * 0.9 * v + Math.cos(rad) * kMinWidthT2 * 0.9 * v, 1);\r\n          poly.push(x2 - Math.sin(rad) * kMinWidthT2 * v, y2 + Math.cos(rad) * kMinWidthT2 * v);\r\n        } else {\r\n          poly.push(x2 + Math.sin(rad) * kMinWidthT2 * v, y2 - Math.cos(rad) * kMinWidthT2 * v);\r\n          poly.push(x2 + Math.cos(rad) * kMinWidthT2 * 0.7 * v + Math.sin(rad) * kMinWidthT2 * 0.7 * v,\r\n                    y2 + Math.sin(rad) * kMinWidthT2 * 0.7 * v - Math.cos(rad) * kMinWidthT2 * 0.7 * v);\r\n          poly.push(x2 + Math.cos(rad) * kMinWidthT2 * v, y2 + Math.sin(rad) * kMinWidthT2 * v);\r\n          poly.push(x2 + Math.cos(rad) * kMinWidthT2 * 0.7 * v - Math.sin(rad) * kMinWidthT2 * 0.7 * v,\r\n                    y2 + Math.sin(rad) * kMinWidthT2 * 0.7 * v + Math.cos(rad) * kMinWidthT2 * 0.7 * v);\r\n          poly.push(x2 - Math.sin(rad) * kMinWidthT2 * v, y2 + Math.cos(rad) * kMinWidthT2 * v);\r\n        }\r\n        polygons.push(poly);\r\n      }\r\n    }\r\n    \r\n    if(a2 == 9 || (a1 == 7 && a2 == 0)){ // Math.sinnyu & L2RD Harai ... no need for a2=9\r\n      var type = (Math.atan2(Math.abs(y2 - sy2), Math.abs(x2 - sx2)) / Math.PI * 2 - 0.6);\r\n      if(type > 0){\r\n        type = type * 8;\r\n      } else {\r\n        type = type * 3;\r\n      }\r\n      var pm = 0;\r\n      if(type < 0){\r\n        pm = -1;\r\n      } else {\r\n        pm = 1;\r\n      }\r\n      if(sy2 == y2){\r\n        poly = new Polygon();\r\n        poly.push(x2, y2 + kMinWidthT * kage.kL2RDfatten);\r\n        poly.push(x2, y2 - kMinWidthT * kage.kL2RDfatten);\r\n        poly.push(x2 + kMinWidthT * kage.kL2RDfatten * Math.abs(type), y2 + kMinWidthT * kage.kL2RDfatten * pm);\r\n        polygons.push(poly);\r\n      }\r\n      else{\r\n        poly = new Polygon();\r\n        poly.push(x2 + kMinWidthT * kage.kL2RDfatten * YX, y2 + kMinWidthT * kage.kL2RDfatten * YY);\r\n        poly.push(x2 - kMinWidthT * kage.kL2RDfatten * YX, y2 - kMinWidthT * kage.kL2RDfatten * YY);\r\n        poly.push(x2 + kMinWidthT * kage.kL2RDfatten * Math.abs(type) * XX + kMinWidthT * kage.kL2RDfatten * pm * YX,\r\n                  y2 + kMinWidthT * kage.kL2RDfatten * Math.abs(type) * XY + kMinWidthT * kage.kL2RDfatten * pm * YY);\r\n        polygons.push(poly);\r\n      }\r\n    }\r\n    \r\n    if(a2 == 15){ //jump up ... it can change 15->5\r\n      // anytime same degree\r\n      poly = new Polygon();\r\n      if(y1 < y2){\r\n        poly.push(x2, y2 - kMinWidthT + 1);\r\n        poly.push(x2 + 2, y2 - kMinWidthT - kage.kWidth * 5);\r\n        poly.push(x2, y2 - kMinWidthT - kage.kWidth * 5);\r\n        poly.push(x2 - kMinWidthT, y2 - kMinWidthT + 1);\r\n      } else {\r\n        poly.push(x2, y2 + kMinWidthT - 1);\r\n        poly.push(x2 - 2, y2 + kMinWidthT + kage.kWidth * 5);\r\n        poly.push(x2, y2 + kMinWidthT + kage.kWidth * 5);\r\n        poly.push(x2 + kMinWidthT, y2 + kMinWidthT - 1);\r\n      }\r\n      polygons.push(poly);\r\n    }\r\n    \r\n    if(a2 == 14){ //jump to left, allways go left\r\n      poly = new Polygon();\r\n      poly.push(x2, y2);\r\n      poly.push(x2, y2 - kMinWidthT);\r\n      poly.push(x2 - kage.kWidth * 4 * Math.min(1 - opt2 / 10, Math.pow(kMinWidthT / kage.kMinWidthT, 3)), y2 - kMinWidthT);\r\n      poly.push(x2 - kage.kWidth * 4 * Math.min(1 - opt2 / 10, Math.pow(kMinWidthT / kage.kMinWidthT, 3)), y2 - kMinWidthT * 0.5);\r\n      //poly.reverse();\r\n      polygons.push(poly);\r\n    }\r\n  }\r\n  else{ //gothic\r\n    if(a1 % 10 == 2){\r\n      if(x1 == sx1){\r\n        if(y1 < sy1){ y1 = y1 - kage.kWidth; } else{ y1 = y1 + kage.kWidth; }\r\n      }\r\n      else if(y1 == sy1){\r\n        if(x1 < sx1){ x1 = x1 - kage.kWidth; } else{ x1 = x1 + kage.kWidth; }\r\n      }\r\n      else{\r\n        rad = Math.atan((sy1 - y1) / (sx1 - x1));\r\n        if(x1 < sx1){ v = 1; } else{ v = -1; }\r\n        x1 = x1 - kage.kWidth * Math.cos(rad) * v;\r\n        y1 = y1 - kage.kWidth * Math.sin(rad) * v;\r\n      }\r\n    }\r\n    \r\n    if(a1 % 10 == 3){\r\n      if(x1 == sx1){\r\n        if(y1 < sy1){\r\n          y1 = y1 - kage.kWidth * kage.kKakato;\r\n        }\r\n        else{\r\n          y1 = y1 + kage.kWidth * kage.kKakato;\r\n        }\r\n      }\r\n      else if(y1 == sy1){\r\n        if(x1 < sx1){\r\n          x1 = x1 - kage.kWidth * kage.kKakato;\r\n        }\r\n        else{\r\n          x1 = x1 + kage.kWidth * kage.kKakato;\r\n        }\r\n      }\r\n      else{\r\n        rad = Math.atan((sy1 - y1) / (sx1 - x1));\r\n        if(x1 < sx1){ v = 1; } else{ v = -1; }\r\n        x1 = x1 - kage.kWidth * Math.cos(rad) * v * kage.kKakato;\r\n        y1 = y1 - kage.kWidth * Math.sin(rad) * v * kage.kKakato;\r\n      }\r\n    }\r\n    if(a2 % 10 == 2){\r\n      if(sx2 == x2){\r\n        if(sy2 < y2){ y2 = y2 + kage.kWidth; } else{ y2 = y2 - kage.kWidth; }\r\n      }\r\n      else if(sy2 == y2){\r\n        if(sx2 < x2){ x2 = x2 + kage.kWidth; } else{ x2 = x2 - kage.kWidth; }\r\n      }\r\n      else{\r\n        rad = Math.atan((y2 - sy2) / (x2 - sx2));\r\n        if(sx2 < x2){ v = 1; } else{ v = -1; }\r\n        x2 = x2 + kage.kWidth * Math.cos(rad) * v;\r\n        y2 = y2 + kage.kWidth * Math.sin(rad) * v;\r\n      }\r\n    }\r\n    \r\n    if(a2 % 10 == 3){\r\n      if(sx2 == x2){\r\n        if(sy2 < y2){\r\n          y2 = y2 + kage.kWidth * kage.kKakato;\r\n        }\r\n        else{\r\n          y2 = y2 - kage.kWidth * kage.kKakato;\r\n        }\r\n      }\r\n      else if(sy2 == y2){\r\n        if(sx2 < x2){\r\n          x2 = x2 + kage.kWidth * kage.kKakato;\r\n        }\r\n        else{\r\n          x2 = x2 - kage.kWidth * kage.kKakato;\r\n        }\r\n      }\r\n      else{\r\n        rad = Math.atan((y2 - sy2) / (x2 - sx2));\r\n        if(sx2 < x2){ v = 1; } else{ v = -1; }\r\n        x2 = x2 + kage.kWidth * Math.cos(rad) * v * kage.kKakato;\r\n        y2 = y2 + kage.kWidth * Math.sin(rad) * v * kage.kKakato;\r\n      }\r\n    }\r\n    \r\n    poly = new Polygon();\r\n    poly2 = new Polygon();\r\n    \r\n    for(tt = 0; tt <= 1000; tt = tt + kage.kRate){\r\n      t = tt / 1000;\r\n      \r\n      if(sx1 == sx2 && sy1 == sy2){\r\n        //calculating each point\r\n        x = ((1.0 - t) * (1.0 - t) * x1 + 2.0 * t * (1.0 - t) * sx1 + t * t * x2);\r\n        y = ((1.0 - t) * (1.0 - t) * y1 + 2.0 * t * (1.0 - t) * sy1 + t * t * y2);\r\n        \r\n        //SESSEN NO KATAMUKI NO KEISAN(BIBUN)\r\n        ix = (x1 - 2.0 * sx1 + x2) * 2.0 * t + (-2.0 * x1 + 2.0 * sx1);\r\n        iy = (y1 - 2.0 * sy1 + y2) * 2.0 * t + (-2.0 * y1 + 2.0 * sy1);\r\n      } else {\r\n      }\r\n      //SESSEN NI SUICHOKU NA CHOKUSEN NO KEISAN\r\n      if(kage.kShotai == kage.kMincho){ //always false ?\r\n        if(ix != 0 && iy != 0){\r\n          ir = Math.atan(iy / ix * -1.0);\r\n          ia = Math.sin(ir) * kage.kMinWidthT;\r\n          ib = Math.cos(ir) * kage.kMinWidthT;\r\n        }\r\n        else if(ix == 0){\r\n          ia = kage.kMinWidthT;\r\n          ib = 0;\r\n        }\r\n        else{\r\n          ia = 0;\r\n          ib = kage.kMinWidthT;\r\n        }\r\n        ia = ia * Math.sqrt(1.0 - t);\r\n        ib = ib * Math.sqrt(1.0 - t);\r\n      }\r\n      else{\r\n        if(ix != 0 && iy != 0){\r\n          ir = Math.atan(iy / ix * -1.0);\r\n          ia = Math.sin(ir) * kage.kWidth;\r\n          ib = Math.cos(ir) * kage.kWidth;\r\n        }\r\n        else if(ix == 0){\r\n          ia = kage.kWidth;\r\n          ib = 0;\r\n        }\r\n        else{\r\n          ia = 0;\r\n          ib = kage.kWidth;\r\n        }\r\n      }\r\n      \r\n      //reverse if vector is going 2nd/3rd quadrants\r\n      if(ix <= 0){\r\n        ia = ia * -1;\r\n        ib = ib * -1;\r\n      }\r\n      \r\n      //save to polygon\r\n      poly.push(x - ia, y - ib);\r\n      poly2.push(x + ia, y + ib);\r\n    }\r\n    \r\n    poly2.reverse();\r\n    poly.concat(poly2);\r\n    polygons.push(poly);\r\n  }\r\n}\r\n\r\nfunction cdDrawBezier(kage, polygons, x1, y1, x2, y2, x3, y3, x4, y4, a1, a2){\r\n  cdDrawCurveU(kage, polygons, x1, y1, x2, y2, x3, y3, x4, y4, a1, a2);\r\n}\r\n\r\nfunction cdDrawCurve(kage, polygons, x1, y1, x2, y2, x3, y3, a1, a2){\r\n  cdDrawCurveU(kage, polygons, x1, y1, x2, y2, x2, y2, x3, y3, a1, a2);\r\n}\r\n\r\nfunction cdDrawLine(kage, polygons, tx1, ty1, tx2, ty2, ta1, ta2){\r\n  var rad;\r\n  var v, x1, y1, x2, y2;\r\n  var a1, a2, opt1, opt2;\r\n  var XX, XY, YX, YY;\r\n  var poly;\r\n  var kMinWidthT;\r\n  \r\n  if(kage.kShotai == kage.kMincho){ //mincho\r\n    x1 = tx1;\r\n    y1 = ty1;\r\n    x2 = tx2;\r\n    y2 = ty2;\r\n    a1 = ta1 % 1000;\r\n    a2 = ta2 % 100;\r\n    opt1 = Math.floor(ta1 / 1000);\r\n    opt2 = Math.floor(ta2 / 100);\r\n    \r\n    kMinWidthT = kage.kMinWidthT - opt1 / 2;\r\n    \r\n    if(x1 == x2){ //if TATE stroke, use y-axis\r\n      poly = new Polygon(4);\r\n      switch(a1){\r\n      case 0:\r\n        poly.set(3, x1 - kMinWidthT, y1 - kage.kMinWidthY / 2);\r\n        poly.set(0, x1 + kMinWidthT, y1 + kage.kMinWidthY / 2);\r\n        break;\r\n      case 1:\r\n      case 6: //... no need\r\n      case 22:\r\n        poly.set(3, x1 - kMinWidthT, y1);\r\n        poly.set(0, x1 + kMinWidthT, y1);\r\n        break;\r\n      case 12:\r\n        poly.set(3, x1 - kMinWidthT, y1 - kage.kMinWidthY - kMinWidthT);\r\n        poly.set(0, x1 + kMinWidthT, y1 - kage.kMinWidthY);\r\n        break;\r\n      case 32:\r\n        poly.set(3, x1 - kMinWidthT, y1 - kage.kMinWidthY);\r\n        poly.set(0, x1 + kMinWidthT, y1 - kage.kMinWidthY);\r\n        break;\r\n      }\r\n      \r\n      switch(a2){\r\n      case 0:\r\n        if(a1 == 6){ //KAGI's tail ... no need\r\n          poly.set(2, x2 - kMinWidthT, y2);\r\n          poly.set(1, x2 + kMinWidthT, y2);\r\n        }\r\n        else{\r\n          poly.set(2, x2 - kMinWidthT, y2 + kMinWidthT / 2);\r\n          poly.set(1, x2 + kMinWidthT, y2 - kMinWidthT / 2);\r\n        }\r\n        break;\r\n      case 1:\r\n        poly.set(2, x2 - kMinWidthT, y2);\r\n        poly.set(1, x2 + kMinWidthT, y2);\r\n        break;\r\n      case 13:\r\n        poly.set(2, x2 - kMinWidthT, y2 + kage.kAdjustKakatoL[opt2] + kMinWidthT);\r\n        poly.set(1, x2 + kMinWidthT, y2 + kage.kAdjustKakatoL[opt2]);\r\n        break;\r\n      case 23:\r\n        poly.set(2, x2 - kMinWidthT, y2 + kage.kAdjustKakatoR[opt2] + kMinWidthT);\r\n        poly.set(1, x2 + kMinWidthT, y2 + kage.kAdjustKakatoR[opt2]);\r\n        break;\r\n      case 32:\r\n        poly.set(2, x2 - kMinWidthT, y2 + kage.kMinWidthY);\r\n        poly.set(1, x2 + kMinWidthT, y2 + kage.kMinWidthY);\r\n        break;\r\n      }\r\n      \r\n      polygons.push(poly);\r\n      \r\n      if(a1 == 22){ //box's right top corner\r\n        poly = new Polygon();\r\n        poly.push(x1 - kMinWidthT, y1 - kage.kMinWidthY);\r\n        poly.push(x1, y1 - kage.kMinWidthY - kage.kWidth);\r\n        poly.push(x1 + kMinWidthT + kage.kWidth, y1 + kage.kMinWidthY);\r\n        poly.push(x1 + kMinWidthT, y1 + kMinWidthT);\r\n        poly.push(x1 - kMinWidthT, y1);\r\n        polygons.push(poly);\r\n      }\r\n      \r\n      if(a1 == 0){ //beginning of the stroke\r\n        poly = new Polygon();\r\n        poly.push(x1 + kMinWidthT, y1 + kage.kMinWidthY * 0.5);\r\n        poly.push(x1 + kMinWidthT + kMinWidthT * 0.5, y1 + kage.kMinWidthY * 0.5 + kage.kMinWidthY);\r\n        poly.push(x1 + kMinWidthT - 2, y1 + kage.kMinWidthY * 0.5 + kage.kMinWidthY * 2 + 1);\r\n        polygons.push(poly);\r\n      }\r\n      \r\n      if((a1 == 6 && a2 == 0) || a2 == 1){ //KAGI NO YOKO BOU NO SAIGO NO MARU ... no need only used at 1st=yoko\r\n        poly = new Polygon();\r\n\tif(kage.kUseCurve){\r\n          poly.push(x2 - kMinWidthT, y2);\r\n          poly.push(x2 - kMinWidthT * 0.9, y2 + kMinWidthT * 0.9, 1);\r\n          poly.push(x2, y2 + kMinWidthT);\r\n          poly.push(x2 + kMinWidthT * 0.9, y2 + kMinWidthT * 0.9, 1);\r\n          poly.push(x2 + kMinWidthT, y2);\r\n        } else {\r\n          poly.push(x2 - kMinWidthT, y2);\r\n          poly.push(x2 - kMinWidthT * 0.6, y2 + kMinWidthT * 0.6);\r\n          poly.push(x2, y2 + kMinWidthT);\r\n          poly.push(x2 + kMinWidthT * 0.6, y2 + kMinWidthT * 0.6);\r\n          poly.push(x2 + kMinWidthT, y2);\r\n        }\r\n        //poly.reverse(); // for fill-rule\r\n        polygons.push(poly);\r\n      }\r\n    }\r\n    else if(y1 == y2){ //if it is YOKO stroke, use x-axis\r\n      if(a1 == 6){ //if it is KAGI's YOKO stroke, get bold\r\n        poly = new Polygon();\r\n        poly.push(x1, y1 - kMinWidthT);\r\n        poly.push(x2, y2 - kMinWidthT);\r\n        poly.push(x2, y2 + kMinWidthT);\r\n        poly.push(x1, y1 + kMinWidthT);\r\n        polygons.push(poly);\r\n        \r\n        if(a2 == 1 || a2 == 0 || a2 == 5){ // no need a2=1\r\n          //KAGI NO YOKO BOU NO SAIGO NO MARU\r\n          poly = new Polygon();\r\n          if(kage.kUseCurve){\r\n            if(x1 < x2){\r\n              poly.push(x2, y2 - kMinWidthT);\r\n              poly.push(x2 + kMinWidthT * 0.9, y2 - kMinWidthT * 0.9, 1);\r\n              poly.push(x2 + kMinWidthT, y2);\r\n              poly.push(x2 + kMinWidthT * 0.9, y2 + kMinWidthT * 0.9, 1);\r\n              poly.push(x2, y2 + kMinWidthT);\r\n            } else {\r\n              poly.push(x2, y2 - kMinWidthT);\r\n              poly.push(x2 - kMinWidthT * 0.9, y2 - kMinWidthT * 0.9, 1);\r\n              poly.push(x2 - kMinWidthT, y2);\r\n              poly.push(x2 - kMinWidthT * 0.9, y2 + kMinWidthT * 0.9, 1);\r\n              poly.push(x2, y2 + kMinWidthT);\r\n            }\r\n          } else {\r\n            if(x1 < x2){\r\n              poly.push(x2, y2 - kMinWidthT);\r\n              poly.push(x2 + kMinWidthT * 0.6, y2 - kMinWidthT * 0.6);\r\n              poly.push(x2 + kMinWidthT, y2);\r\n              poly.push(x2 + kMinWidthT * 0.6, y2 + kMinWidthT * 0.6);\r\n              poly.push(x2, y2 + kMinWidthT);\r\n            } else {\r\n              poly.push(x2, y2 - kMinWidthT);\r\n              poly.push(x2 - kMinWidthT * 0.6, y2 - kMinWidthT * 0.6);\r\n              poly.push(x2 - kMinWidthT, y2);\r\n              poly.push(x2 - kMinWidthT * 0.6, y2 + kMinWidthT * 0.6);\r\n              poly.push(x2, y2 + kMinWidthT);\r\n            }\r\n          }\r\n          polygons.push(poly);\r\n        }\r\n        \r\n        if(a2 == 5){\r\n          //KAGI NO YOKO BOU NO HANE\r\n          poly = new Polygon();\r\n          if(x1 < x2){\r\n            poly.push(x2, y2 - kMinWidthT + 1);\r\n            poly.push(x2 + 2, y2 - kMinWidthT - kage.kWidth * (4 * (1 - opt1 / kage.kAdjustMageStep) + 1));\r\n            poly.push(x2, y2 - kMinWidthT - kage.kWidth * (4 * (1 - opt1 / kage.kAdjustMageStep) + 1));\r\n            poly.push(x2 - kMinWidthT, y2 - kMinWidthT + 1);\r\n          } else {\r\n            poly.push(x2, y2 - kMinWidthT + 1);\r\n            poly.push(x2 - 2, y2 - kMinWidthT - kage.kWidth * (4 * (1 - opt1 / kage.kAdjustMageStep) + 1));\r\n            poly.push(x2, y2 - kMinWidthT - kage.kWidth * (4 * (1 - opt1 / kage.kAdjustMageStep) + 1));\r\n            poly.push(x2 + kMinWidthT, y2 - kMinWidthT + 1);\r\n          }\r\n          //poly.reverse(); // for fill-rule\r\n          polygons.push(poly);\r\n        }\r\n      }\r\n      else{\r\n        //always same\r\n        poly = new Polygon(4);\r\n        poly.set(0, x1, y1 - kage.kMinWidthY);\r\n        poly.set(1, x2, y2 - kage.kMinWidthY);\r\n        poly.set(2, x2, y2 + kage.kMinWidthY);\r\n        poly.set(3, x1, y1 + kage.kMinWidthY);\r\n        polygons.push(poly);\r\n        \r\n        //UROKO\r\n        if(a2 == 0){\r\n          poly = new Polygon();\r\n          poly.push(x2, y2 - kage.kMinWidthY);\r\n          poly.push(x2 - kage.kAdjustUrokoX[opt2], y2);\r\n          poly.push(x2 - kage.kAdjustUrokoX[opt2] / 2, y2 - kage.kAdjustUrokoY[opt2]);\r\n          polygons.push(poly);\r\n        }\r\n      }\r\n    }\r\n    else{ //for others, use x-axis\r\n      rad = Math.atan((y2 - y1) / (x2 - x1));\r\n      if((Math.abs(y2 - y1) < Math.abs(x2 - x1)) && (a1 != 6) && (a2 != 6) && !(x1 > x2)){ //ASAI KAUDO\r\n        //always same\r\n        poly = new Polygon(4);\r\n        poly.set(0, x1 + Math.sin(rad) * kage.kMinWidthY, y1 - Math.cos(rad) * kage.kMinWidthY);\r\n        poly.set(1, x2 + Math.sin(rad) * kage.kMinWidthY, y2 - Math.cos(rad) * kage.kMinWidthY);\r\n        poly.set(2, x2 - Math.sin(rad) * kage.kMinWidthY, y2 + Math.cos(rad) * kage.kMinWidthY);\r\n        poly.set(3, x1 - Math.sin(rad) * kage.kMinWidthY, y1 + Math.cos(rad) * kage.kMinWidthY);\r\n        polygons.push(poly);\r\n        \r\n        //UROKO\r\n        if(a2 == 0){\r\n          poly = new Polygon();\r\n          poly.push(x2 + Math.sin(rad) * kage.kMinWidthY, y2 - Math.cos(rad) * kage.kMinWidthY);\r\n          poly.push(x2 - Math.cos(rad) * kage.kAdjustUrokoX[opt2], y2 - Math.sin(rad) * kage.kAdjustUrokoX[opt2]);\r\n          poly.push(x2 - Math.cos(rad) * kage.kAdjustUrokoX[opt2] / 2 + Math.sin(rad) * kage.kAdjustUrokoX[opt2] / 2, y2 - Math.sin(rad) * kage.kAdjustUrokoY[opt2] - Math.cos(rad) * kage.kAdjustUrokoY[opt2]);\r\n          polygons.push(poly);\r\n        }\r\n      }\r\n      \r\n      else{ //KAKUDO GA FUKAI or KAGI NO YOKO BOU\r\n        if(x1 > x2){ v = -1; } else{ v = 1; }\r\n        poly = new Polygon(4);\r\n        switch(a1){\r\n        case 0:\r\n          poly.set(0, x1 + Math.sin(rad) * kMinWidthT * v + kage.kMinWidthY * Math.cos(rad) * 0.5 * v,\r\n                   y1 - Math.cos(rad) * kMinWidthT * v + kage.kMinWidthY * Math.sin(rad) * 0.5 * v);\r\n          poly.set(3, x1 - Math.sin(rad) * kMinWidthT * v - kage.kMinWidthY * Math.cos(rad) * 0.5 * v,\r\n                   y1 + Math.cos(rad) * kMinWidthT * v - kage.kMinWidthY * Math.sin(rad) * 0.5 * v);\r\n          break;\r\n        case 1:\r\n        case 6:\r\n          poly.set(0, x1 + Math.sin(rad) * kMinWidthT * v, y1 - Math.cos(rad) * kMinWidthT * v);\r\n          poly.set(3, x1 - Math.sin(rad) * kMinWidthT * v, y1 + Math.cos(rad) * kMinWidthT * v);\r\n          break;\r\n        case 12:\r\n          poly.set(0, x1 + Math.sin(rad) * kMinWidthT * v - kage.kMinWidthY * Math.cos(rad) * v,\r\n                   y1 - Math.cos(rad) * kMinWidthT * v - kage.kMinWidthY * Math.sin(rad) * v);\r\n          poly.set(3, x1 - Math.sin(rad) * kMinWidthT * v - (kMinWidthT + kage.kMinWidthY) * Math.cos(rad) * v,\r\n                   y1 + Math.cos(rad) * kMinWidthT * v - (kMinWidthT + kage.kMinWidthY) * Math.sin(rad) * v);\r\n          break;\r\n        case 22:\r\n          poly.set(0, x1 + (kMinWidthT * v + 1) / Math.sin(rad), y1 + 1);\r\n          poly.set(3, x1 - (kMinWidthT * v) / Math.sin(rad), y1);\r\n          break;\r\n        case 32:\r\n          poly.set(0, x1 + (kMinWidthT * v) / Math.sin(rad), y1);\r\n          poly.set(3, x1 - (kMinWidthT * v) / Math.sin(rad), y1);\r\n          break;\r\n        }\r\n        \r\n        switch(a2){\r\n        case 0:\r\n          if(a1 == 6){\r\n            poly.set(1, x2 + Math.sin(rad) * kMinWidthT * v, y2 - Math.cos(rad) * kMinWidthT * v);\r\n            poly.set(2, x2 - Math.sin(rad) * kMinWidthT * v, y2 + Math.cos(rad) * kMinWidthT * v);\r\n          }\r\n          else{\r\n            poly.set(1, x2 + Math.sin(rad) * kMinWidthT * v - kMinWidthT * 0.5 * Math.cos(rad) * v,\r\n                     y2 - Math.cos(rad) * kMinWidthT * v - kMinWidthT * 0.5 * Math.sin(rad) * v);\r\n            poly.set(2, x2 - Math.sin(rad) * kMinWidthT * v + kMinWidthT * 0.5 * Math.cos(rad) * v,\r\n                     y2 + Math.cos(rad) * kMinWidthT * v + kMinWidthT * 0.5 * Math.sin(rad) * v);\r\n          }\r\n          break;\r\n        case 1: // is needed?\r\n        case 5:\r\n          poly.set(1, x2 + Math.sin(rad) * kMinWidthT * v, y2 - Math.cos(rad) * kMinWidthT * v);\r\n          poly.set(2, x2 - Math.sin(rad) * kMinWidthT * v, y2 + Math.cos(rad) * kMinWidthT * v);\r\n          break;\r\n        case 13:\r\n          poly.set(1, x2 + Math.sin(rad) * kMinWidthT * v + kage.kAdjustKakatoL[opt2] * Math.cos(rad) * v,\r\n                   y2 - Math.cos(rad) * kMinWidthT * v + kage.kAdjustKakatoL[opt2] * Math.sin(rad) * v);\r\n          poly.set(2, x2 - Math.sin(rad) * kMinWidthT * v + (kage.kAdjustKakatoL[opt2] + kMinWidthT) * Math.cos(rad) * v,\r\n                   y2 + Math.cos(rad) * kMinWidthT * v + (kage.kAdjustKakatoL[opt2] + kMinWidthT) * Math.sin(rad) * v);\r\n          break;\r\n        case 23:\r\n          poly.set(1, x2 + Math.sin(rad) * kMinWidthT * v + kage.kAdjustKakatoR[opt2] * Math.cos(rad) * v,\r\n                   y2 - Math.cos(rad) * kMinWidthT * v + kage.kAdjustKakatoR[opt2] * Math.sin(rad) * v);\r\n          poly.set(2,\r\n                   x2 - Math.sin(rad) * kMinWidthT * v + (kage.kAdjustKakatoR[opt2] + kMinWidthT) * Math.cos(rad) * v,\r\n                   y2 + Math.cos(rad) * kMinWidthT * v + (kage.kAdjustKakatoR[opt2] + kMinWidthT) * Math.sin(rad) * v);\r\n          break;\r\n        case 32:\r\n          poly.set(1, x2 + (kMinWidthT * v) / Math.sin(rad), y2);\r\n          poly.set(2, x2 - (kMinWidthT * v) / Math.sin(rad), y2);\r\n          break;\r\n        }\r\n        \r\n        polygons.push(poly);\r\n        \r\n        if((a1 == 6) && (a2 == 0 || a2 == 5)){ //KAGI NO YOKO BOU NO SAIGO NO MARU\r\n          poly = new Polygon();\r\n          if(kage.kUseCurve){\r\n            poly.push(x2 + Math.sin(rad) * kMinWidthT * v, y2 - Math.cos(rad) * kMinWidthT * v);\r\n            poly.push(x2 - Math.cos(rad) * kMinWidthT * 0.9 * v + Math.sin(rad) * kMinWidthT * 0.9 * v,\r\n                      y2 + Math.sin(rad) * kMinWidthT * 0.9 * v - Math.cos(rad) * kMinWidthT * 0.9 * v, 1);\r\n            poly.push(x2 + Math.cos(rad) * kMinWidthT * v, y2 + Math.sin(rad) * kMinWidthT * v);\r\n            poly.push(x2 + Math.cos(rad) * kMinWidthT * 0.9 * v - Math.sin(rad) * kMinWidthT * 0.9 * v,\r\n                      y2 + Math.sin(rad) * kMinWidthT * 0.9 * v + Math.cos(rad) * kMinWidthT * 0.9 * v, 1);\r\n            poly.push(x2 - Math.sin(rad) * kMinWidthT * v, y2 + Math.cos(rad) * kMinWidthT * v);\r\n          } else {\r\n            poly.push(x2 + Math.sin(rad) * kMinWidthT * v, y2 - Math.cos(rad) * kMinWidthT * v);\r\n            poly.push(x2 + Math.cos(rad) * kMinWidthT * 0.8 * v + Math.sin(rad) * kMinWidthT * 0.6 * v,\r\n                      y2 + Math.sin(rad) * kMinWidthT * 0.8 * v - Math.cos(rad) * kMinWidthT * 0.6 * v);\r\n            poly.push(x2 + Math.cos(rad) * kMinWidthT * v, y2 + Math.sin(rad) * kMinWidthT * v);\r\n            poly.push(x2 + Math.cos(rad) * kMinWidthT * 0.8 * v - Math.sin(rad) * kMinWidthT * 0.6 * v,\r\n                      y2 + Math.sin(rad) * kMinWidthT * 0.8 * v + Math.cos(rad) * kMinWidthT * 0.6 * v);\r\n            poly.push(x2 - Math.sin(rad) * kMinWidthT * v, y2 + Math.cos(rad) * kMinWidthT * v);\r\n          }\r\n          polygons.push(poly);\r\n        }\r\n        \r\n        if(a1 == 6 && a2 == 5){\r\n          //KAGI NO YOKO BOU NO HANE\r\n          poly = new Polygon();\r\n          if(x1 < x2){\r\n            poly.push(x2 + (kMinWidthT - 1) * Math.sin(rad) * v, y2 - (kMinWidthT - 1) * Math.cos(rad) * v);\r\n            poly.push(x2 + 2 * Math.cos(rad) * v + (kMinWidthT + kage.kWidth * 5) * Math.sin(rad) * v,\r\n                      y2 + 2 * Math.sin(rad) * v - (kMinWidthT + kage.kWidth * 5) * Math.cos(rad) * v);\r\n            poly.push(x2 + (kMinWidthT + kage.kWidth * 5) * Math.sin(rad) * v,\r\n                      y2 - (kMinWidthT + kage.kWidth * 5) * Math.cos(rad) * v);\r\n            poly.push(x2 + (kMinWidthT - 1) * Math.sin(rad) * v - kMinWidthT * Math.cos(rad) * v,\r\n                      y2 - (kMinWidthT - 1) * Math.cos(rad) * v - kMinWidthT * Math.sin(rad) * v);\r\n          } else {\r\n            poly.push(x2 - (kMinWidthT - 1) * Math.sin(rad) * v, y2 + (kMinWidthT - 1) * Math.cos(rad) * v);\r\n            poly.push(x2 + 2 * Math.cos(rad) * v - (kMinWidthT + kage.kWidth * 5) * Math.sin(rad) * v,\r\n                      y2 + 2 * Math.sin(rad) * v + (kMinWidthT + kage.kWidth * 5) * Math.cos(rad) * v);\r\n            poly.push(x2 - (kMinWidthT + kage.kWidth * 5) * Math.sin(rad) * v,\r\n                      y2 + (kMinWidthT + kage.kWidth * 5) * Math.cos(rad) * v);\r\n            poly.push(x2 + (kMinWidthT - 1) * Math.sin(rad) * v - kMinWidthT * Math.cos(rad) * v,\r\n                      y2 - (kMinWidthT - 1) * Math.cos(rad) * v - kMinWidthT * Math.sin(rad) * v);\r\n          }\r\n          polygons.push(poly);\r\n        }\r\n        \r\n        if(a1 == 22){ //SHIKAKU MIGIUE UROKO NANAME DEMO MASSUGU MUKI\r\n          poly = new Polygon();\r\n          poly.push(x1 - kMinWidthT, y1 - kage.kMinWidthY);\r\n          poly.push(x1, y1 - kage.kMinWidthY - kage.kWidth);\r\n          poly.push(x1 + kMinWidthT + kage.kWidth, y1 + kage.kMinWidthY);\r\n          poly.push(x1 + kMinWidthT, y1 + kMinWidthT - 1);\r\n          poly.push(x1 - kMinWidthT, y1 + kMinWidthT + 4);\r\n          polygons.push(poly);\r\n        }\r\n        \r\n        XX = Math.sin(rad) * v;\r\n        XY = Math.cos(rad) * v * -1;\r\n        YX = Math.cos(rad) * v;\r\n        YY = Math.sin(rad) * v;\r\n        \r\n        if(a1 == 0){ //beginning of the storke\r\n          poly = new Polygon();\r\n          poly.push(x1 + kMinWidthT * XX + (kage.kMinWidthY * 0.5) * YX,\r\n                    y1 + kMinWidthT * XY + (kage.kMinWidthY * 0.5) * YY);\r\n          poly.push(x1 + (kMinWidthT + kMinWidthT * 0.5) * XX + (kage.kMinWidthY * 0.5 + kage.kMinWidthY) * YX,\r\n                    y1 + (kMinWidthT + kMinWidthT * 0.5) * XY + (kage.kMinWidthY * 0.5 + kage.kMinWidthY) * YY);\r\n          poly.push(x1 + kMinWidthT * XX + (kage.kMinWidthY * 0.5 + kage.kMinWidthY * 2) * YX - 2 * XX,\r\n                    y1 + kMinWidthT * XY + (kage.kMinWidthY * 0.5 + kage.kMinWidthY * 2) * YY + 1 * XY);\r\n          polygons.push(poly);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  else{ //gothic\r\n    if(tx1 == tx2){ //if TATE stroke, use y-axis\r\n      if(ty1 > ty2){\r\n        x1 = tx2;\r\n        y1 = ty2;\r\n        x2 = tx1;\r\n        y2 = ty1;\r\n        a1 = ta2;\r\n        a2 = ta1;\r\n      }\r\n      else{\r\n        x1 = tx1;\r\n        y1 = ty1;\r\n        x2 = tx2;\r\n        y2 = ty2;\r\n        a1 = ta1;\r\n        a2 = ta2;\r\n      }\r\n      \r\n      if(a1 % 10 == 2){ y1 = y1 - kage.kWidth; }\r\n      if(a2 % 10 == 2){ y2 = y2 + kage.kWidth; }\r\n      if(a1 % 10 == 3){ y1 = y1 - kage.kWidth * kage.kKakato; }\r\n      if(a2 % 10 == 3){ y2 = y2 + kage.kWidth * kage.kKakato; }\r\n      \r\n      poly = new Polygon();\r\n      poly.push(x1 - kage.kWidth, y1);\r\n      poly.push(x2 - kage.kWidth, y2);\r\n      poly.push(x2 + kage.kWidth, y2);\r\n      poly.push(x1 + kage.kWidth, y1);\r\n      //poly.reverse(); // for fill-rule\r\n      \r\n      polygons.push(poly);\r\n    }\r\n    else if(ty1 == ty2){ //if YOKO stroke, use x-axis\r\n      if(tx1 > tx2){\r\n        x1 = tx2;\r\n        y1 = ty2;\r\n        x2 = tx1;\r\n        y2 = ty1;\r\n        a1 = ta2;\r\n        a2 = ta1;\r\n      }\r\n      else{\r\n        x1 = tx1;\r\n        y1 = ty1;\r\n        x2 = tx2;\r\n        y2 = ty2;\r\n        a1 = ta1;\r\n        a2 = ta2;\r\n      }\r\n      if(a1 % 10 == 2){ x1 = x1 - kage.kWidth; }\r\n      if(a2 % 10 == 2){ x2 = x2 + kage.kWidth; }\r\n      if(a1 % 10 == 3){ x1 = x1 - kage.kWidth * kage.kKakato; }\r\n      if(a2 % 10 == 3){ x2 = x2 + kage.kWidth * kage.kKakato; }\r\n      \r\n      poly = new Polygon();\r\n      poly.push(x1, y1 - kage.kWidth);\r\n      poly.push(x2, y2 - kage.kWidth);\r\n      poly.push(x2, y2 + kage.kWidth);\r\n      poly.push(x1, y1 + kage.kWidth);\r\n      \r\n      polygons.push(poly);\r\n    }\r\n    else{ //for others, use x-axis\r\n      if(tx1 > tx2){\r\n        x1 = tx2;\r\n        y1 = ty2;\r\n        x2 = tx1;\r\n        y2 = ty1;\r\n        a1 = ta2;\r\n        a2 = ta1;\r\n      }\r\n      else{\r\n        x1 = tx1;\r\n        y1 = ty1;\r\n        x2 = tx2;\r\n        y2 = ty2;\r\n        a1 = ta1;\r\n        a2 = ta2;\r\n      }\r\n      rad = Math.atan((y2 - y1) / (x2 - x1));\r\n      if(a1 % 10 == 2){\r\n        x1 = x1 - kage.kWidth * Math.cos(rad);\r\n        y1 = y1 - kage.kWidth * Math.sin(rad);\r\n      }\r\n      if(a2 % 10 == 2){\r\n        x2 = x2 + kage.kWidth * Math.cos(rad);\r\n        y2 = y2 + kage.kWidth * Math.sin(rad);\r\n      }\r\n      if(a1 % 10 == 3){\r\n        x1 = x1 - kage.kWidth * Math.cos(rad) * kage.kKakato;\r\n        y1 = y1 - kage.kWidth * Math.sin(rad) * kage.kKakato;\r\n      }\r\n      if(a2 % 10 == 3){\r\n        x2 = x2 + kage.kWidth * Math.cos(rad) * kage.kKakato;\r\n        y2 = y2 + kage.kWidth * Math.sin(rad) * kage.kKakato;\r\n      }\r\n      \r\n      //SUICHOKU NO ICHI ZURASHI HA Math.sin TO Math.cos NO IREKAE + x-axis MAINASU KA\r\n      poly = new Polygon();\r\n      poly.push(x1 + Math.sin(rad) * kage.kWidth, y1 - Math.cos(rad) * kage.kWidth);\r\n      poly.push(x2 + Math.sin(rad) * kage.kWidth, y2 - Math.cos(rad) * kage.kWidth);\r\n      poly.push(x2 - Math.sin(rad) * kage.kWidth, y2 + Math.cos(rad) * kage.kWidth);\r\n      poly.push(x1 - Math.sin(rad) * kage.kWidth, y1 + Math.cos(rad) * kage.kWidth);\r\n      \r\n      polygons.push(poly);\r\n    }\r\n  }\r\n}function dfDrawFont(kage, polygons, a1, a2, a3, x1, y1, x2, y2, x3, y3, x4, y4){\r\n  var tx1, tx2, tx3, tx4, ty1, ty2, ty3, ty4, v;\r\n  var rad;\r\n\t\r\n  if(kage.kShotai == kage.kMincho){\r\n    switch(a1 % 100){ // ... no need to divide\r\n    case 0:\r\n      break;\r\n    case 1:\r\n      if(a3 % 100 == 4){\r\n        if(x1 == x2){\r\n          if(y1 < y2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2;\r\n          ty1 = y2 - kage.kMage * v;\r\n        }\r\n        else if(y1 == y2){ // ... no need\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * v;\r\n          ty1 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y2 - y1) / (x2 - x1));\r\n          if(x1 < x2){ v = 1; } else{v = -1; }\r\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v;\r\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\r\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, x2 - kage.kMage * (((kage.kAdjustTateStep + 4) - Math.floor(a2 / 1000)) / (kage.kAdjustTateStep + 4)), y2, 1 + (a2 - a2 % 1000), a3 + 10);\r\n      }\r\n      else{\r\n        cdDrawLine(kage, polygons, x1, y1, x2, y2, a2, a3);\r\n      }\r\n      break;\r\n    case 2:\r\n    //case 12: // ... no need\r\n      if(a3 % 100 == 4){\r\n        if(x2 == x3){\r\n          tx1 = x3;\r\n          ty1 = y3 - kage.kMage;\r\n        }\r\n        else if(y2 == y3){\r\n          tx1 = x3 - kage.kMage;\r\n          ty1 = y3;\r\n        }\r\n        else{\r\n          rad = Math.atan((y3 - y2) / (x3 - x2));\r\n          if(x2 < x3){ v = 1; } else{ v = -1; }\r\n          tx1 = x3 - kage.kMage * Math.cos(rad) * v;\r\n          ty1 = y3 - kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        cdDrawCurve(kage, polygons, x1, y1, x2, y2, tx1, ty1, a2, 1);\r\n        cdDrawCurve(kage, polygons, tx1, ty1, x3, y3, x3 - kage.kMage, y3, 1, a3 + 10);\r\n      }\r\n      else if(a3 == 5){\r\n        cdDrawCurve(kage, polygons, x1, y1, x2, y2, x3, y3, a2, 15);\r\n      }\r\n      else{\r\n        cdDrawCurve(kage, polygons, x1, y1, x2, y2, x3, y3, a2, a3);\r\n      }\r\n      break;\r\n    case 3:\r\n      if(a3 % 1000 == 5){\r\n        if(x1 == x2){\r\n          if(y1 < y2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2;\r\n          ty1 = y2 - kage.kMage * v;\r\n        }\r\n        else if(y1 == y2){\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * v;\r\n          ty1 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y2 - y1) / (x2 - x1));\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v;\r\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        if(x2 == x3){\r\n          if(y2 < y3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2;\r\n          ty2 = y2 + kage.kMage * v;\r\n        }\r\n        else if(y2 == y3){\r\n          if(x2 < x3){ v = 1; } else { v = -1; }\r\n          tx2 = x2 + kage.kMage * v;\r\n          ty2 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y3 - y2) / (x3 - x2));\r\n          if(x2 < x3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2 + kage.kMage * Math.cos(rad) * v;\r\n          ty2 = y2 + kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        tx3 = x3;\r\n        ty3 = y3;\r\n        \r\n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\r\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, tx2, ty2, 1 + (a2 - a2 % 1000) * 10, 1 + (a3 - a3 % 1000));\r\n        if((x2 < x3 && tx3 - tx2 > 0) || (x2 > x3 && tx2 - tx3 > 0)){ // for closer position\r\n          cdDrawLine(kage, polygons, tx2, ty2, tx3, ty3, 6 + (a3 - a3 % 1000), 5); // bolder by force\r\n        }\r\n      }\r\n      else{\r\n        if(x1 == x2){\r\n          if(y1 < y2){ v = 1; } else { v = -1; }\r\n          tx1 = x2;\r\n          ty1 = y2 - kage.kMage * v;\r\n        }\r\n        else if(y1 == y2){\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * v;\r\n          ty1 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y2 - y1) / (x2 - x1));\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v;\r\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        if(x2 == x3){\r\n          if(y2 < y3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2;\r\n          ty2 = y2 + kage.kMage * v;\r\n        }\r\n        else if(y2 == y3){\r\n          if(x2 < x3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2 + kage.kMage * v;\r\n          ty2 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y3 - y2) / (x3 - x2));\r\n          if(x2 < x3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2 + kage.kMage * Math.cos(rad) * v;\r\n          ty2 = y2 + kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\r\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, tx2, ty2, 1 + (a2 - a2 % 1000) * 10, 1 + (a3 - a3 % 1000));\r\n        cdDrawLine(kage, polygons, tx2, ty2, x3, y3, 6 + (a3 - a3 % 1000), a3); // bolder by force\r\n      }\r\n      break;\r\n    case 12:\r\n      cdDrawCurve(kage, polygons, x1, y1, x2, y2, x3, y3, a2, 1);\r\n      cdDrawLine(kage, polygons, x3, y3, x4, y4, 6, a3);\r\n      break;\r\n    case 4:\r\n      rate = 6;\r\n      if((x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2) < 14400){ // smaller than 120 x 120\r\n        rate = Math.sqrt((x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2)) / 120 * 6;\r\n      }\r\n      if(a3 == 5){\r\n        if(x1 == x2){\r\n          if(y1 < y2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2;\r\n          ty1 = y2 - kage.kMage * v * rate;\r\n        }\r\n        else if(y1 == y2){\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * v * rate;\r\n          ty1 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y2 - y1) / (x2 - x1));\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v * rate;\r\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v * rate;\r\n        }\r\n        if(x2 == x3){\r\n          if(y2 < y3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2;\r\n          ty2 = y2 + kage.kMage * v * rate;\r\n        }\r\n        else if(y2 == y3){\r\n          if(x2 < x3){ v = 1; } else { v = -1; }\r\n          tx2 = x2 + kage.kMage * v * rate;\r\n          ty2 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y3 - y2) / (x3 - x2));\r\n          if(x2 < x3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2 + kage.kMage * Math.cos(rad) * v * rate;\r\n          ty2 = y2 + kage.kMage * Math.sin(rad) * v * rate;\r\n        }\r\n        tx3 = x3;\r\n        ty3 = y3;\r\n        \r\n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\r\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, tx2, ty2, 1, 1);\r\n        if(tx3 - tx2 > 0){ // for closer position\r\n          cdDrawLine(kage, polygons, tx2, ty2, tx3, ty3, 6, 5); // bolder by force\r\n        }\r\n      }\r\n      else{\r\n        if(x1 == x2){\r\n          if(y1 < y2){ v = 1; } else { v = -1; }\r\n          tx1 = x2;\r\n          ty1 = y2 - kage.kMage * v * rate;\r\n        }\r\n        else if(y1 == y2){\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * v * rate;\r\n          ty1 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y2 - y1) / (x2 - x1));\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v * rate;\r\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v * rate;\r\n        }\r\n        if(x2 == x3){\r\n          if(y2 < y3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2;\r\n          ty2 = y2 + kage.kMage * v * rate;\r\n        }\r\n        else if(y2 == y3){\r\n          if(x2 < x3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2 + kage.kMage * v * rate;\r\n          ty2 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y3 - y2) / (x3 - x2));\r\n          if(x2 < x3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2 + kage.kMage * Math.cos(rad) * v * rate;\r\n          ty2 = y2 + kage.kMage * Math.sin(rad) * v * rate;\r\n        }\r\n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\r\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, tx2, ty2, 1, 1);\r\n        cdDrawLine(kage, polygons, tx2, ty2, x3, y3, 6, a3); // bolder by force\r\n      }\r\n      break;\r\n    case 6:\r\n      if(a3 % 100 == 4){\r\n        if(x3 == x4){\r\n          tx1 = x4;\r\n          ty1 = y4 - kage.kMage;\r\n        }\r\n        else if(y3 == y4){\r\n          tx1 = x4 - kage.kMage;\r\n          ty1 = y4;\r\n        }\r\n        else{\r\n          rad = Math.atan((y4 - y3) / (x4 - x3));\r\n          if(x3 < x4){ v = 1; } else{ v = -1; }\r\n          tx1 = x4 - kage.kMage * Math.cos(rad) * v;\r\n          ty1 = y4 - kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        cdDrawBezier(kage, polygons, x1, y1, x2, y2, x3, y3, tx1, ty1, a2, 1);\r\n        cdDrawCurve(kage, polygons, tx1, ty1, x4, y4, x4 - kage.kMage, y4, 1, a3 + 10);\r\n      }\r\n      else if(a3 == 5){\r\n        cdDrawBezier(kage, polygons, x1, y1, x2, y2, x3, y3, x4, y4, a2, 15);\r\n      }\r\n      else{\r\n        cdDrawBezier(kage, polygons, x1, y1, x2, y2, x3, y3, x4, y4, a2, a3);\r\n      }\r\n      break;\r\n    case 7:\r\n      cdDrawLine(kage, polygons, x1, y1, x2, y2, a2, 1);\r\n      cdDrawCurve(kage, polygons, x2, y2, x3, y3, x4, y4, 1 + (a2 - a2 % 1000), a3);\r\n      break;\r\n    case 9: // may not be exist ... no need\r\n      //kageCanvas[y1][x1] = 0;\r\n      //kageCanvas[y2][x2] = 0;\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }\r\n    \r\n  else{ // gothic\r\n    switch(a1 % 100){\r\n    case 0:\r\n      break;\r\n    case 1:\r\n      if(a3 == 4){\r\n        if(x1 == x2){\r\n          if(y1 < y2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2;\r\n          ty1 = y2 - kage.kMage * v;\r\n        }\r\n        else if(y1 == y2){\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * v;\r\n          ty1 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y2 - y1) / (x2 - x1));\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v;\r\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\r\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, x2 - kage.kMage * 2, y2 - kage.kMage * 0.5, 1, 0);\r\n      }\r\n      else{\r\n        cdDrawLine(kage, polygons, x1, y1, x2, y2, a2, a3);\r\n      }\r\n      break;\r\n    case 2:\r\n    case 12:\r\n      if(a3 == 4){\r\n        if(x2 == x3){\r\n          tx1 = x3;\r\n          ty1 = y3 - kage.kMage;\r\n        }\r\n        else if(y2 == y3){\r\n          tx1 = x3 - kage.kMage;\r\n          ty1 = y3;\r\n        }\r\n        else{\r\n          rad = Math.atan((y3 - y2) / (x3 - x2));\r\n          if(x2 < x3){ v = 1; } else{ v = -1; }\r\n          tx1 = x3 - kage.kMage * Math.cos(rad) * v;\r\n          ty1 = y3 - kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        cdDrawCurve(kage, polygons, x1, y1, x2, y2, tx1, ty1, a2, 1);\r\n        cdDrawCurve(kage, polygons, tx1, ty1, x3, y3, x3 - kage.kMage * 2, y3 - kage.kMage * 0.5, 1, 0);\r\n      }\r\n      else if(a3 == 5){\r\n        tx1 = x3 + kage.kMage;\r\n        ty1 = y3;\r\n        tx2 = tx1 + kage.kMage * 0.5;\r\n        ty2 = y3 - kage.kMage * 2;\r\n        cdDrawCurve(kage, polygons, x1, y1, x2, y2, x3, y3, a2, 1);\r\n        cdDrawCurve(kage, polygons, x3, y3, tx1, ty1, tx2, ty2, 1, 0);\r\n      }\r\n      else{\r\n        cdDrawCurve(kage, polygons, x1, y1, x2, y2, x3, y3, a2, a3);\r\n      }\r\n      break;\r\n    case 3:\r\n      if(a3 == 5){\r\n        if(x1 == x2){\r\n          if(y1 < y2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2;\r\n          ty1 = y2 - kage.kMage * v;\r\n        }\r\n        else if(y1 == y2){\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * v;\r\n          ty1 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y2 - y1) / (x2 - x1));\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v;\r\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        if(x2 == x3){\r\n          if(y2 < y3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2;\r\n          ty2 = y2 + kage.kMage * v;\r\n        }\r\n        else if(y2 == y3){\r\n          if(x2 < x3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2 + kage.kMage * v;\r\n          ty2 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y3 - y2) / (x3 - x2));\r\n          if(x2 < x3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2 + kage.kMage * Math.cos(rad) * v;\r\n          ty2 = y2 + kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        tx3 = x3 - kage.kMage;\r\n        ty3 = y3;\r\n        tx4 = x3 + kage.kMage * 0.5;\r\n        ty4 = y3 - kage.kMage * 2;\r\n        \r\n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\r\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, tx2, ty2, 1, 1);\r\n        cdDrawLine(kage, polygons, tx2, ty2, tx3, ty3, 1, 1);\r\n        cdDrawCurve(kage, polygons, tx3, ty3, x3, y3, tx4, ty4, 1, 0);\r\n      }\r\n      else{\r\n        if(x1 == x2){\r\n          if(y1 < y2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2;\r\n          ty1 = y2 - kage.kMage * v;\r\n        }\r\n        else if(y1 == y2){\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * v;\r\n          ty1 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y2 - y1) / (x2 - x1));\r\n          if(x1 < x2){ v = 1; } else{ v = -1; }\r\n          tx1 = x2 - kage.kMage * Math.cos(rad) * v;\r\n          ty1 = y2 - kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        if(x2 == x3){\r\n          if(y2 < y3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2;\r\n          ty2 = y2 + kage.kMage * v;\r\n        }\r\n        else if(y2 == y3){\r\n          if(x2 < x3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2 + kage.kMage * v;\r\n          ty2 = y2;\r\n        }\r\n        else{\r\n          rad = Math.atan((y3 - y2) / (x3 - x2));\r\n          if(x2 < x3){ v = 1; } else{ v = -1; }\r\n          tx2 = x2 + kage.kMage * Math.cos(rad) * v;\r\n          ty2 = y2 + kage.kMage * Math.sin(rad) * v;\r\n        }\r\n        \r\n        cdDrawLine(kage, polygons, x1, y1, tx1, ty1, a2, 1);\r\n        cdDrawCurve(kage, polygons, tx1, ty1, x2, y2, tx2, ty2, 1, 1);\r\n        cdDrawLine(kage, polygons, tx2, ty2, x3, y3, 1, a3);\r\n      }\r\n      break;\r\n    case 6:\r\n      if(a3 == 5){\r\n        tx1 = x4 - kage.kMage;\r\n        ty1 = y4;\r\n        tx2 = x4 + kage.kMage * 0.5;\r\n        ty2 = y4 - kage.kMage * 2;\r\n        /*\r\n\t\t\t\tcdDrawCurve(x1, y1, x2, y2, (x2 + x3) / 2, (y2 + y3) / 2, a2, 1);\r\n\t\t\t\tcdDrawCurve((x2 + x3) / 2, (y2 + y3) / 2, x3, y3, tx1, ty1, 1, 1);\r\n         */\r\n        cdDrawBezier(kage, polygons, x1, y1, x2, y2, x3, y3, tx1, ty1, a2, 1);\r\n        cdDrawCurve(kage, polygons, tx1, ty1, x4, y4, tx2, ty2, 1, 0);\r\n      }\r\n      else{\r\n        /*\r\n\t\t\t\tcdDrawCurve(x1, y1, x2, y2, (x2 + x3) / 2, (y2 + y3) / 2, a2, 1);\r\n\t\t\t\tcdDrawCurve((x2 + x3) / 2, (y2 + y3) / 2, x3, y3, x4, y4, 1, a3);\r\n         */\r\n        cdDrawBezier(kage, polygons, x1, y1, x2, y2, x3, y3, x4, y4, a2, a3);\r\n      }\r\n      break;\r\n    case 7:\r\n      cdDrawLine(kage, polygons, x1, y1, x2, y2, a2, 1);\r\n      cdDrawCurve(kage, polygons, x2, y2, x3, y3, x4, y4, 1, a3);\r\n      break;\r\n    case 9: // may not be exist\r\n      //kageCanvas[y1][x1] = 0;\r\n      //kageCanvas[y2][x2] = 0;\r\n      break;\r\n    default:\r\n      break;\r\n    }\r\n  }\r\n}function Polygon(number){\r\n  // resolution : 0.1\r\n  \r\n  // method\r\n  function push(x, y, off){ // void\r\n    var temp = new Object();\r\n    temp.x = Math.floor(x*10)/10;\r\n    temp.y = Math.floor(y*10)/10;\r\n    if(off != 1){\r\n      off = 0;\r\n    }\r\n    temp.off = off;\r\n    this.array.push(temp);\r\n  }\r\n  Polygon.prototype.push = push;\r\n  \r\n  function set(index, x, y, off){ // void\r\n    this.array[index].x = Math.floor(x*10)/10;\r\n    this.array[index].y = Math.floor(y*10)/10;\r\n    if(off != 1){\r\n      off = 0;\r\n    }\r\n    this.array[index].off = off;\r\n  }\r\n  Polygon.prototype.set = set;\r\n  \r\n  function reverse(){ // void\r\n    this.array.reverse();\r\n  }\r\n  Polygon.prototype.reverse = reverse;\r\n  \r\n  function concat(poly){ // void\r\n    this.array = this.array.concat(poly.array);\r\n  }\r\n  Polygon.prototype.concat = concat;\r\n\t\r\n  function shift(){ // void\r\n    this.array.shift();\r\n  }\r\n  Polygon.prototype.shift = shift;\r\n\t\r\n  function unshift(x, y, off){ // void\r\n    var temp = new Object();\r\n    temp.x = Math.floor(x*10)/10;\r\n    temp.y = Math.floor(y*10)/10;\r\n    if(off != 1){\r\n      off = 0;\r\n    }\r\n    temp.off = off;\r\n    this.array.unshift(temp);\r\n  }\r\n  Polygon.prototype.unshift = unshift;\r\n\t\r\n  // property\r\n  this.array = new Array();\r\n  \r\n  // initialize\r\n  if(number){\r\n    for(var i = 0; i < number; i++){\r\n      this.push(0, 0, 0);\r\n    }\r\n  }\r\n  \r\n  return this;\r\n}function Polygons(){\r\n  // method\r\n \tfunction clear(){ // void\r\n    this.array = new Array();\r\n  }\r\n  Polygons.prototype.clear = clear;\r\n\t\r\n  function push(polygon){ // void\r\n    // only a simple check\r\n    var minx = 200;\r\n    var maxx = 0;\r\n    var miny = 200;\r\n    var maxy = 0;\r\n    var error = 0;\r\n    for(var i = 0; i < polygon.array.length; i++){\r\n      if(polygon.array[i].x < minx){\r\n        minx = polygon.array[i].x;\r\n      }\r\n      if(polygon.array[i].x > maxx){\r\n        maxx = polygon.array[i].x;\r\n      }\r\n      if(polygon.array[i].y < miny){\r\n        miny = polygon.array[i].y;\r\n      }\r\n      if(polygon.array[i].y > maxy){\r\n        maxy = polygon.array[i].y;\r\n      }\r\n      if(isNaN(polygon.array[i].x) || isNaN(polygon.array[i].y)){\r\n        error++;\r\n      }\r\n    }\r\n    if(error == 0 && minx != maxx && miny != maxy && polygon.array.length >= 3){\r\n      var newArray = new Array();\r\n      newArray.push(polygon.array.shift());\r\n      while(polygon.array.length != 0){\r\n        var temp = polygon.array.shift();\r\n        //if(newArray[newArray.length - 1].x != temp.x ||\r\n        //   newArray[newArray.length - 1].y != temp.y){\r\n          newArray.push(temp);\r\n        //}\r\n      }\r\n      if(newArray.length >= 3){\r\n        polygon.array = newArray;\r\n        this.array.push(polygon);\r\n      }\r\n    }\r\n  }\r\n  Polygons.prototype.push = push;\r\n  \r\n  function generateSVG(curve){ // string\r\n    var buffer = \"\";\r\n    buffer += \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" version=\\\"1.1\\\" baseProfile=\\\"full\\\" viewBox=\\\"0 0 200 200\\\" width=\\\"200\\\" height=\\\"200\\\">\\n\";\r\n    if(curve){\r\n      for(var i = 0; i < this.array.length; i++){\r\n        var mode = \"L\";\r\n        buffer += \"<path d=\\\"M \";\r\n        buffer += this.array[i].array[0].x + \",\" + this.array[i].array[0].y + \" \";\r\n        for(var j = 1; j < this.array[i].array.length; j++){\r\n          if(this.array[i].array[j].off == 1){\r\n            buffer += \"Q \";\r\n            mode = \"Q\";\r\n          } else if(mode == \"Q\" && this.array[i].array[j - 1].off != 1){\r\n            buffer += \"L \";\r\n          } else if(mode == \"L\" && j == 1){\r\n            buffer += \"L \";\r\n          }\r\n          buffer += this.array[i].array[j].x + \",\" + this.array[i].array[j].y + \" \";\r\n        }\r\n        buffer += \"Z\\\" fill=\\\"black\\\" />\\n\";\r\n      }\r\n      buffer += \"</svg>\\n\";\r\n    } else {\r\n      buffer += \"<g fill=\\\"black\\\">\\n\";\r\n      for(var i = 0; i < this.array.length; i++){\r\n        buffer += \"<polygon points=\\\"\";\r\n        for(var j = 0; j < this.array[i].array.length; j++){\r\n          buffer += this.array[i].array[j].x + \",\" + this.array[i].array[j].y + \" \";\r\n        }\r\n        buffer += \"\\\" />\\n\";\r\n      }\r\n      buffer += \"</g>\\n\";\r\n      buffer += \"</svg>\\n\";\r\n    }\r\n    return buffer;\r\n  }\r\n  Polygons.prototype.generateSVG = generateSVG;\r\n  \r\n  function generateEPS(){ // string\r\n    var buffer = \"\";\r\n    buffer += \"%!PS-Adobe-3.0 EPSF-3.0\\n\";\r\n    buffer += \"%%BoundingBox: 0 -208 1024 816\\n\";\r\n    buffer += \"%%Pages: 0\\n\";\r\n    buffer += \"%%Title: Kanji glyph\\n\";\r\n    buffer += \"%%Creator: GlyphWiki powered by KAGE system\\n\";\r\n    buffer += \"%%CreationDate: \" + new Date() + \"\\n\";\r\n    buffer += \"%%EndComments\\n\";\r\n    buffer += \"%%EndProlog\\n\";\r\n    \r\n    for(var i = 0; i < this.array.length; i++){\r\n      for(var j = 0; j < this.array[i].array.length; j++){\r\n        buffer += (this.array[i].array[j].x * 5) + \" \" + (1000 - this.array[i].array[j].y * 5 - 200) + \" \";\r\n        if(j == 0){\r\n          buffer += \"newpath\\nmoveto\\n\";\r\n        } else {\r\n          buffer += \"lineto\\n\";\r\n        }\r\n      }\r\n      buffer += \"closepath\\nfill\\n\";\r\n    }\r\n    buffer += \"%%EOF\\n\";\r\n    return buffer;\r\n  }\r\n  Polygons.prototype.generateEPS = generateEPS;\r\n  \r\n  // property\r\n  this.array = new Array();\r\n  \r\n  return this;\r\n}\nmodule.exports={Kage:Kage,Polygons:Polygons}",
    "var Kage=require(\"kage\").Kage;\r\nvar Polygons=require(\"kage\").Polygons;\r\nvar React=require(\"react\");\r\nvar E=React.createElement;\r\n//var mockdata=require(\"./mockdata\");\r\n//var glyphs=[\"u5361\",\"u897f\",\"u52a0\",\"u6cb9\"];\r\nvar kage = new Kage();\r\nkage.kUseCurve = true;\r\nvar loadBuhins=function(fromserver){\r\n\tfor (var buhin in fromserver) {\r\n\t\tkage.kBuhin.push(buhin,fromserver[buhin]);\r\n\t}\r\n}\r\n//loadBuhins(mockdata);\r\n\r\nvar KageGlyph=React.createClass({displayName: \"KageGlyph\",\r\n\tpropTypes:{\r\n\t\tglyph:React.PropTypes.string.isRequired\r\n\t\t,size:React.PropTypes.number\r\n\t}\r\n\t,render:function(){\r\n\t\tvar polygons = new Polygons();\r\n\t\tvar glyph=this.props.glyph;\r\n\t\t//glyph=\"u2b101\"\r\n\t\tkage.makeGlyph(polygons, glyph);\r\n    var svg=polygons.generateSVG(true);\r\n\r\n      //viewBox=\"0 0 200 200\" width=\"200\" height=\"200\"\r\n    size=this.props.size||32;\r\n    svg=svg.replace('viewBox=\"0 0 200 200\" width=\"200\" height=\"200\"',\r\n      'background-color=\"transparent\" viewBox=\"0 0 200 200\" width=\"'+size+'\" height=\"'+size+'\"');\r\n\t\treturn E(\"span\",{label:this.props.glyph, dangerouslySetInnerHTML:{__html:svg}});\r\n\t}\r\n});\r\nKageGlyph.loadBuhins=loadBuhins;\r\nmodule.exports=KageGlyph;",
    "var React=require(\"react\");\r\nvar Kage=require(\"kage\").Kage;\r\nvar KageGlyph=require(\"./kageglyph\");\r\nvar Polygons=require(\"kage\").Polygons;\r\nvar styles={candidates:{outline:0,cursor:\"pointer\"}};\r\nvar E=React.createElement;\r\nvar getutf32=require(\"./uniutil\").getutf32;\r\n\r\nvar fontserverurl=\"http://chikage.linode.caasih.net/exploded/?inputs=\";\r\n\r\nvar maincomponent = React.createClass({displayName: \"maincomponent\",\r\n  getInitialState:function() {\r\n    return {searchresult:[],toload:\"陳\"}\r\n  }\r\n  ,componentDidMount:function(){\r\n    this.loadFromServer();\r\n  }\r\n  ,load:function(buhins) {\r\n    var that = this;\r\n    var data = {};\r\n    var k;\r\n    for (k in buhins) {\r\n      data[k] = buhins[k].replace(/@\\d+/g, \"\"); //workaround @n at the end\r\n    }\r\n    KageGlyph.loadBuhins(data);\r\n    this.fontdataready=true;\r\n    this.setState({kagegkyph:this.renderGlyphs(this.state.toload)});\r\n    return;\r\n  }\r\n  ,renderGlyphs:function(toload) {\r\n    var opts={widestring:toload};\r\n    var ic=0,out=[];;\r\n    while (ic=getutf32(opts)){\r\n      out.push(E(KageGlyph,{glyph:\"u\"+ic.toString(16)}));  \r\n    }\r\n    return out;\r\n  }\r\n  ,loadFromServer:function() {\r\n    var url=fontserverurl+this.state.toload;\r\n    fetch(url)\r\n      .then(function(response){ return response.json(); })\r\n      .then(this.load);\r\n  }  \r\n  ,onChange:function(e) {\r\n    clearTimeout(this.timer1);\r\n    var toload=e.target.value;\r\n    this.setState({toload:toload});\r\n    this.timer1=setTimeout(function(){\r\n      this.loadFromServer();\r\n    }.bind(this),500)\r\n  }\r\n  ,render: function() {\r\n    return E(\"div\",null,\r\n       E(\"input\", {ref:\"toload\", value:this.state.toload, onChange:this.onChange})\r\n       ,E(\"br\")\r\n      ,E(\"span\",{ref:\"candidates\",\r\n        onMouseUp:this.onselect,onTouchTap:this.onselect,\r\n        style:styles.candidates},\r\n      this.state.kagegkyph)\r\n    );\r\n  }\r\n});\r\nmodule.exports=maincomponent;",
    "\r\n//內碼轉字\r\nvar ucs2string = function (unicode) { //unicode ���X�� �r���A�textension B ���p\r\n    if (unicode >= 0x10000 && unicode <= 0x10FFFF) {\r\n      var hi = Math.floor((unicode - 0x10000) / 0x400) + 0xD800;\r\n      var lo = ((unicode - 0x10000) % 0x400) + 0xDC00;\r\n      return String.fromCharCode(hi) + String.fromCharCode(lo);\r\n    } else {\r\n      return String.fromCharCode(unicode);\r\n    }\r\n};\r\n//取得字元的utf32 值\r\nvar getutf32 = function (opt) { // return ucs32 value from a utf 16 string, advance the string automatically\r\n  if (!opt.widestring) return 0;\r\n  var s = opt.widestring;\r\n  var ic = s.charCodeAt(0);\r\n  var c = 1; // default BMP one widechar\r\n  if (ic >= 0xd800 && ic <= 0xdcff) {\r\n    var ic2 = s.charCodeAt(1);\r\n    ic = 0x10000 + ((ic & 0x3ff) * 1024) + (ic2 & 0x3ff);\r\n    c++; // surrogate pair\r\n  }\r\n  opt.thechar = s.substr(0, c);\r\n  opt.widestring = s.substr(c, s.length - c);\r\n  return ic;\r\n};\r\n\r\nmodule.exports={getutf32:getutf32,ucs2string:ucs2string};",
    "\r\nvar userCancel=false;\r\nvar files=[];\r\nvar totalDownloadByte=0;\r\nvar targetPath=\"\";\r\nvar tempPath=\"\";\r\nvar nfile=0;\r\nvar baseurl=\"\";\r\nvar result=\"\";\r\nvar downloading=false;\r\nvar startDownload=function(dbid,_baseurl,_files) { //return download id\r\n\tvar fs     = require(\"fs\");\r\n\tvar path   = require(\"path\");\r\n\r\n\t\r\n\tfiles=_files.split(\"\\uffff\");\r\n\tif (downloading) return false; //only one session\r\n\tuserCancel=false;\r\n\ttotalDownloadByte=0;\r\n\tnextFile();\r\n\tdownloading=true;\r\n\tbaseurl=_baseurl;\r\n\tif (baseurl[baseurl.length-1]!='/')baseurl+='/';\r\n\ttargetPath=ksanagap.rootPath+dbid+'/';\r\n\ttempPath=ksanagap.rootPath+\".tmp/\";\r\n\tresult=\"\";\r\n\treturn true;\r\n}\r\n\r\nvar nextFile=function() {\r\n\tsetTimeout(function(){\r\n\t\tif (nfile==files.length) {\r\n\t\t\tnfile++;\r\n\t\t\tendDownload();\r\n\t\t} else {\r\n\t\t\tdownloadFile(nfile++);\t\r\n\t\t}\r\n\t},100);\r\n}\r\n\r\nvar downloadFile=function(nfile) {\r\n\tvar url=baseurl+files[nfile];\r\n\tvar tmpfilename=tempPath+files[nfile];\r\n\tvar mkdirp = require(\"./mkdirp\");\r\n\tvar fs     = require(\"fs\");\r\n\tvar http   = require(\"http\");\r\n\r\n\tmkdirp.sync(path.dirname(tmpfilename));\r\n\tvar writeStream = fs.createWriteStream(tmpfilename);\r\n\tvar datalength=0;\r\n\tvar request = http.get(url, function(response) {\r\n\t\tresponse.on('data',function(chunk){\r\n\t\t\twriteStream.write(chunk);\r\n\t\t\ttotalDownloadByte+=chunk.length;\r\n\t\t\tif (userCancel) {\r\n\t\t\t\twriteStream.end();\r\n\t\t\t\tsetTimeout(function(){nextFile();},100);\r\n\t\t\t}\r\n\t\t});\r\n\t\tresponse.on(\"end\",function() {\r\n\t\t\twriteStream.end();\r\n\t\t\tsetTimeout(function(){nextFile();},100);\r\n\t\t});\r\n\t});\r\n}\r\n\r\nvar cancelDownload=function() {\r\n\tuserCancel=true;\r\n\tendDownload();\r\n}\r\nvar verify=function() {\r\n\treturn true;\r\n}\r\nvar endDownload=function() {\r\n\tnfile=files.length+1;//stop\r\n\tresult=\"cancelled\";\r\n\tdownloading=false;\r\n\tif (userCancel) return;\r\n\tvar fs     = require(\"fs\");\r\n\tvar mkdirp = require(\"./mkdirp\");\r\n\r\n\tfor (var i=0;i<files.length;i++) {\r\n\t\tvar targetfilename=targetPath+files[i];\r\n\t\tvar tmpfilename   =tempPath+files[i];\r\n\t\tmkdirp.sync(path.dirname(targetfilename));\r\n\t\tfs.renameSync(tmpfilename,targetfilename);\r\n\t}\r\n\tif (verify()) {\r\n\t\tresult=\"success\";\r\n\t} else {\r\n\t\tresult=\"error\";\r\n\t}\r\n}\r\n\r\nvar downloadedByte=function() {\r\n\treturn totalDownloadByte;\r\n}\r\nvar doneDownload=function() {\r\n\tif (nfile>files.length) return result;\r\n\telse return \"\";\r\n}\r\nvar downloadingFile=function() {\r\n\treturn nfile-1;\r\n}\r\n\r\nvar downloader={startDownload:startDownload, downloadedByte:downloadedByte,\r\n\tdownloadingFile:downloadingFile, cancelDownload:cancelDownload,doneDownload:doneDownload};\r\nmodule.exports=downloader;",
    "/* emulate filesystem on html5 browser */\r\nvar get_head=function(url,field,cb){\r\n\tvar xhr = new XMLHttpRequest();\r\n\txhr.open(\"HEAD\", url, true);\r\n\txhr.onreadystatechange = function() {\r\n\t\t\tif (this.readyState == this.DONE) {\r\n\t\t\t\tcb(xhr.getResponseHeader(field));\r\n\t\t\t} else {\r\n\t\t\t\tif (this.status!==200&&this.status!==206) {\r\n\t\t\t\t\tcb(\"\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t};\r\n\txhr.send();\r\n}\r\nvar get_date=function(url,cb) {\r\n\tget_head(url,\"Last-Modified\",function(value){\r\n\t\tcb(value);\r\n\t});\r\n}\r\nvar get_size=function(url, cb) {\r\n\tget_head(url,\"Content-Length\",function(value){\r\n\t\tcb(parseInt(value));\r\n\t});\r\n};\r\nvar checkUpdate=function(url,fn,cb) {\r\n\tif (!url) {\r\n\t\tcb(false);\r\n\t\treturn;\r\n\t}\r\n\tget_date(url,function(d){\r\n\t\tAPI.fs.root.getFile(fn, {create: false, exclusive: false}, function(fileEntry) {\r\n\t\t\tfileEntry.getMetadata(function(metadata){\r\n\t\t\t\tvar localDate=Date.parse(metadata.modificationTime);\r\n\t\t\t\tvar urlDate=Date.parse(d);\r\n\t\t\t\tcb(urlDate>localDate);\r\n\t\t\t});\r\n\t\t},function(){\r\n\t\t\tcb(false);\r\n\t\t});\r\n\t});\r\n}\r\nvar download=function(url,fn,cb,statuscb,context) {\r\n\t var totalsize=0,batches=null,written=0;\r\n\t var fileEntry=0, fileWriter=0;\r\n\t var createBatches=function(size) {\r\n\t\tvar bytes=1024*1024, out=[];\r\n\t\tvar b=Math.floor(size / bytes);\r\n\t\tvar last=size %bytes;\r\n\t\tfor (var i=0;i<=b;i++) {\r\n\t\t\tout.push(i*bytes);\r\n\t\t}\r\n\t\tout.push(b*bytes+last);\r\n\t\treturn out;\r\n\t }\r\n\t var finish=function() {\r\n\t\t rm(fn,function(){\r\n\t\t\t\tfileEntry.moveTo(fileEntry.filesystem.root, fn,function(){\r\n\t\t\t\t\tsetTimeout( cb.bind(context,false) , 0) ;\r\n\t\t\t\t},function(e){\r\n\t\t\t\t\tconsole.log(\"failed\",e)\r\n\t\t\t\t});\r\n\t\t },this);\r\n\t };\r\n\t\tvar tempfn=\"temp.kdb\";\r\n\t\tvar batch=function(b) {\r\n\t\tvar abort=false;\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\tvar requesturl=url+\"?\"+Math.random();\r\n\t\txhr.open('get', requesturl, true);\r\n\t\txhr.setRequestHeader('Range', 'bytes='+batches[b]+'-'+(batches[b+1]-1));\r\n\t\txhr.responseType = 'blob';\r\n\t\txhr.addEventListener('load', function() {\r\n\t\t\tvar blob=this.response;\r\n\t\t\tfileEntry.createWriter(function(fileWriter) {\r\n\t\t\t\tfileWriter.seek(fileWriter.length);\r\n\t\t\t\tfileWriter.write(blob);\r\n\t\t\t\twritten+=blob.size;\r\n\t\t\t\tfileWriter.onwriteend = function(e) {\r\n\t\t\t\t\tif (statuscb) {\r\n\t\t\t\t\t\tabort=statuscb.apply(context,[ fileWriter.length / totalsize,totalsize ]);\r\n\t\t\t\t\t\tif (abort) setTimeout( cb.bind(context,false) , 0) ;\r\n\t\t\t\t \t}\r\n\t\t\t\t\tb++;\r\n\t\t\t\t\tif (!abort) {\r\n\t\t\t\t\t\tif (b<batches.length-1) setTimeout(batch.bind(context,b),0);\r\n\t\t\t\t\t\telse                    finish();\r\n\t\t\t\t \t}\r\n\t\t\t \t};\r\n\t\t\t}, console.error);\r\n\t\t},false);\r\n\t\txhr.send();\r\n\t}\r\n\r\n\tget_size(url,function(size){\r\n\t\ttotalsize=size;\r\n\t\tif (!size) {\r\n\t\t\tif (cb) cb.apply(context,[false]);\r\n\t\t} else {//ready to download\r\n\t\t\trm(tempfn,function(){\r\n\t\t\t\t batches=createBatches(size);\r\n\t\t\t\t if (statuscb) statuscb.apply(context,[ 0, totalsize ]);\r\n\t\t\t\t API.fs.root.getFile(tempfn, {create: 1, exclusive: false}, function(_fileEntry) {\r\n\t\t\t\t\t\t\tfileEntry=_fileEntry;\r\n\t\t\t\t\t\tbatch(0);\r\n\t\t\t\t });\r\n\t\t\t},this);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nvar readFile=function(filename,cb,context) {\r\n\tAPI.fs.root.getFile(filename, {create: false, exclusive: false},function(fileEntry) {\r\n\t\tfileEntry.file(function(file){\r\n\t\t\tvar reader = new FileReader();\r\n\t\t\treader.onloadend = function(e) {\r\n\t\t\t\tif (cb) cb.call(cb,this.result);\r\n\t\t\t};\r\n\t\t\treader.readAsText(file,\"utf8\");\r\n\t\t});\r\n\t}, console.error);\r\n}\r\n\r\nfunction createDir(rootDirEntry, folders,  cb) {\r\n  // Throw out './' or '/' and move on to prevent something like '/foo/.//bar'.\r\n  if (folders[0] == '.' || folders[0] == '') {\r\n    folders = folders.slice(1);\r\n  }\r\n  rootDirEntry.getDirectory(folders[0], {create: true}, function(dirEntry) {\r\n    // Recursively add the new subfolder (if we still have another to create).\r\n    if (folders.length) {\r\n      createDir(dirEntry, folders.slice(1),cb);\r\n    } else {\r\n\t\t\tcb();\r\n\t\t}\r\n  }, cb);\r\n};\r\n\r\n\r\nvar writeFile=function(filename,buf,cb,context){\r\n\tvar write=function(fileEntry){\r\n\t\tfileEntry.createWriter(function(fileWriter) {\r\n\t\t\tfileWriter.write(buf);\r\n\t\t\tfileWriter.onwriteend = function(e) {\r\n\t\t\t\tif (cb) cb.apply(cb,[buf.byteLength]);\r\n\t\t\t};\r\n\t\t}, console.error);\r\n\t}\r\n\r\n\tvar getFile=function(filename){\r\n\t\tAPI.fs.root.getFile(filename, {exclusive:true}, function(fileEntry) {\r\n\t\t\twrite(fileEntry);\r\n\t\t}, function(){\r\n\t\t\t\tAPI.fs.root.getFile(filename, {create:true,exclusive:true}, function(fileEntry) {\r\n\t\t\t\t\twrite(fileEntry);\r\n\t\t\t\t});\r\n\r\n\t\t});\r\n\t}\r\n\tvar slash=filename.lastIndexOf(\"/\");\r\n\tif (slash>-1) {\r\n\t\tcreateDir(API.fs.root, filename.substr(0,slash).split(\"/\"),function(){\r\n\t\t\tgetFile(filename);\r\n\t\t});\r\n\t} else {\r\n\t\tgetFile(filename);\r\n\t}\r\n}\r\n\r\nvar readdir=function(cb,context) {\r\n\tvar dirReader = API.fs.root.createReader();\r\n\tvar out=[],that=this;\r\n\tdirReader.readEntries(function(entries) {\r\n\t\tif (entries.length) {\r\n\t\t\tfor (var i = 0, entry; entry = entries[i]; ++i) {\r\n\t\t\t\tif (entry.isFile) {\r\n\t\t\t\t\tout.push([entry.name,entry.toURL ? entry.toURL() : entry.toURI()]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tAPI.files=out;\r\n\t\tif (cb) cb.apply(context,[out]);\r\n\t}, function(){\r\n\t\tif (cb) cb.apply(context,[null]);\r\n\t});\r\n}\r\nvar getFileURL=function(filename) {\r\n\tif (!API.files ) return null;\r\n\tvar file= API.files.filter(function(f){return f[0]==filename});\r\n\tif (file.length) return file[0][1];\r\n}\r\nvar rm=function(filename,cb,context) {\r\n\tvar url=getFileURL(filename);\r\n\tif (url) rmURL(url,cb,context);\r\n\telse if (cb) cb.apply(context,[false]);\r\n}\r\n\r\nvar rmURL=function(filename,cb,context) {\r\n\twebkitResolveLocalFileSystemURL(filename, function(fileEntry) {\r\n\t\tfileEntry.remove(function() {\r\n\t\t\tif (cb) cb.apply(context,[true]);\r\n\t\t}, console.error);\r\n\t},  function(e){\r\n\t\tif (cb) cb.apply(context,[false]);//no such file\r\n\t});\r\n}\r\nfunction errorHandler(e) {\r\n\tconsole.error('Error: ' +e.name+ \" \"+e.message);\r\n}\r\nvar initfs=function(grantedBytes,cb,context) {\r\n\twebkitRequestFileSystem(PERSISTENT, grantedBytes,  function(fs) {\r\n\t\tAPI.fs=fs;\r\n\t\tAPI.quota=grantedBytes;\r\n\t\treaddir(function(){\r\n\t\t\tAPI.initialized=true;\r\n\t\t\tcb.apply(context,[grantedBytes,fs]);\r\n\t\t},context);\r\n\t}, errorHandler);\r\n}\r\nvar init=function(quota,cb,context) {\r\n\tnavigator.webkitPersistentStorage.requestQuota(quota,\r\n\t\t\tfunction(grantedBytes) {\r\n\t\t\t\tinitfs(grantedBytes,cb,context);\r\n\t\t}, errorHandler\r\n\t);\r\n}\r\nvar queryQuota=function(cb,context) {\r\n\tvar that=this;\r\n\tnavigator.webkitPersistentStorage.queryUsageAndQuota(\r\n\t function(usage,quota){\r\n\t\t\tinitfs(quota,function(){\r\n\t\t\t\tcb.apply(context,[usage,quota]);\r\n\t\t\t},context);\r\n\t});\r\n}\r\nvar API={\r\n\tinit:init\r\n\t,readdir:readdir\r\n\t,checkUpdate:checkUpdate\r\n\t,rm:rm\r\n\t,rmURL:rmURL\r\n\t,getFileURL:getFileURL\r\n\t,writeFile:writeFile\r\n\t,readFile:readFile\r\n\t,download:download\r\n\t,get_head:get_head\r\n\t,get_date:get_date\r\n\t,get_size:get_size\r\n\t,getDownloadSize:get_size\r\n\t,queryQuota:queryQuota\r\n}\r\nmodule.exports=API;\r\n",
    "var appname=\"installer\";\r\nif (typeof ksana==\"undefined\") {\r\n\twindow.ksana={platform:\"chrome\"};\r\n\tif (typeof process!==\"undefined\" && \r\n\t\tprocess.versions && process.versions[\"node-webkit\"]) {\r\n\t\twindow.ksana.platform=\"node-webkit\";\r\n\t}\r\n}\r\nvar switchApp=function(path) {\r\n\tvar fs=require(\"fs\");\r\n\tpath=\"../\"+path;\r\n\tappname=path;\r\n\tdocument.location.href= path+\"/index.html\"; \r\n\tprocess.chdir(path);\r\n}\r\nvar downloader={};\r\nvar rootPath=\"\";\r\n\r\nvar deleteApp=function(app) {\r\n\tconsole.error(\"not allow on PC, do it in File Explorer/ Finder\");\r\n}\r\nvar username=function() {\r\n\treturn \"\";\r\n}\r\nvar useremail=function() {\r\n\treturn \"\"\r\n}\r\nvar runtime_version=function() {\r\n\treturn \"1.4\";\r\n}\r\n\r\n//copy from liveupdate\r\nvar jsonp=function(url,dbid,callback,context) {\r\n  var script=document.getElementById(\"jsonp2\");\r\n  if (script) {\r\n    script.parentNode.removeChild(script);\r\n  }\r\n  window.jsonp_handler=function(data) {\r\n    if (typeof data==\"object\") {\r\n      data.dbid=dbid;\r\n      callback.apply(context,[data]);    \r\n    }  \r\n  }\r\n  window.jsonp_error_handler=function() {\r\n    console.error(\"url unreachable\",url);\r\n    callback.apply(context,[null]);\r\n  }\r\n  script=document.createElement('script');\r\n  script.setAttribute('id', \"jsonp2\");\r\n  script.setAttribute('onerror', \"jsonp_error_handler()\");\r\n  url=url+'?'+(new Date().getTime());\r\n  script.setAttribute('src', url);\r\n  document.getElementsByTagName('head')[0].appendChild(script); \r\n}\r\n\r\n\r\nvar loadKsanajs=function(){\r\n\r\n\tif (typeof process!=\"undefined\" && !process.browser) {\r\n\t\tvar ksanajs=require(\"fs\").readFileSync(\"./ksana.js\",\"utf8\").trim();\r\n\t\tdownloader=require(\"./downloader\");\r\n\t\tksana.js=JSON.parse(ksanajs.substring(14,ksanajs.length-1));\r\n\t\trootPath=process.cwd();\r\n\t\trootPath=require(\"path\").resolve(rootPath,\"..\").replace(/\\\\/g,\"/\")+'/';\r\n\t\tksana.ready=true;\r\n\t} else{\r\n\t\tvar url=window.location.origin+window.location.pathname.replace(\"index.html\",\"\")+\"ksana.js\";\r\n\t\tjsonp(url,appname,function(data){\r\n\t\t\tksana.js=data;\r\n\t\t\tksana.ready=true;\r\n\t\t});\r\n\t}\r\n}\r\n\r\nloadKsanajs();\r\n\r\nvar boot=function(appId,cb) {\r\n\tif (typeof appId==\"function\") {\r\n\t\tcb=appId;\r\n\t\tappId=\"unknownapp\";\r\n\t}\r\n\tif (!ksana.js && ksana.platform==\"node-webkit\") {\r\n\t\tloadKsanajs();\r\n\t}\r\n\tksana.appId=appId;\r\n\tvar timer=setInterval(function(){\r\n\t\t\tif (ksana.ready){\r\n\t\t\t\tclearInterval(timer);\r\n\t\t\t\tcb();\r\n\t\t\t}\r\n\t\t});\r\n}\r\n\r\n\r\nvar ksanagap={\r\n\tplatform:\"node-webkit\",\r\n\tstartDownload:downloader.startDownload,\r\n\tdownloadedByte:downloader.downloadedByte,\r\n\tdownloadingFile:downloader.downloadingFile,\r\n\tcancelDownload:downloader.cancelDownload,\r\n\tdoneDownload:downloader.doneDownload,\r\n\tswitchApp:switchApp,\r\n\trootPath:rootPath,\r\n\tdeleteApp: deleteApp,\r\n\tusername:username, //not support on PC\r\n\tuseremail:username,\r\n\truntime_version:runtime_version,\r\n\tboot:boot\r\n}\r\nmodule.exports=ksanagap;",
    "var started=false;\r\nvar timer=null;\r\nvar bundledate=null;\r\nvar get_date=require(\"./html5fs\").get_date;\r\nvar checkIfBundleUpdated=function() {\r\n\tget_date(\"bundle.js\",function(date){\r\n\t\tif (bundledate &&bundledate!=date){\r\n\t\t\tlocation.reload();\r\n\t\t}\r\n\t\tbundledate=date;\r\n\t});\r\n}\r\nvar livereload=function() {\r\n\tif(window.location.origin.indexOf(\"//127.0.0.1\")===-1) return;\r\n\r\n\tif (started) return;\r\n\r\n\ttimer1=setInterval(function(){\r\n\t\tcheckIfBundleUpdated();\r\n\t},2000);\r\n\tstarted=true;\r\n}\r\n\r\nmodule.exports=livereload;",
    "function mkdirP (p, mode, f, made) {\r\n     var path = nodeRequire('path');\r\n     var fs = nodeRequire('fs');\r\n\t\r\n    if (typeof mode === 'function' || mode === undefined) {\r\n        f = mode;\r\n        mode = 0x1FF & (~process.umask());\r\n    }\r\n    if (!made) made = null;\r\n\r\n    var cb = f || function () {};\r\n    if (typeof mode === 'string') mode = parseInt(mode, 8);\r\n    p = path.resolve(p);\r\n\r\n    fs.mkdir(p, mode, function (er) {\r\n        if (!er) {\r\n            made = made || p;\r\n            return cb(null, made);\r\n        }\r\n        switch (er.code) {\r\n            case 'ENOENT':\r\n                mkdirP(path.dirname(p), mode, function (er, made) {\r\n                    if (er) cb(er, made);\r\n                    else mkdirP(p, mode, cb, made);\r\n                });\r\n                break;\r\n\r\n            // In the case of any other error, just see if there's a dir\r\n            // there already.  If so, then hooray!  If not, then something\r\n            // is borked.\r\n            default:\r\n                fs.stat(p, function (er2, stat) {\r\n                    // if the stat fails, then that's super weird.\r\n                    // let the original error be the failure reason.\r\n                    if (er2 || !stat.isDirectory()) cb(er, made)\r\n                    else cb(null, made);\r\n                });\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\nmkdirP.sync = function sync (p, mode, made) {\r\n    var path = nodeRequire('path');\r\n    var fs = nodeRequire('fs');\r\n    if (mode === undefined) {\r\n        mode = 0x1FF & (~process.umask());\r\n    }\r\n    if (!made) made = null;\r\n\r\n    if (typeof mode === 'string') mode = parseInt(mode, 8);\r\n    p = path.resolve(p);\r\n\r\n    try {\r\n        fs.mkdirSync(p, mode);\r\n        made = made || p;\r\n    }\r\n    catch (err0) {\r\n        switch (err0.code) {\r\n            case 'ENOENT' :\r\n                made = sync(path.dirname(p), mode, made);\r\n                sync(p, mode, made);\r\n                break;\r\n\r\n            // In the case of any other error, just see if there's a dir\r\n            // there already.  If so, then hooray!  If not, then something\r\n            // is borked.\r\n            default:\r\n                var stat;\r\n                try {\r\n                    stat = fs.statSync(p);\r\n                }\r\n                catch (err1) {\r\n                    throw err0;\r\n                }\r\n                if (!stat.isDirectory()) throw err0;\r\n                break;\r\n        }\r\n    }\r\n\r\n    return made;\r\n};\r\n\r\nmodule.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;\r\n"
  ]
}